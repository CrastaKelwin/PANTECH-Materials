LARM LINKER/LOCATER V2.53                                                               04/25/2009  14:43:42  PAGE 1





ASSEMBLER CODE LISTING OF MODULE:  ..\..\..\..\..\..\..\..\Desktop\DEMO (STARTUP)



*** Disassembly of Segment '?CON?DEMO':
  220: 		len += putConstString("var REQ=");
 00000120            ALIGN       1
 00000120          ??S_11:
 00000120            DB          'var REQ=',0x00
  213: 		len += putConstString("var PORT1_23_16=");
 00000129            ALIGN       1
 00000129          ??S_10:
 00000129            DB          'var PORT1_23_16=',0x00
  207: 		len += putConstString("var PORT1_31_24=");
 0000013A            ALIGN       1
 0000013A          ??S_9:
 0000013A            DB          'var PORT1_31_24=',0x00
  202: 		len += putConstString("var AN1=");
 0000014B            ALIGN       1
 0000014B          ??S_8:
 0000014B            DB          'var AN1=',0x00
  198: 		len += putConstString(";");
 00000154            ALIGN       1
 00000154          ??S_7:
 00000154            DB          ';',0x00
  196: 		len += putConstString("var AN0=");
 00000156            ALIGN       1
 00000156          ??S_6:
 00000156            DB          'var AN0=',0x00
   63: const char *indexPage = "<HTML><HEAD></HEAD><BODY>\
 0000015F            ALIGN       1
 0000015F          ??S_5:
 0000015F            DB          '<HTML><HEAD></HEAD><BODY><h1> ARM& LPC'
 00000185            DB          '214x </h1><h2>  WEB SERVER  </h2><a hr'
 000001AB            DB          'ef=/>Reload</a><script src=/s></script'
 000001D1            DB          '><table><tr><td valign=top><table bord'
 000001F7            DB          'er=2 style="font-size:25px ;font-famil'
 0000021D            DB          'y: terminal ;"><tr><th colspan=3>ADC</'
 00000243            DB          'th></tr><tr><td>AN0</td><td><script>do'
 00000269            DB          'cument.write(AN0)</script></td></tr><t'
 0000028F            DB          'r><td>AN1</td><td><script>document.wri'
 000002B5            DB          'te(AN1)</script></td></tr></table></td'
 000002DB            DB          '><td><table border=1 style="font-size:'
 00000301            DB          '15px ;font-family: terminal ;"><tr><th'
 00000327            DB          ' colspan=3>P1[31..24]</th></tr><script'
 0000034D            DB          '>var str,i;str="";for(i=0;i<8;i++){str'
 00000373            DB          '+="<tr><td bgcolor=blue>BUTTON #"+i+"<'
 00000399            DB          '/td>";if(PORT1_31_24&(1<<i)){str+="<td'
 000003BF            DB          ' bgcolor=green>ON";}else {str+="<td bg'
 000003E5            DB          'color=#cccccc>OFF";}str+="</td></tr>";'
 0000040B            DB          '}document.write(str) ;</script></table'
 00000431            DB          '></td><td><table border=2 style="font-'
 00000457            DB          'size:15px ;font-family: terminal ;"><t'
 0000047D            DB          'r><th colspan=4>P1[23..16]</th></tr><s'
 000004A3            DB          'cript>var str,i;str="";for(i=0;i<8;i++'
 000004C9            DB          '){str+="<tr><td bgcolor=orange>LED #"+'
 000004EF            DB          'i+"</td>";if(PORT1_23_16&(1<<i)){str+='
 00000515            DB          '"<td bgcolor=blue>ON";}else {str+="<td'
 0000053B            DB          ' bgcolor=#cccccc>OFF";}str+="</td><td>'
 00000561            DB          '<a href=/t"+i+">Toggle</a></td></tr>";'
 00000587            DB          '}document.write(str) ;</script></table'
 000005AD            DB          '></td></tr></table>This is HTTP reques'
 000005D3            DB          't #<script>document.write(REQ)</script'
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 2


 000005F9            DB          '></BODY></HTML>',0x00
   56: const unsigned char httpHeader[] = "HTTP/1.1 200 OK\nContent-type: ";		// HTTP header
 00000609            ALIGN       1
 00000609          httpHeader:
 00000609            DB          'HTTP/1.1 200 OK',0x0A,'Content-type: ',0x00
   57: const unsigned char httpMimeTypeHTML[] = "text/html\n\n";								// HTML MIME type
 00000628            ALIGN       1
 00000628          httpMimeTypeHTML:
 00000628            DB          'text/html',0x0A,0x0A,0x00
   58: const unsigned char httpMimeTypeScript[] = "text/plain\n\n";						// TEXT MIME type
 00000634            ALIGN       1
 00000634          httpMimeTypeScript:
 00000634            DB          'text/plain',0x0A,0x0A,0x00

*** Disassembly of Segment '?CON?enc28j60':
 00000644            ALIGN       1
 00000644          ??S_1:
 00000644            DB          0x00,0x01,0x08,0x00,0x06,0x04,0x00,0x01
 0000064C            DB          0x00

*** Disassembly of Segment '?C_CLRSEG':
 00000650  40000490  DD          ?DT0?DEMO
 00000654  400004D6  DD          ?DT0?DEMO + 0x46
 00000658  400004D8  DD          ?DT0?enc28j60
 0000065C  40000517  DD          ?DT0?enc28j60 + 0x3F
 00000660  40000518  DD          ?DT0?SPIhw
 00000664  40000531  DD          ?DT0?SPIhw + 0x19
 00000668  00000000  DD          0x0
 0000066C  00000000  DD          0x0

*** Disassembly of Segment '?C_INITSEG':
 00000670  40000490  DD          indexPage
 00000674  40000494  DD          indexPage + 0x4
 00000678  0000015F  DD          ??S_5
 0000067C  40000498  DD          httpMethod
 00000680  400004A8  DD          httpMethod + 0x10
 00000684            DB          'GET /',0x00
 0000068A  00        DB          0x0
 0000068B  14        DB          0x14
 0000068C  A5        DB          0xA5
 0000068D  76        DB          0x76
 0000068E  19        DB          0x19
 0000068F  3F        DB          0x3F
 00000690  C0        DB          0xC0
 00000691  A8        DB          0xA8
 00000692  14        DB          0x14
 00000693  3C        DB          0x3C
 00000694  00000000  DD          0x0
 00000698  00000000  DD          0x0

*** Disassembly of Segment 'STACK':
   70:         DS   (USR_Stack_Size+3)&~3  ; Stack for User/System Mode 
 40000000            DS          1024
   71:         DS   (SVC_Stack_Size+3)&~3  ; Stack for Supervisor Mode
 40000400            DS          4
   72:         DS   (IRQ_Stack_Size+3)&~3  ; Stack for Interrupt Mode
 40000404            DS          128
   73:         DS   (FIQ_Stack_Size+3)&~3  ; Stack for Fast Interrupt Mode 
 40000484            DS          4
   74:         DS   (ABT_Stack_Size+3)&~3  ; Stack for Abort Mode
 40000488            DS          4
   75:         DS   (UND_Stack_Size+3)&~3  ; Stack for Undefined Mode
 4000048C            DS          4
   76: Top_Stack:
 40000490          Top_Stack:
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 3



*** Disassembly of Segment '?DT0?DEMO':
   63: const char *indexPage = "<HTML><HEAD></HEAD><BODY>\
 40000490            ALIGN       4
 40000490          indexPage:
 40000490            DS          4
  108: unsigned long httpCounter = 0;																			// counter of HTTP requests
 40000494            ALIGN       4
 40000494          httpCounter:
 40000494            DS          4
   59: unsigned char httpMethod[] = "GET /";
 40000498            ALIGN       1
 40000498          httpMethod:
 40000498            DS          6
  104: unsigned char myMacAddr[6] = {0x00, 0x14, 0xA5, 0x76, 0x19, 0x3f};	// my MAC address
 4000049E            ALIGN       1
 4000049E          myMacAddr:
 4000049E            DS          6
  105: unsigned char myIpAddr[4] = {192, 168, 20, 60};											// my IP address
 400004A4            ALIGN       1
 400004A4          myIpAddr:
 400004A4            DS          4
  106: unsigned char getRequest[15];																				// HTTP request buffer
 400004A8            ALIGN       1
 400004A8          getRequest:
 400004A8            DS          15
  107: unsigned char dyna[31];																							// buffer for dynamic response
 400004B7            ALIGN       1
 400004B7          dyna:
 400004B7            DS          31

*** Disassembly of Segment '?DT0?enc28j60':
 400004D8            ALIGN       4
 400004D8          ENC28J60_pktLen:
 400004D8            DS          4
 400004DC            ALIGN       4
 400004DC          pENC28J60_csPIN:
 400004DC            DS          4
 400004E0            ALIGN       4
 400004E0          pENC28J60_csDIR:
 400004E0            DS          4
 400004E4            ALIGN       4
 400004E4          pENC28J60_csSET:
 400004E4            DS          4
 400004E8            ALIGN       4
 400004E8          pENC28J60_csCLR:
 400004E8            DS          4
 400004EC            ALIGN       4
 400004EC          pENC28J60_rstPIN:
 400004EC            DS          4
 400004F0            ALIGN       4
 400004F0          pENC28J60_rstDIR:
 400004F0            DS          4
 400004F4            ALIGN       4
 400004F4          pENC28J60_rstSET:
 400004F4            DS          4
 400004F8            ALIGN       4
 400004F8          pENC28J60_rstCLR:
 400004F8            DS          4
 400004FC            ALIGN       4
 400004FC          ENC28J60_CSmask0:
 400004FC            DS          4
 40000500            ALIGN       4
 40000500          ENC28J60_CSmask1:
 40000500            DS          4
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 4


 40000504            ALIGN       4
 40000504          ENC28J60_RSTmask0:
 40000504            DS          4
 40000508            ALIGN       4
 40000508          ENC28J60_RSTmask1:
 40000508            DS          4
 4000050C            ALIGN       1
 4000050C          ENC28J60_macAddr:
 4000050C            DS          6
 40000512            ALIGN       1
 40000512          ENC28J60_ipAddr:
 40000512            DS          4
 40000516            ALIGN       1
 40000516          ENC28J60_closeTCP:
 40000516            DS          1

*** Disassembly of Segment '?DT0?SPIhw':
 40000518            ALIGN       4
 40000518          pSPIswPIN:
 40000518            DS          4
 4000051C            ALIGN       4
 4000051C          pSPIswDIR:
 4000051C            DS          4
 40000520            ALIGN       4
 40000520          pSPIswSET:
 40000520            DS          4
 40000524            ALIGN       4
 40000524          pSPIswCLR:
 40000524            DS          4
 40000528            ALIGN       4
 40000528          CSmask0:
 40000528            DS          4
 4000052C            ALIGN       4
 4000052C          CSmask1:
 4000052C            DS          4
 40000530            ALIGN       1
 40000530          posCS:
 40000530            DS          1

*** Disassembly of Segment 'STARTUPCODE':
 FILE: 'Startup.S'
  170: __startup       PROC    CODE32
 00000000            ; SCOPE-START
  185: Vectors:        LDR     PC,Reset_Addr         
 00000000          Vectors:
 00000000  E59FF018  LDR         R15,[R15,#Reset_Addr]
  186:                 LDR     PC,Undef_Addr
 00000004  E59FF018  LDR         R15,[R15,#Undef_Addr]
  187:                 LDR     PC,SWI_Addr
 00000008  E59FF018  LDR         R15,[R15,#SWI_Addr]
  188:                 LDR     PC,PAbt_Addr
 0000000C  E59FF018  LDR         R15,[R15,#PAbt_Addr]
  189:                 LDR     PC,DAbt_Addr
 00000010  E59FF018  LDR         R15,[R15,#DAbt_Addr]
  190:                 NOP                            /* Reserved Vector */
 00000014  E1A00000  NOP       
  192:                 LDR     PC,[PC, #-0x0FF0]      /* Vector from VicVectAddr */
 00000018  E51FFFF0  LDR         R15,[R15,#-0xFF0]
  193:                 LDR     PC,FIQ_Addr
 0000001C  E59FF018  LDR         R15,[R15,#FIQ_Addr]
  195: Reset_Addr:     DD      Reset_Handler
 00000020          Reset_Addr:
 00000020  00000040  DD          Reset_Handler
  196: Undef_Addr:     DD      Undef_Handler?A
 00000024          Undef_Addr:
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 5


 00000024  000030F0  DD          Undef_Handler?A
  197: SWI_Addr:       DD      SWI_Handler?A
 00000028          SWI_Addr:
 00000028  000030EC  DD          SWI_Handler?A
  198: PAbt_Addr:      DD      PAbt_Handler?A
 0000002C          PAbt_Addr:
 0000002C  000030E8  DD          PAbt_Handler?A
  199: DAbt_Addr:      DD      DAbt_Handler?A
 00000030          DAbt_Addr:
 00000030  000030E4  DD          DAbt_Handler?A
  200:                 DD      0                      /* Reserved Address */
 00000034  00000000  DD          0x0
  201: IRQ_Addr:       DD      IRQ_Handler?A
 00000038          IRQ_Addr:
 00000038  000030E0  DD          IRQ_Handler?A
  202: FIQ_Addr:       DD      FIQ_Handler?A
 0000003C          FIQ_Addr:
 0000003C  000030DC  DD          FIQ_Handler?A
  207: Reset_Handler:  
 00000040          Reset_Handler:
  211:                 LDR     R0, =VPBDIV
 00000040  E59F00BC  LDR         R0,[PC,+188] ; PoolRef @0x104
  212:                 LDR     R1, =VPBDIV_Val
 00000044  E3A01000  MOV         R1,#VPBDIV_Val
  213:                 STR     R1, [R0]
 00000048  E5801000  STR         R1,[R0]
  218:                 LDR     R0, =PLL_BASE
 0000004C  E59F00B4  LDR         R0,[PC,+180] ; PoolRef @0x108
  219:                 MOV     R1, #0xAA
 00000050  E3A010AA  MOV         R1,#0x00AA
  220:                 MOV     R2, #0x55
 00000054  E3A02055  MOV         R2,#0x0055
  223:                 MOV     R3, #PLLCFG_Val
 00000058  E3A03024  MOV         R3,#0x0024
  224:                 STR     R3, [R0, #PLLCFG_OFS] 
 0000005C  E5803004  STR         R3,[R0,#PLLCFG_OFS]
  225:                 MOV     R3, #PLLCON_PLLE
 00000060  E3A03001  MOV         R3,#0x0001
  226:                 STR     R3, [R0, #PLLCON_OFS]
 00000064  E5803000  STR         R3,[R0,#PLLCON_OFS]
  227:                 STR     R1, [R0, #PLLFEED_OFS]
 00000068  E580100C  STR         R1,[R0,#PLLFEED_OFS]
  228:                 STR     R2, [R0, #PLLFEED_OFS]
 0000006C  E580200C  STR         R2,[R0,#PLLFEED_OFS]
  231: PLL_Loop:       LDR     R3, [R0, #PLLSTAT_OFS]
 00000070          PLL_Loop:
 00000070  E5903008  LDR         R3,[R0,#PLLSTAT_OFS]
  232:                 ANDS    R3, R3, #PLLSTAT_PLOCK
 00000074  E2133B01  ANDS        R3,R3,#0x0400
  233:                 BEQ     PLL_Loop
 00000078  0AFFFFFC  BEQ         PLL_Loop  ; Targ=0x70
  236:                 MOV     R3, #(PLLCON_PLLE | PLLCON_PLLC)
 0000007C  E3A03003  MOV         R3,#0x0003
  237:                 STR     R3, [R0, #PLLCON_OFS]
 00000080  E5803000  STR         R3,[R0,#PLLCON_OFS]
  238:                 STR     R1, [R0, #PLLFEED_OFS]
 00000084  E580100C  STR         R1,[R0,#PLLFEED_OFS]
  239:                 STR     R2, [R0, #PLLFEED_OFS]
 00000088  E580200C  STR         R2,[R0,#PLLFEED_OFS]
  244:                 LDR     R0, =MAM_BASE
 0000008C  E59F0078  LDR         R0,[PC,+120] ; PoolRef @0x10C
  245:                 MOV     R1, #MAMTIM_Val
 00000090  E3A01004  MOV         R1,#0x0004
  246:                 STR     R1, [R0, #MAMTIM_OFS] 
 00000094  E5801004  STR         R1,[R0,#MAMTIM_OFS]
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 6


  247:                 MOV     R1, #MAMCR_Val
 00000098  E3A01002  MOV         R1,#0x0002
  248:                 STR     R1, [R0, #MAMCR_OFS] 
 0000009C  E5801000  STR         R1,[R0,#MAMCR_OFS]
  269:                 LDR     R0, =Top_Stack
 000000A0  E59F0068  LDR         R0,[PC,+104] ; PoolRef @0x110
  272:                 MSR     CPSR_c, #Mode_UND|I_Bit|F_Bit
 000000A4  E321F0DB  MSR         CPSR_c,#0xDB
  273:                 MOV     SP, R0
 000000A8  E1A0D000  MOV         R13,R0
  274:                 SUB     R0, R0, #UND_Stack_Size
 000000AC  E2400004  SUB         R0,R0,#0x0004
  277:                 MSR     CPSR_c, #Mode_ABT|I_Bit|F_Bit
 000000B0  E321F0D7  MSR         CPSR_c,#0xD7
  278:                 MOV     SP, R0
 000000B4  E1A0D000  MOV         R13,R0
  279:                 SUB     R0, R0, #ABT_Stack_Size
 000000B8  E2400004  SUB         R0,R0,#0x0004
  282:                 MSR     CPSR_c, #Mode_FIQ|I_Bit|F_Bit
 000000BC  E321F0D1  MSR         CPSR_c,#0xD1
  283:                 MOV     SP, R0
 000000C0  E1A0D000  MOV         R13,R0
  284:                 SUB     R0, R0, #FIQ_Stack_Size
 000000C4  E2400004  SUB         R0,R0,#0x0004
  287:                 MSR     CPSR_c, #Mode_IRQ|I_Bit|F_Bit
 000000C8  E321F0D2  MSR         CPSR_c,#0xD2
  288:                 MOV     SP, R0
 000000CC  E1A0D000  MOV         R13,R0
  289:                 SUB     R0, R0, #IRQ_Stack_Size
 000000D0  E2400080  SUB         R0,R0,#0x0080
  292:                 MSR     CPSR_c, #Mode_SVC|I_Bit|F_Bit
 000000D4  E321F0D3  MSR         CPSR_c,#0xD3
  293:                 MOV     SP, R0
 000000D8  E1A0D000  MOV         R13,R0
  294:                 SUB     R0, R0, #SVC_Stack_Size
 000000DC  E2400004  SUB         R0,R0,#0x0004
  297:                 MSR     CPSR_c, #Mode_USR
 000000E0  E321F010  MSR         CPSR_c,#Mode_USR
  298:                 MOV     SP, R0
 000000E4  E1A0D000  MOV         R13,R0
  301:                 LDR     R0,=?C?INIT
 000000E8  E59F0024  LDR         R0,[PC,+36] ; PoolRef @0x114
  302:                 TST     R0,#1       ; Bit-0 set: INIT is Thumb
 000000EC  E3100001  TST         R0,#0x0001
  303:                 LDREQ   LR,=exit?A  ; ARM Mode
 000000F0  059FE020  LDREQ       R14,[PC,+32] ; PoolRef @0x118
  304:                 LDRNE   LR,=exit?T  ; Thumb Mode
 000000F4  159FE020  LDRNE       R14,[PC,+32] ; PoolRef @0x11C
  305:                 BX      R0
 000000F8  E12FFF10  BX          R0
  306:                 ENDP
 000000FC            ; SCOPE-END
  309: exit?A          PROC    CODE32
 000000FC            ; SCOPE-START
  310:                 B       exit?A
 000000FC  EAFFFFFE  B           exit?A  ; Targ=0xFC
  311:                 ENDP
 00000100            ; SCOPE-END
  314: exit?T          PROC    CODE16
 00000100            ; SCOPE-START
  315: exit:           B       exit?T
 00000100          exit:
 00000100  E7FE      B           exit?T  ; T=0x00000100
  316:                 ENDP
 00000102            ; SCOPE-END
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 7


 00000102            ALIGN       4
 00000104  E01FC100  DD          VPBDIV		; POOL-Entry U=1
 00000108  E01FC080  DD          PLL_BASE		; POOL-Entry U=1
 0000010C  E01FC000  DD          MAM_BASE		; POOL-Entry U=1
 00000110  40000490  DD          Top_Stack		; POOL-Entry U=1
 00000114  00000B10  DD          ?C?INIT		; POOL-Entry U=1
 00000118  000000FC  DD          exit?A		; POOL-Entry U=1
 0000011C  00000101  DD          exit?T		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_userUDP?A?DEMO':
 FILE: 'DEMO.c'
 0000069C          ENC28J60_userUDP?A:  ; FUNCTION START
  257: unsigned long ENC28J60_userUDP(unsigned char *remoteHost, unsigned long remotePort, unsigned long destPort, unsig
>> ned long reqLength)
 0000069C  E92D40F0  STMDB       R13!,{R4-R7,LR}
 000006A0  E1A05003  MOV         R5,R3 ; reqLength
 000006A4  ---- Variable 'reqLength' assigned to Register 'R5' ----
 000006A4  E1A06002  MOV         R6,R2 ; destPort
 000006A8  ---- Variable 'destPort' assigned to Register 'R6' ----
 000006A8  E1A07001  MOV         R7,R1 ; remotePort
 000006AC  ---- Variable 'remotePort' assigned to Register 'R7' ----
 000006AC  E1A09000  MOV         R9,R0 ; remoteHost
 000006B0  ---- Variable 'remoteHost' assigned to Register 'R9' ----
  258: {
 000006B0            ; SCOPE-START
  265: 	ByteToStr(remoteHost[0], dyna);				// first IP address byte
 000006B0  E1A00009  MOV         R0,R9 ; remoteHost
 000006B4  E5D00000  LDRB        R0,[R0,#0x0] ; remoteHost
 000006B8  E59F40EC  LDR         R4,[PC,+236] ; PoolRef @0x7AC ; dyna
 000006BC  E59F10E8  LDR         R1,[PC,+232] ; PoolRef @0x7AC ; dyna
 000006C0  EB0001D5  BL          ByteToStr?A  ; Targ=0xE1C
  266: 	dyna[3] = '.';
 000006C4  E3A0002E  MOV         R0,#0x2E
 000006C8  E5C40003  STRB        R0,[R4,#0x3] ; dyna
  267: 	ByteToStr(remoteHost[1], dyna + 4);		// second
 000006CC  E1A00009  MOV         R0,R9 ; remoteHost
 000006D0  E5D00001  LDRB        R0,[R0,#0x1]
 000006D4  E59F10D4  LDR         R1,[PC,+212] ; PoolRef @0x7B0 ; dyna+4
 000006D8  EB0001CF  BL          ByteToStr?A  ; Targ=0xE1C
  268: 	dyna[7] = '.';
 000006DC  E3A0002E  MOV         R0,#0x2E
 000006E0  E5C40007  STRB        R0,[R4,#0x7] ; dyna
  269: 	ByteToStr(remoteHost[2], dyna + 8);		// third
 000006E4  E1A00009  MOV         R0,R9 ; remoteHost
 000006E8  E5D00002  LDRB        R0,[R0,#0x2]
 000006EC  E59F10C0  LDR         R1,[PC,+192] ; PoolRef @0x7B4 ; dyna+8
 000006F0  EB0001C9  BL          ByteToStr?A  ; Targ=0xE1C
  270: 	dyna[11] = '.';
 000006F4  E3A0002E  MOV         R0,#0x2E
 000006F8  E5C4000B  STRB        R0,[R4,#0xB] ; dyna
  271: 	ByteToStr(remoteHost[3], dyna + 12);	// fourth
 000006FC  E1A00009  MOV         R0,R9 ; remoteHost
 00000700  E5D00003  LDRB        R0,[R0,#0x3]
 00000704  E59F10AC  LDR         R1,[PC,+172] ; PoolRef @0x7B8 ; dyna+12
 00000708  EB0001C3  BL          ByteToStr?A  ; Targ=0xE1C
  273: 	dyna[15] = ':';												// add separator
 0000070C  E3A0003A  MOV         R0,#0x3A
 00000710  E5C4000F  STRB        R0,[R4,#0xF] ; dyna
  276: 	IntToStr(remotePort, dyna + 16);
 00000714  E1A00007  MOV         R0,R7 ; remotePort
 00000718  E59F109C  LDR         R1,[PC,+156] ; PoolRef @0x7BC ; dyna+16
 0000071C  EB00024D  BL          IntToStr?A  ; Targ=0x1058
  277: 	dyna[22] = '[';
 00000720  E3A0005B  MOV         R0,#0x5B
 00000724  E5C40016  STRB        R0,[R4,#0x16] ; dyna
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 8


  278: 	IntToStr(destPort, dyna + 23);
 00000728  E1A00006  MOV         R0,R6 ; destPort
 0000072C  E59F108C  LDR         R1,[PC,+140] ; PoolRef @0x7C0 ; dyna+23
 00000730  EB000248  BL          IntToStr?A  ; Targ=0x1058
  279: 	dyna[29] = ']';
 00000734  E3A0005D  MOV         R0,#0x5D
 00000738  E5C4001D  STRB        R0,[R4,#0x1D] ; dyna
  280: 	dyna[30] = 0;
 0000073C  E3A00000  MOV         R0,#0x0
 00000740  E5C4001E  STRB        R0,[R4,#0x1E] ; dyna
  283: 	len = 30 + reqLength;
 00000744  E1A04005  MOV         R4,R5 ; reqLength
 00000748  E284401E  ADD         R4,R4,#0x001E ; reqLength
 0000074C  ---- Variable 'len' assigned to Register 'R4' ----
  286: 	ptr = dyna;
 0000074C  E59F6058  LDR         R6,[PC,+88] ; PoolRef @0x7AC ; dyna
 00000750  ---- Variable 'ptr' assigned to Register 'R6' ----
  287: 	while (*ptr)
 00000750  EA000003  B           L_26  ; Targ=0x764
 00000754          L_28:
 00000754  E1A00006  MOV         R0,R6 ; ptr
 00000758  E2806001  ADD         R6,R0,#0x0001 ; ptr
 0000075C  E5D00000  LDRB        R0,[R0,#0x0] ; ptr
 00000760  EB00035A  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00000764          L_26:
 00000764  E1A00006  MOV         R0,R6 ; ptr
 00000768  E5D00000  LDRB        R0,[R0,#0x0] ; ptr
 0000076C  E3500000  CMP         R0,#0x0000
 00000770  1AFFFFF7  BNE         L_28  ; Targ=0x754
  291: 	while (reqLength--)
 00000774  EA000006  B           L_30  ; Targ=0x794
 00000778          L_32:
 00000778  EB00036D  BL          ENC28J60_getByte?A  ; Targ=0x1534
 0000077C  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_getByte?A
 00000780  E1A00C20  MOV         R0,R0,LSR #24
 00000784  EB000194  BL          toupper?A  ; Targ=0xDDC
 00000788  E1A00C00  MOV         R0,R0,LSL #24 ; toupper?A
 0000078C  E1A00C20  MOV         R0,R0,LSR #24
 00000790  EB00034E  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00000794          L_30:
 00000794  E1A00005  MOV         R0,R5 ; reqLength
 00000798  E2405001  SUB         R5,R0,#0x0001 ; reqLength
 0000079C  E3500000  CMP         R0,#0x0000 ; reqLength
 000007A0  1AFFFFF4  BNE         L_32  ; Targ=0x778
  294: 	return (len);		// back to the library with the length of the UDP reply
 000007A4  E1A00004  MOV         R0,R4 ; len
 000007A8            ; SCOPE-END
  295: }
 000007A8  E8BD80F0  LDMIA       R13!,{R4-R7,PC}
 000007AC            ; END 'ENC28J60_userUDP?A'

 000007AC  400004B7  DD          dyna		; POOL-Entry U=3
 000007B0  400004BB  DD          dyna + 0x4		; POOL-Entry U=1
 000007B4  400004BF  DD          dyna + 0x8		; POOL-Entry U=1
 000007B8  400004C3  DD          dyna + 0xC		; POOL-Entry U=1
 000007BC  400004C7  DD          dyna + 0x10		; POOL-Entry U=1
 000007C0  400004CE  DD          dyna + 0x17		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_userTCP?A?DEMO':
 FILE: 'DEMO.c'
 000007C4          ENC28J60_userTCP?A:  ; FUNCTION START
  160: unsigned long ENC28J60_userTCP(unsigned char *remoteHost, unsigned long remotePort, unsigned long localPort, unsi
>> gned long reqLength)
 000007C4  E92D4070  STMDB       R13!,{R4-R6,LR}
 000007C8  ---- Variable 'reqLength' assigned to Register 'R3' ----
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 9


 000007C8  ---- Variable 'localPort' assigned to Register 'R2' ----
 000007C8  ---- Variable 'remotePort' assigned to Register 'R1' ----
 000007C8  ---- Variable 'remoteHost' assigned to Register 'R0' ----
  161: {
 000007C8            ; SCOPE-START
  168: 	i = (unsigned long) remoteHost;
 000007C8  E1A06000  MOV         R6,R0 ; remoteHost
 000007CC  ---- Variable 'i' assigned to Register 'R6' ----
  169: 	i = remotePort;
 000007CC  E1A06001  MOV         R6,R1 ; remotePort
  170: 	i = reqLength;
 000007D0  E1A06003  MOV         R6,R3 ; reqLength
  172: 	len = 0;
 000007D4  E3A00000  MOV         R0,#0x0
 000007D8  E1A04000  MOV         R4,R0 ; len
 000007DC  ---- Variable 'len' assigned to Register 'R4' ----
  173: 	bitMask = 0;
 000007DC  E1A05000  MOV         R5,R0 ; bitMask
 000007E0  ---- Variable 'bitMask' assigned to Register 'R5' ----
  175: 	if (localPort != 80)			// I listen only to web request on port 80
 000007E0  E1A01002  MOV         R1,R2 ; localPort
 000007E4  E3510050  CMP         R1,#0x0050 ; localPort
 000007E8  0A000000  BEQ         L_17  ; Targ=0x7F0
  176: 		return(0) ;
 000007EC  EA000096  B           L_12  ; Targ=0xA4C
  179: 	for (i = 0; i < 10; i++)
 000007F0          L_17:
 000007F0  E1A06000  MOV         R6,R0 ; i
 000007F4          L_16:
  180: 		getRequest[i] = ENC28J60_getByte();
 000007F4  EB00034E  BL          ENC28J60_getByte?A  ; Targ=0x1534
 000007F8  E1A02006  MOV         R2,R6 ; i
 000007FC  E59F124C  LDR         R1,[PC,+588] ; PoolRef @0xA50 ; getRequest
 00000800  E7C10002  STRB        R0,[R1,+R2]
 00000804  E2866001  ADD         R6,R6,#0x0001 ; i
 00000808  E1A00006  MOV         R0,R6 ; i
 0000080C  E350000A  CMP         R0,#0x000A ; i
 00000810  3AFFFFF7  BCC         L_16  ; Targ=0x7F4
  181: 	getRequest[i] = 0;
 00000814  E3A01000  MOV         R1,#0x0
 00000818  E59F0234  LDR         R0,[PC,+564] ; PoolRef @0xA54 ; getRequest+10
 0000081C  E5C01000  STRB        R1,[R0,#0x0] ; getRequest+10
  183: 	if (memcmp(getRequest, httpMethod, 5))						// only GET method is supported here
 00000820  E59F0228  LDR         R0,[PC,+552] ; PoolRef @0xA50 ; getRequest
 00000824  E59F122C  LDR         R1,[PC,+556] ; PoolRef @0xA58 ; httpMethod
 00000828  E3A02005  MOV         R2,#0x5
 0000082C  EB000A3C  BL          memcmp?A  ; Targ=0x3124
 00000830  E3500000  CMP         R0,#0x0000 ; memcmp?A
 00000834  0A000001  BEQ         L_18  ; Targ=0x840
  184: 		return(0);
 00000838  E3A00000  MOV         R0,#0x0
 0000083C  EA000082  B           L_12  ; Targ=0xA4C
 00000840          L_18:
  186: 	httpCounter++;																		// one more request done
 00000840  E59F0208  LDR         R0,[PC,+520] ; PoolRef @0xA50 ; getRequest
 00000844  E3E01013  MVN         R1,#0x13
 00000848  E0801001  ADD         R1,R0,R1 ; getRequest
 0000084C  E5912000  LDR         R2,[R1,#0x0] ; httpCounter
 00000850  E2822001  ADD         R2,R2,#0x0001
 00000854  E5812000  STR         R2,[R1,#0x0] ; httpCounter
  188: 	if (getRequest[5] == 's')													// if request path name starts with s, store dynamic data in transmit buff
>> er
 00000858  E5D00005  LDRB        R0,[R0,#0x5] ; getRequest
 0000085C  E3500073  CMP         R0,#0x0073
 00000860  1A000049  BNE         L_19  ; Targ=0x98C
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 10


  191: 		len = putConstString(httpHeader);								// HTTP header
 00000864  E59F01F0  LDR         R0,[PC,+496] ; PoolRef @0xA5C ; httpHeader
 00000868  EB00008A  BL          putConstString?A  ; Targ=0xA98
 0000086C  E1A04000  MOV         R4,R0 ; len
  192: 		len += putConstString(httpMimeTypeScript);			// with text MIME type
 00000870  E59F01E8  LDR         R0,[PC,+488] ; PoolRef @0xA60 ; httpMimeTypeScript
 00000874  EB000087  BL          putConstString?A  ; Targ=0xA98
 00000878  E0844000  ADD         R4,R4,R0 ; len
  195: 		IntToStr(0, dyna);
 0000087C  E59F11E0  LDR         R1,[PC,+480] ; PoolRef @0xA64 ; dyna
 00000880  E3A00000  MOV         R0,#0x0
 00000884  EB0001F3  BL          IntToStr?A  ; Targ=0x1058
  196: 		len += putConstString("var AN0=");
 00000888  E59F01D8  LDR         R0,[PC,+472] ; PoolRef @0xA68 ; ??S_6
 0000088C  EB000081  BL          putConstString?A  ; Targ=0xA98
 00000890  E0844000  ADD         R4,R4,R0 ; len
  197: 		len += putString(dyna);
 00000894  E59F01C8  LDR         R0,[PC,+456] ; PoolRef @0xA64 ; dyna
 00000898  EB00008D  BL          putString?A  ; Targ=0xAD4
 0000089C  E0844000  ADD         R4,R4,R0 ; len
  198: 		len += putConstString(";");
 000008A0  E3A00F55  MOV         R0,#??S_7 ; ??S_7
 000008A4  EB00007B  BL          putConstString?A  ; Targ=0xA98
 000008A8  E0844000  ADD         R4,R4,R0 ; len
  201: 		IntToStr(0, dyna);
 000008AC  E59F11B0  LDR         R1,[PC,+432] ; PoolRef @0xA64 ; dyna
 000008B0  E3A00000  MOV         R0,#0x0
 000008B4  EB0001E7  BL          IntToStr?A  ; Targ=0x1058
  202: 		len += putConstString("var AN1=");
 000008B8  E59F01AC  LDR         R0,[PC,+428] ; PoolRef @0xA6C ; ??S_8
 000008BC  EB000075  BL          putConstString?A  ; Targ=0xA98
 000008C0  E0844000  ADD         R4,R4,R0 ; len
  203: 		len += putString(dyna);
 000008C4  E59F0198  LDR         R0,[PC,+408] ; PoolRef @0xA64 ; dyna
 000008C8  EB000081  BL          putString?A  ; Targ=0xAD4
 000008CC  E0844000  ADD         R4,R4,R0 ; len
  204: 		len += putConstString(";");
 000008D0  E3A00F55  MOV         R0,#??S_7 ; ??S_7
 000008D4  EB00006F  BL          putConstString?A  ; Targ=0xA98
 000008D8  E0844000  ADD         R4,R4,R0 ; len
  207: 		len += putConstString("var PORT1_31_24=");
 000008DC  E59F018C  LDR         R0,[PC,+396] ; PoolRef @0xA70 ; ??S_9
 000008E0  EB00006C  BL          putConstString?A  ; Targ=0xA98
 000008E4  E0844000  ADD         R4,R4,R0 ; len
  208: 		IntToStr(((IOPIN1 >> 24) & 0xFF), dyna);
 000008E8  E59F0184  LDR         R0,[PC,+388] ; PoolRef @0xA74
 000008EC  E5900000  LDR         R0,[R0,#0x0]
 000008F0  E1A00C20  MOV         R0,R0,LSR #24
 000008F4  E20000FF  AND         R0,R0,#0x00FF
 000008F8  E59F1164  LDR         R1,[PC,+356] ; PoolRef @0xA64 ; dyna
 000008FC  EB0001D5  BL          IntToStr?A  ; Targ=0x1058
  209: 		len += putString(dyna);
 00000900  E59F015C  LDR         R0,[PC,+348] ; PoolRef @0xA64 ; dyna
 00000904  EB000072  BL          putString?A  ; Targ=0xAD4
 00000908  E0844000  ADD         R4,R4,R0 ; len
  210: 		len += putConstString(";");
 0000090C  E3A00F55  MOV         R0,#??S_7 ; ??S_7
 00000910  EB000060  BL          putConstString?A  ; Targ=0xA98
 00000914  E0844000  ADD         R4,R4,R0 ; len
  213: 		len += putConstString("var PORT1_23_16=");
 00000918  E59F0158  LDR         R0,[PC,+344] ; PoolRef @0xA78 ; ??S_10
 0000091C  EB00005D  BL          putConstString?A  ; Targ=0xA98
 00000920  E0844000  ADD         R4,R4,R0 ; len
  214: 		IntToStr(((IOPIN1 >> 16) & 0xFF), dyna);
 00000924  E59F0148  LDR         R0,[PC,+328] ; PoolRef @0xA74
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 11


 00000928  E5900000  LDR         R0,[R0,#0x0]
 0000092C  E1A00820  MOV         R0,R0,LSR #16
 00000930  E20000FF  AND         R0,R0,#0x00FF
 00000934  E59F1128  LDR         R1,[PC,+296] ; PoolRef @0xA64 ; dyna
 00000938  EB0001C6  BL          IntToStr?A  ; Targ=0x1058
  215: 		len += putString(dyna);
 0000093C  E59F0120  LDR         R0,[PC,+288] ; PoolRef @0xA64 ; dyna
 00000940  EB000063  BL          putString?A  ; Targ=0xAD4
 00000944  E0844000  ADD         R4,R4,R0 ; len
  216: 		len += putConstString(";");
 00000948  E3A00F55  MOV         R0,#??S_7 ; ??S_7
 0000094C  EB000051  BL          putConstString?A  ; Targ=0xA98
 00000950  E0844000  ADD         R4,R4,R0 ; len
  219: 		IntToStr(httpCounter, dyna);
 00000954  E59F0120  LDR         R0,[PC,+288] ; PoolRef @0xA7C ; getRequest-20
 00000958  E5900000  LDR         R0,[R0,#0x0] ; httpCounter-20
 0000095C  E59F1100  LDR         R1,[PC,+256] ; PoolRef @0xA64 ; dyna
 00000960  EB0001BC  BL          IntToStr?A  ; Targ=0x1058
  220: 		len += putConstString("var REQ=");
 00000964  E3A00E12  MOV         R0,#??S_11 ; ??S_11
 00000968  EB00004A  BL          putConstString?A  ; Targ=0xA98
 0000096C  E0844000  ADD         R4,R4,R0 ; len
  221: 		len += putString(dyna);
 00000970  E59F00EC  LDR         R0,[PC,+236] ; PoolRef @0xA64 ; dyna
 00000974  EB000056  BL          putString?A  ; Targ=0xAD4
 00000978  E0844000  ADD         R4,R4,R0 ; len
  222: 		len += putConstString(";");
 0000097C  E3A00F55  MOV         R0,#??S_7 ; ??S_7
 00000980  EB000044  BL          putConstString?A  ; Targ=0xA98
 00000984  E0844000  ADD         R4,R4,R0 ; len
  223: 	}
 00000988  EA000021  B           L_20  ; Targ=0xA14
 0000098C          L_19:
  224: 	else if (getRequest[5] == 't')											// if request path name starts with t, toggle LED bit number that comes
>>  after
 0000098C  E59F00EC  LDR         R0,[PC,+236] ; PoolRef @0xA80 ; getRequest+5
 00000990  E5D00000  LDRB        R0,[R0,#0x0] ; getRequest+5
 00000994  E3500074  CMP         R0,#0x0074
 00000998  1A00001D  BNE         L_20  ; Targ=0xA14
  226: 		if (isdigit(getRequest[6]))												// if 0 <= bit number <= 9, bits 8 & 9 does not exist but does not matte
>> r
 0000099C  E59F00E0  LDR         R0,[PC,+224] ; PoolRef @0xA84 ; getRequest+6
 000009A0  E5D00000  LDRB        R0,[R0,#0x0] ; getRequest+6
 000009A4  EB0000C1  BL          isdigit?A  ; Targ=0xCB0
 000009A8  E3500000  CMP         R0,#0x0000 ; isdigit?A
 000009AC  0A000018  BEQ         L_20  ; Targ=0xA14
  228: 			bitMask = getRequest[6] - '0';									// convert ASCII to integer
 000009B0  E59F00CC  LDR         R0,[PC,+204] ; PoolRef @0xA84 ; getRequest+6
 000009B4  E5D00000  LDRB        R0,[R0,#0x0] ; getRequest+6
 000009B8  E1A05000  MOV         R5,R0
 000009BC  E2455030  SUB         R5,R5,#0x0030
  229: 			bitMask = 1 << (bitMask + 16);									// create bit mask
 000009C0  E1A00005  MOV         R0,R5 ; bitMask
 000009C4  E2800010  ADD         R0,R0,#0x0010 ; bitMask
 000009C8  E3A05001  MOV         R5,#0x1
 000009CC  E1A05015  MOV         R5,R5,LSL R0
  230: 			if ((IOPIN1 & bitMask) != 0)										// Toggled LED
 000009D0  E59F009C  LDR         R0,[PC,+156] ; PoolRef @0xA74
 000009D4  E5900000  LDR         R0,[R0,#0x0]
 000009D8  E1A01005  MOV         R1,R5 ; bitMask
 000009DC  E0000001  AND         R0,R0,R1 ; bitMask
 000009E0  E3500000  CMP         R0,#0x0000
 000009E4  0A000005  BEQ         L_23  ; Targ=0xA00
  231: 				IOCLR1 |= bitMask;
 000009E8  E1A02005  MOV         R2,R5 ; bitMask
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 12


 000009EC  E59F0094  LDR         R0,[PC,+148] ; PoolRef @0xA88
 000009F0  E5901000  LDR         R1,[R0,#0x0]
 000009F4  E1811002  ORR         R1,R1,R2 ; bitMask
 000009F8  E5801000  STR         R1,[R0,#0x0]
 000009FC  EA000004  B           L_20  ; Targ=0xA14
 00000A00          L_23:
  233: 				IOSET1 |= bitMask;
 00000A00  E1A02005  MOV         R2,R5 ; bitMask
 00000A04  E59F0080  LDR         R0,[PC,+128] ; PoolRef @0xA8C
 00000A08  E5901000  LDR         R1,[R0,#0x0]
 00000A0C  E1811002  ORR         R1,R1,R2 ; bitMask
 00000A10  E5801000  STR         R1,[R0,#0x0]
  235: 	}
 00000A14          L_20:
  237: 	if (len == 0)																				// what do to by default
 00000A14  E1A00004  MOV         R0,R4 ; len
 00000A18  E3500000  CMP         R0,#0x0000 ; len
 00000A1C  1A000009  BNE         L_25  ; Targ=0xA48
  239: 		len =  putConstString(httpHeader);								// HTTP header
 00000A20  E59F0034  LDR         R0,[PC,+52] ; PoolRef @0xA5C ; httpHeader
 00000A24  EB00001B  BL          putConstString?A  ; Targ=0xA98
 00000A28  E1A04000  MOV         R4,R0 ; len
  240: 		len += putConstString(httpMimeTypeHTML);					// with HTML MIME type
 00000A2C  E59F005C  LDR         R0,[PC,+92] ; PoolRef @0xA90 ; httpMimeTypeHTML
 00000A30  EB000018  BL          putConstString?A  ; Targ=0xA98
 00000A34  E0844000  ADD         R4,R4,R0 ; len
  241: 		len += putConstString(indexPage);									// HTML page
 00000A38  E59F0054  LDR         R0,[PC,+84] ; PoolRef @0xA94 ; getRequest-24
 00000A3C  E5900000  LDR         R0,[R0,#0x0] ; indexPage-24
 00000A40  EB000014  BL          putConstString?A  ; Targ=0xA98
 00000A44  E0844000  ADD         R4,R4,R0 ; len
  242: 	}
 00000A48          L_25:
  244: 	return (len);					// return to the library with the number of bytes to transmit
 00000A48  E1A00004  MOV         R0,R4 ; len
 00000A4C            ; SCOPE-END
  245: }
 00000A4C          L_12:
 00000A4C  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 00000A50            ; END 'ENC28J60_userTCP?A'

 00000A50  400004A8  DD          getRequest		; POOL-Entry U=3
 00000A54  400004B2  DD          getRequest + 0xA		; POOL-Entry U=1
 00000A58  40000498  DD          httpMethod		; POOL-Entry U=1
 00000A5C  00000609  DD          httpHeader		; POOL-Entry U=2
 00000A60  00000634  DD          httpMimeTypeScript		; POOL-Entry U=1
 00000A64  400004B7  DD          dyna		; POOL-Entry U=10
 00000A68  00000156  DD          ??S_6		; POOL-Entry U=1
 00000A6C  0000014B  DD          ??S_8		; POOL-Entry U=1
 00000A70  0000013A  DD          ??S_9		; POOL-Entry U=1
 00000A74  E0028010  DD          0xE0028010		; POOL-Entry U=3
 00000A78  00000129  DD          ??S_10		; POOL-Entry U=1
 00000A7C  40000494  DD          getRequest + 0xFFFFFFEC		; POOL-Entry U=1
 00000A80  400004AD  DD          getRequest + 0x5		; POOL-Entry U=1
 00000A84  400004AE  DD          getRequest + 0x6		; POOL-Entry U=2
 00000A88  E002801C  DD          0xE002801C		; POOL-Entry U=1
 00000A8C  E0028014  DD          0xE0028014		; POOL-Entry U=1
 00000A90  00000628  DD          httpMimeTypeHTML		; POOL-Entry U=1
 00000A94  40000490  DD          getRequest + 0xFFFFFFE8		; POOL-Entry U=1

*** Disassembly of Segment '?PR?putConstString?A?DEMO':
 FILE: 'DEMO.c'
 00000A98          putConstString?A:  ; FUNCTION START
  120: unsigned long putConstString(const char *s)
 00000A98  E92D4030  STMDB       R13!,{R4-R5,LR}
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 13


 00000A9C  E1A05000  MOV         R5,R0 ; s
 00000AA0  ---- Variable 's' assigned to Register 'R5' ----
  121: {
 00000AA0            ; SCOPE-START
  124: 	ctr = 0;
 00000AA0  E3A04000  MOV         R4,#0x0
 00000AA4  ---- Variable 'ctr' assigned to Register 'R4' ----
  125: 	while(*s)
 00000AA4  EA000004  B           L_1  ; Targ=0xABC
 00000AA8          L_3:
  127: 		ENC28J60_putByte(*s++);
 00000AA8  E1A00005  MOV         R0,R5 ; s
 00000AAC  E2805001  ADD         R5,R0,#0x0001 ; s
 00000AB0  E5D00000  LDRB        R0,[R0,#0x0] ; s
 00000AB4  EB000285  BL          ENC28J60_putByte?A  ; Targ=0x14D0
  128: 		ctr++;
 00000AB8  E2844001  ADD         R4,R4,#0x0001 ; ctr
  129: 	}
 00000ABC          L_1:
 00000ABC  E1A00005  MOV         R0,R5 ; s
 00000AC0  E5D00000  LDRB        R0,[R0,#0x0] ; s
 00000AC4  E3500000  CMP         R0,#0x0000
 00000AC8  1AFFFFF6  BNE         L_3  ; Targ=0xAA8
  130: 	return(ctr);
 00000ACC  E1A00004  MOV         R0,R4 ; ctr
 00000AD0            ; SCOPE-END
  131: }
 00000AD0  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 00000AD4            ; END 'putConstString?A'


*** Disassembly of Segment '?PR?putString?A?DEMO':
 FILE: 'DEMO.c'
 00000AD4          putString?A:  ; FUNCTION START
  136: unsigned long putString(char *s)
 00000AD4  E92D4030  STMDB       R13!,{R4-R5,LR}
 00000AD8  E1A05000  MOV         R5,R0 ; s
 00000ADC  ---- Variable 's' assigned to Register 'R5' ----
  137: {
 00000ADC            ; SCOPE-START
  140: 	ctr = 0;
 00000ADC  E3A04000  MOV         R4,#0x0
 00000AE0  ---- Variable 'ctr' assigned to Register 'R4' ----
  141: 	while(*s)
 00000AE0  EA000004  B           L_6  ; Targ=0xAF8
 00000AE4          L_8:
  143: 		ENC28J60_putByte(*s++);
 00000AE4  E1A00005  MOV         R0,R5 ; s
 00000AE8  E2805001  ADD         R5,R0,#0x0001 ; s
 00000AEC  E5D00000  LDRB        R0,[R0,#0x0] ; s
 00000AF0  EB000276  BL          ENC28J60_putByte?A  ; Targ=0x14D0
  144: 		ctr++;
 00000AF4  E2844001  ADD         R4,R4,#0x0001 ; ctr
  145: 	}
 00000AF8          L_6:
 00000AF8  E1A00005  MOV         R0,R5 ; s
 00000AFC  E5D00000  LDRB        R0,[R0,#0x0] ; s
 00000B00  E3500000  CMP         R0,#0x0000
 00000B04  1AFFFFF6  BNE         L_8  ; Targ=0xAE4
  146: 	return(ctr);
 00000B08  E1A00004  MOV         R0,R4 ; ctr
 00000B0C            ; SCOPE-END
  147: }
 00000B0C  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 00000B10            ; END 'putString?A'
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 14




*** Disassembly of Segment '?PR?main?DEMO':
 FILE: 'DEMO.c'
 00000B10          ?C?INIT:  ; FUNCTION START
 00000B10  E3A00E65  MOV         R0,#?C?CLRTAB ; ?C?CLRTAB
 00000B14          L_280:
 00000B14  E8B00006  LDMIA       R0!,{R1-R2}
 00000B18  E1A03001  MOV         R3,R1
 00000B1C  E1933002  ORRS        R3,R3,R2
 00000B20  0A000005  BEQ         L_282  ; Targ=0xB3C
 00000B24  E3A03000  MOV         R3,#0x0000
 00000B28          L_281:
 00000B28  E5C13000  STRB        R3,[R1,#0x0]
 00000B2C  E2811001  ADD         R1,R1,#0x0001
 00000B30  E1510002  CMP         R1,R2
 00000B34  1AFFFFFB  BNE         L_281  ; Targ=0xB28
 00000B38  EAFFFFF5  B           L_280  ; Targ=0xB14
 00000B3C          L_282:
 00000B3C  E3A00E67  MOV         R0,#?C?INITTAB ; ?C?INITTAB
 00000B40          L_283:
 00000B40  E2800003  ADD         R0,R0,#0x0003
 00000B44  E3A03003  MOV         R3,#0x0003
 00000B48  E1C00003  BIC         R0,R0,R3
 00000B4C  E8B00006  LDMIA       R0!,{R1-R2}
 00000B50  E1A03001  MOV         R3,R1
 00000B54  E1933002  ORRS        R3,R3,R2
 00000B58  0A000006  BEQ         L_285  ; Targ=0xB78
 00000B5C          L_284:
 00000B5C  E5D03000  LDRB        R3,[R0,#0x0]
 00000B60  E2800001  ADD         R0,R0,#0x0001
 00000B64  E5C13000  STRB        R3,[R1,#0x0]
 00000B68  E2811001  ADD         R1,R1,#0x0001
 00000B6C  E1510002  CMP         R1,R2
 00000B70  1AFFFFF9  BNE         L_284  ; Targ=0xB5C
 00000B74  EAFFFFF1  B           L_283  ; Targ=0xB40
 00000B78          L_285:
  303: int main (void)
 00000B78          main:
 00000B78  E92D4000  STMDB       R13!,{LR}
  305: 	PINSEL0 = 0;
 00000B7C  E3A01000  MOV         R1,#0x0
 00000B80  E59F008C  LDR         R0,[PC,+140] ; PoolRef @0xC14
 00000B84  E5801000  STR         R1,[R0,#0x0]
  306: 	PINSEL1 = 0;
 00000B88  E59F0088  LDR         R0,[PC,+136] ; PoolRef @0xC18
 00000B8C  E5801000  STR         R1,[R0,#0x0]
  307: 	PINSEL2 &= 0x0000000C;
 00000B90  E59F0084  LDR         R0,[PC,+132] ; PoolRef @0xC1C
 00000B94  E5901000  LDR         R1,[R0,#0x0]
 00000B98  E201100C  AND         R1,R1,#0x000C
 00000B9C  E5801000  STR         R1,[R0,#0x0]
  308: 	delay_Nx10cyc(599999);			// Delay 0,1s
 00000BA0  E59F0078  LDR         R0,[PC,+120] ; PoolRef @0xC20
 00000BA4  EB000942  BL          delay_Nx10cyc?A  ; Targ=0x30B4
  310: 	IODIR1 &= 0x00FFFFFF;				// Set P1[31..24] as inputs for buttons
 00000BA8  E59F0074  LDR         R0,[PC,+116] ; PoolRef @0xC24
 00000BAC  E5901000  LDR         R1,[R0,#0x0]
 00000BB0  E3C114FF  BIC         R1,R1,#0xFF000000
 00000BB4  E5801000  STR         R1,[R0,#0x0]
  311: 	IODIR1 |= 0x00FF0000;				// Set P1[23..16] as outputs for LED
 00000BB8  E59F0064  LDR         R0,[PC,+100] ; PoolRef @0xC24
 00000BBC  E5901000  LDR         R1,[R0,#0x0]
 00000BC0  E38118FF  ORR         R1,R1,#0xFF0000
 00000BC4  E5801000  STR         R1,[R0,#0x0]
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 15


  312: 	IOCLR1 |= 0x00FF0000;				// Turn off LEDs
 00000BC8  E59F0058  LDR         R0,[PC,+88] ; PoolRef @0xC28
 00000BCC  E5901000  LDR         R1,[R0,#0x0]
 00000BD0  E38118FF  ORR         R1,R1,#0xFF0000
 00000BD4  E5801000  STR         R1,[R0,#0x0]
  315: 	ENC28J60_Init(&IOPIN0, 13, &IOPIN0, 12, myMacAddr, myIpAddr, ENC28J60_FULLDUPLEX) ;
 00000BD8  E3A00001  MOV         R0,#0x1
 00000BDC  E92D0001  STMDB       R13!,{R0}
 00000BE0  E59F0044  LDR         R0,[PC,+68] ; PoolRef @0xC2C ; myIpAddr
 00000BE4  E92D0001  STMDB       R13!,{R0}
 00000BE8  E59F0040  LDR         R0,[PC,+64] ; PoolRef @0xC30 ; myMacAddr
 00000BEC  E92D0001  STMDB       R13!,{R0}
 00000BF0  E59F003C  LDR         R0,[PC,+60] ; PoolRef @0xC34
 00000BF4  E59F2038  LDR         R2,[PC,+56] ; PoolRef @0xC34
 00000BF8  E3A0100D  MOV         R1,#0xD
 00000BFC  E3A0300C  MOV         R3,#0xC
 00000C00  EB00014F  BL          ENC28J60_Init?A  ; Targ=0x1144
 00000C04  E28DD00C  ADD         R13,R13,#0x000C
  317: 	while (1)
 00000C08          L_37:
  319: 		ENC28J60_doPacket();		// process incoming Ethernet packets
 00000C08  EB000221  BL          ENC28J60_doPacket?A  ; Targ=0x1494
  325: 	}
 00000C0C  EAFFFFFD  B           L_37  ; Targ=0xC08
  326: }
 00000C10  E8BD8000  LDMIA       R13!,{PC}
 00000C14            ; END 'main'

 00000C14  E002C000  DD          0xE002C000		; POOL-Entry U=1
 00000C18  E002C004  DD          0xE002C004		; POOL-Entry U=1
 00000C1C  E002C014  DD          0xE002C014		; POOL-Entry U=1
 00000C20  000927BF  DD          0x927BF		; POOL-Entry U=1
 00000C24  E0028018  DD          0xE0028018		; POOL-Entry U=2
 00000C28  E002801C  DD          0xE002801C		; POOL-Entry U=1
 00000C2C  400004A4  DD          myIpAddr		; POOL-Entry U=1
 00000C30  4000049E  DD          myMacAddr		; POOL-Entry U=1
 00000C34  E0028000  DD          0xE0028000		; POOL-Entry U=2

*** Disassembly of Segment '?PR?islower?A?c_ctype':
 FILE: '..\c_ctype.c'
 00000C38          islower?A:  ; FUNCTION START
 00000C38  E1A01000  MOV         R1,R0 ; character
 00000C3C  ---- Variable 'character' assigned to Register 'R1' ----
 00000C3C  E1A00001  MOV         R0,R1 ; character
 00000C40  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000C44  E1A00C20  MOV         R0,R0,LSR #24
 00000C48  E350007A  CMP         R0,#0x007A
 00000C4C  CA000006  BGT         L_2  ; Targ=0xC6C
 00000C50  E1A00001  MOV         R0,R1 ; character
 00000C54  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000C58  E1A00C20  MOV         R0,R0,LSR #24
 00000C5C  E3500061  CMP         R0,#0x0061
 00000C60  BA000001  BLT         L_2  ; Targ=0xC6C
 00000C64  E3A00001  MOV         R0,#0x1
 00000C68  EA000000  B           L_3  ; Targ=0xC70
 00000C6C          L_2:
 00000C6C  E3A00000  MOV         R0,#0x0
 00000C70          L_3:
 00000C70  E12FFF1E  BX          R14
 00000C74            ; END 'islower?A'


*** Disassembly of Segment '?PR?isupper?A?c_ctype':
 FILE: '..\c_ctype.c'
 00000C74          isupper?A:  ; FUNCTION START
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 16


 00000C74  E1A01000  MOV         R1,R0 ; character
 00000C78  ---- Variable 'character' assigned to Register 'R1' ----
 00000C78  E1A00001  MOV         R0,R1 ; character
 00000C7C  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000C80  E1A00C20  MOV         R0,R0,LSR #24
 00000C84  E350005A  CMP         R0,#0x005A
 00000C88  CA000006  BGT         L_5  ; Targ=0xCA8
 00000C8C  E1A00001  MOV         R0,R1 ; character
 00000C90  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000C94  E1A00C20  MOV         R0,R0,LSR #24
 00000C98  E3500041  CMP         R0,#0x0041
 00000C9C  BA000001  BLT         L_5  ; Targ=0xCA8
 00000CA0  E3A00001  MOV         R0,#0x1
 00000CA4  EA000000  B           L_6  ; Targ=0xCAC
 00000CA8          L_5:
 00000CA8  E3A00000  MOV         R0,#0x0
 00000CAC          L_6:
 00000CAC  E12FFF1E  BX          R14
 00000CB0            ; END 'isupper?A'


*** Disassembly of Segment '?PR?isdigit?A?c_ctype':
 FILE: '..\c_ctype.c'
 00000CB0          isdigit?A:  ; FUNCTION START
 00000CB0  E1A01000  MOV         R1,R0 ; character
 00000CB4  ---- Variable 'character' assigned to Register 'R1' ----
 00000CB4  E1A00001  MOV         R0,R1 ; character
 00000CB8  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000CBC  E1A00C20  MOV         R0,R0,LSR #24
 00000CC0  E3500039  CMP         R0,#0x0039
 00000CC4  CA000006  BGT         L_16  ; Targ=0xCE4
 00000CC8  E1A00001  MOV         R0,R1 ; character
 00000CCC  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000CD0  E1A00C20  MOV         R0,R0,LSR #24
 00000CD4  E3500030  CMP         R0,#0x0030
 00000CD8  BA000001  BLT         L_16  ; Targ=0xCE4
 00000CDC  E3A00001  MOV         R0,#0x1
 00000CE0  EA000000  B           L_17  ; Targ=0xCE8
 00000CE4          L_16:
 00000CE4  E3A00000  MOV         R0,#0x0
 00000CE8          L_17:
 00000CE8  E12FFF1E  BX          R14
 00000CEC            ; END 'isdigit?A'


*** Disassembly of Segment '?PR?ispunct?A?c_ctype':
 FILE: '..\c_ctype.c'
 00000CEC          ispunct?A:  ; FUNCTION START
 00000CEC  E1A02000  MOV         R2,R0 ; character
 00000CF0  ---- Variable 'character' assigned to Register 'R2' ----
 00000CF0            ; SCOPE-START
 00000CF0  E1A00002  MOV         R0,R2 ; character
 00000CF4  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000CF8  E1A00C20  MOV         R0,R0,LSR #24
 00000CFC  E3500021  CMP         R0,#0x0021
 00000D00  BA000006  BLT         L_26  ; Targ=0xD20
 00000D04  E1A00002  MOV         R0,R2 ; character
 00000D08  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000D0C  E1A00C20  MOV         R0,R0,LSR #24
 00000D10  E350002F  CMP         R0,#0x002F
 00000D14  CA000001  BGT         L_26  ; Targ=0xD20
 00000D18  E3A01001  MOV         R1,#0x1
 00000D1C  EA000000  B           L_27  ; Targ=0xD24
 00000D20          L_26:
 00000D20  E3A01000  MOV         R1,#0x0
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 17


 00000D24          L_27:
 00000D24  ---- Variable 'rslt' assigned to Register 'R1' ----
 00000D24  E1A00002  MOV         R0,R2 ; character
 00000D28  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000D2C  E1A00C20  MOV         R0,R0,LSR #24
 00000D30  E350003A  CMP         R0,#0x003A
 00000D34  BA000006  BLT         L_28  ; Targ=0xD54
 00000D38  E1A00002  MOV         R0,R2 ; character
 00000D3C  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000D40  E1A00C20  MOV         R0,R0,LSR #24
 00000D44  E3500040  CMP         R0,#0x0040
 00000D48  CA000001  BGT         L_28  ; Targ=0xD54
 00000D4C  E3A00001  MOV         R0,#0x1
 00000D50  EA000000  B           L_29  ; Targ=0xD58
 00000D54          L_28:
 00000D54  E3A00000  MOV         R0,#0x0
 00000D58          L_29:
 00000D58  E1811000  ORR         R1,R1,R0 ; rslt
 00000D5C  E1A00002  MOV         R0,R2 ; character
 00000D60  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000D64  E1A00C20  MOV         R0,R0,LSR #24
 00000D68  E350005B  CMP         R0,#0x005B
 00000D6C  BA000006  BLT         L_30  ; Targ=0xD8C
 00000D70  E1A00002  MOV         R0,R2 ; character
 00000D74  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000D78  E1A00C20  MOV         R0,R0,LSR #24
 00000D7C  E3500060  CMP         R0,#0x0060
 00000D80  CA000001  BGT         L_30  ; Targ=0xD8C
 00000D84  E3A00001  MOV         R0,#0x1
 00000D88  EA000000  B           L_31  ; Targ=0xD90
 00000D8C          L_30:
 00000D8C  E3A00000  MOV         R0,#0x0
 00000D90          L_31:
 00000D90  E1811000  ORR         R1,R1,R0 ; rslt
 00000D94  E1A00002  MOV         R0,R2 ; character
 00000D98  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000D9C  E1A00C20  MOV         R0,R0,LSR #24
 00000DA0  E350007B  CMP         R0,#0x007B
 00000DA4  BA000006  BLT         L_32  ; Targ=0xDC4
 00000DA8  E1A00002  MOV         R0,R2 ; character
 00000DAC  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000DB0  E1A00C20  MOV         R0,R0,LSR #24
 00000DB4  E350007E  CMP         R0,#0x007E
 00000DB8  CA000001  BGT         L_32  ; Targ=0xDC4
 00000DBC  E3A00001  MOV         R0,#0x1
 00000DC0  EA000000  B           L_33  ; Targ=0xDC8
 00000DC4          L_32:
 00000DC4  E3A00000  MOV         R0,#0x0
 00000DC8          L_33:
 00000DC8  E1811000  ORR         R1,R1,R0 ; rslt
 00000DCC  E1A00001  MOV         R0,R1 ; rslt
 00000DD0  E1A00C00  MOV         R0,R0,LSL #24 ; rslt
 00000DD4  E1A00C20  MOV         R0,R0,LSR #24
 00000DD8            ; SCOPE-END
 00000DD8  E12FFF1E  BX          R14
 00000DDC            ; END 'ispunct?A'


*** Disassembly of Segment '?PR?toupper?A?c_ctype':
 FILE: '..\c_ctype.c'
 00000DDC          toupper?A:  ; FUNCTION START
 00000DDC  E1A01000  MOV         R1,R0 ; character
 00000DE0  ---- Variable 'character' assigned to Register 'R1' ----
 00000DE0  E1A00001  MOV         R0,R1 ; character
 00000DE4  E1A00C00  MOV         R0,R0,LSL #24 ; character
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 18


 00000DE8  E1A00C20  MOV         R0,R0,LSR #24
 00000DEC  E350007A  CMP         R0,#0x007A
 00000DF0  CA000005  BGT         L_46  ; Targ=0xE0C
 00000DF4  E1A00001  MOV         R0,R1 ; character
 00000DF8  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000DFC  E1A00C20  MOV         R0,R0,LSR #24
 00000E00  E3500061  CMP         R0,#0x0061
 00000E04  BA000000  BLT         L_46  ; Targ=0xE0C
 00000E08  E20110DF  AND         R1,R1,#0x00DF ; character
 00000E0C          L_46:
 00000E0C  E1A00001  MOV         R0,R1 ; character
 00000E10  E1A00C00  MOV         R0,R0,LSL #24 ; character
 00000E14  E1A00C20  MOV         R0,R0,LSR #24
 00000E18  E12FFF1E  BX          R14
 00000E1C            ; END 'toupper?A'


*** Disassembly of Segment '?PR?ByteToStr?A?conv':
 FILE: '..\conv.c'
 00000E1C          ByteToStr?A:  ; FUNCTION START
 00000E1C  E92D4070  STMDB       R13!,{R4-R6,LR}
 00000E20  E1A04001  MOV         R4,R1 ; output
 00000E24  ---- Variable 'output' assigned to Register 'R4' ----
 00000E24  E1A03000  MOV         R3,R0 ; input
 00000E28  ---- Variable 'input' assigned to Register 'R3' ----
 00000E28            ; SCOPE-START
 00000E28  E3A00020  MOV         R0,#0x20
 00000E2C  E1A01004  MOV         R1,R4 ; output
 00000E30  E5C10000  STRB        R0,[R1,#0x0] ; output
 00000E34  E1A01004  MOV         R1,R4 ; output
 00000E38  E5C10001  STRB        R0,[R1,#0x1]
 00000E3C  E3A00030  MOV         R0,#0x30
 00000E40  E1A01004  MOV         R1,R4 ; output
 00000E44  E5C10002  STRB        R0,[R1,#0x2]
 00000E48  E3A00000  MOV         R0,#0x0
 00000E4C  E1A01004  MOV         R1,R4 ; output
 00000E50  E5C10003  STRB        R0,[R1,#0x3]
 00000E54  E3A02001  MOV         R2,#0x1
 00000E58  ---- Variable 'len' assigned to Register 'R2' ----
 00000E58  E1A00003  MOV         R0,R3 ; input
 00000E5C  E1A00C00  MOV         R0,R0,LSL #24 ; input
 00000E60  E1A00C20  MOV         R0,R0,LSR #24
 00000E64  E3500009  CMP         R0,#0x0009
 00000E68  DA000001  BLE         L_1  ; Targ=0xE74
 00000E6C  E2822001  ADD         R2,R2,#0x0001 ; len
 00000E70  E20220FF  AND         R2,R2,#0x00FF
 00000E74          L_1:
 00000E74  E1A00003  MOV         R0,R3 ; input
 00000E78  E1A00C00  MOV         R0,R0,LSL #24 ; input
 00000E7C  E1A00C20  MOV         R0,R0,LSR #24
 00000E80  E3500063  CMP         R0,#0x0063
 00000E84  DA000001  BLE         L_2  ; Targ=0xE90
 00000E88  E2822001  ADD         R2,R2,#0x0001 ; len
 00000E8C  E20220FF  AND         R2,R2,#0x00FF
 00000E90          L_2:
 00000E90  E2844002  ADD         R4,R4,#0x0002 ; output
 00000E94  EA00001D  B           L_3  ; Targ=0xF10
 00000E98          L_5:
 00000E98  E1A00003  MOV         R0,R3 ; input
 00000E9C  E1A00C00  MOV         R0,R0,LSL #24 ; input
 00000EA0  E1A00C20  MOV         R0,R0,LSR #24
 00000EA4  E3A0500A  MOV         R5,#0xA
 00000EA8  E1A01005  MOV         R1,R5
 00000EAC  EB0008AC  BL          ?C?UDIV?A  ; Targ=0x3164 ; ?C?UDIV?A
 00000EB0  E1A01000  MOV         R1,R0
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 19


 00000EB4  E1A06C01  MOV         R6,R1,LSL #24
 00000EB8  E1A06C26  MOV         R6,R6,LSR #24
 00000EBC  E1A00004  MOV         R0,R4 ; output
 00000EC0  E5C06000  STRB        R6,[R0,#0x0] ; output
 00000EC4  E1A00004  MOV         R0,R4 ; output
 00000EC8  E5D01000  LDRB        R1,[R0,#0x0] ; output
 00000ECC  E1A00003  MOV         R0,R3 ; input
 00000ED0  E1A00C00  MOV         R0,R0,LSL #24 ; input
 00000ED4  E1A00C20  MOV         R0,R0,LSR #24
 00000ED8  E0400001  SUB         R0,R0,R1
 00000EDC  E1A01005  MOV         R1,R5
 00000EE0  EB00089F  BL          ?C?UDIV?A  ; Targ=0x3164 ; ?C?UDIV?A
 00000EE4  E1A00001  MOV         R0,R1
 00000EE8  E1A03C00  MOV         R3,R0,LSL #24
 00000EEC  E1A03C23  MOV         R3,R3,LSR #24
 00000EF0  E1A00004  MOV         R0,R4 ; output
 00000EF4  E5D05000  LDRB        R5,[R0,#0x0] ; output
 00000EF8  E2855030  ADD         R5,R5,#0x0030
 00000EFC  E1A00004  MOV         R0,R4 ; output
 00000F00  E5C05000  STRB        R5,[R0,#0x0] ; output
 00000F04  E2444001  SUB         R4,R4,#0x0001 ; output
 00000F08  E2422001  SUB         R2,R2,#0x0001 ; len
 00000F0C  E20220FF  AND         R2,R2,#0x00FF
 00000F10          L_3:
 00000F10  E1A00002  MOV         R0,R2 ; len
 00000F14  E1A00C00  MOV         R0,R0,LSL #24 ; len
 00000F18  E1A00C20  MOV         R0,R0,LSR #24
 00000F1C  E3500000  CMP         R0,#0x0000
 00000F20  CAFFFFDC  BGT         L_5  ; Targ=0xE98
 00000F24            ; SCOPE-END
 00000F24  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 00000F28            ; END 'ByteToStr?A'


*** Disassembly of Segment '?PR?WordToStr?A?conv':
 FILE: '..\conv.c'
 00000F28          WordToStr?A:  ; FUNCTION START
 00000F28  E92D4070  STMDB       R13!,{R4-R6,LR}
 00000F2C  E1A04001  MOV         R4,R1 ; output
 00000F30  ---- Variable 'output' assigned to Register 'R4' ----
 00000F30  E1A03000  MOV         R3,R0 ; input
 00000F34  ---- Variable 'input' assigned to Register 'R3' ----
 00000F34            ; SCOPE-START
 00000F34  E3A00020  MOV         R0,#0x20
 00000F38  E1A01004  MOV         R1,R4 ; output
 00000F3C  E5C10000  STRB        R0,[R1,#0x0] ; output
 00000F40  E1A01004  MOV         R1,R4 ; output
 00000F44  E5C10001  STRB        R0,[R1,#0x1]
 00000F48  E1A01004  MOV         R1,R4 ; output
 00000F4C  E5C10002  STRB        R0,[R1,#0x2]
 00000F50  E1A01004  MOV         R1,R4 ; output
 00000F54  E5C10003  STRB        R0,[R1,#0x3]
 00000F58  E3A00030  MOV         R0,#0x30
 00000F5C  E1A01004  MOV         R1,R4 ; output
 00000F60  E5C10004  STRB        R0,[R1,#0x4]
 00000F64  E3A00000  MOV         R0,#0x0
 00000F68  E1A01004  MOV         R1,R4 ; output
 00000F6C  E5C10005  STRB        R0,[R1,#0x5]
 00000F70  E3A02001  MOV         R2,#0x1
 00000F74  ---- Variable 'len' assigned to Register 'R2' ----
 00000F74  E1A00003  MOV         R0,R3 ; input
 00000F78  E3500009  CMP         R0,#0x0009 ; input
 00000F7C  9A000001  BLS         L_7  ; Targ=0xF88
 00000F80  E2822001  ADD         R2,R2,#0x0001 ; len
 00000F84  E20220FF  AND         R2,R2,#0x00FF
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 20


 00000F88          L_7:
 00000F88  E1A00003  MOV         R0,R3 ; input
 00000F8C  E3500063  CMP         R0,#0x0063 ; input
 00000F90  9A000001  BLS         L_8  ; Targ=0xF9C
 00000F94  E2822001  ADD         R2,R2,#0x0001 ; len
 00000F98  E20220FF  AND         R2,R2,#0x00FF
 00000F9C          L_8:
 00000F9C  E1A00003  MOV         R0,R3 ; input
 00000FA0  E59F10A8  LDR         R1,[PC,+168] ; PoolRef @0x1050
 00000FA4  E1500001  CMP         R0,R1 ; input
 00000FA8  9A000001  BLS         L_9  ; Targ=0xFB4
 00000FAC  E2822001  ADD         R2,R2,#0x0001 ; len
 00000FB0  E20220FF  AND         R2,R2,#0x00FF
 00000FB4          L_9:
 00000FB4  E1A00003  MOV         R0,R3 ; input
 00000FB8  E59F1094  LDR         R1,[PC,+148] ; PoolRef @0x1054
 00000FBC  E1500001  CMP         R0,R1 ; input
 00000FC0  9A000001  BLS         L_10  ; Targ=0xFCC
 00000FC4  E2822001  ADD         R2,R2,#0x0001 ; len
 00000FC8  E20220FF  AND         R2,R2,#0x00FF
 00000FCC          L_10:
 00000FCC  E2844004  ADD         R4,R4,#0x0004 ; output
 00000FD0  EA000018  B           L_11  ; Targ=0x1038
 00000FD4          L_13:
 00000FD4  E1A00003  MOV         R0,R3 ; input
 00000FD8  E3A0500A  MOV         R5,#0xA
 00000FDC  E1A01005  MOV         R1,R5
 00000FE0  EB00085F  BL          ?C?UDIV?A  ; Targ=0x3164 ; ?C?UDIV?A
 00000FE4  E1A01000  MOV         R1,R0
 00000FE8  E1A06C01  MOV         R6,R1,LSL #24
 00000FEC  E1A06C26  MOV         R6,R6,LSR #24
 00000FF0  E1A00004  MOV         R0,R4 ; output
 00000FF4  E5C06000  STRB        R6,[R0,#0x0] ; output
 00000FF8  E1A00004  MOV         R0,R4 ; output
 00000FFC  E5D01000  LDRB        R1,[R0,#0x0] ; output
 00001000  E1A00003  MOV         R0,R3 ; input
 00001004  E0400001  SUB         R0,R0,R1 ; input
 00001008  E1A01005  MOV         R1,R5
 0000100C  EB000854  BL          ?C?UDIV?A  ; Targ=0x3164 ; ?C?UDIV?A
 00001010  E1A00001  MOV         R0,R1
 00001014  E1A03000  MOV         R3,R0 ; input
 00001018  E1A00004  MOV         R0,R4 ; output
 0000101C  E5D05000  LDRB        R5,[R0,#0x0] ; output
 00001020  E2855030  ADD         R5,R5,#0x0030
 00001024  E1A00004  MOV         R0,R4 ; output
 00001028  E5C05000  STRB        R5,[R0,#0x0] ; output
 0000102C  E2444001  SUB         R4,R4,#0x0001 ; output
 00001030  E2422001  SUB         R2,R2,#0x0001 ; len
 00001034  E20220FF  AND         R2,R2,#0x00FF
 00001038          L_11:
 00001038  E1A00002  MOV         R0,R2 ; len
 0000103C  E1A00C00  MOV         R0,R0,LSL #24 ; len
 00001040  E1A00C20  MOV         R0,R0,LSR #24
 00001044  E3500000  CMP         R0,#0x0000
 00001048  CAFFFFE1  BGT         L_13  ; Targ=0xFD4
 0000104C            ; SCOPE-END
 0000104C  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 00001050            ; END 'WordToStr?A'

 00001050  000003E7  DD          0x3E7		; POOL-Entry U=1
 00001054  0000270F  DD          0x270F		; POOL-Entry U=1

*** Disassembly of Segment '?PR?IntToStr?A?conv':
 FILE: '..\conv.c'
 00001058          IntToStr?A:  ; FUNCTION START
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 21


 00001058  E92D4070  STMDB       R13!,{R4-R6,LR}
 0000105C  E1A05001  MOV         R5,R1 ; output
 00001060  ---- Variable 'output' assigned to Register 'R5' ----
 00001060  ---- Variable 'input' assigned to Register 'R0' ----
 00001060  ---- Variable 'i' assigned to Register 'R4' ----
 00001060            ; SCOPE-START
 00001060  E3A06000  MOV         R6,#0x0
 00001064  ---- Variable 'negative' assigned to Register 'R6' ----
 00001064  E1A01000  MOV         R1,R0 ; input
 00001068  ---- Variable 'inword' assigned to Register 'R1' ----
 00001068  E1A02000  MOV         R2,R0 ; input
 0000106C  E3520000  CMP         R2,#0x0000 ; input
 00001070  AA000002  BGE         L_25  ; Targ=0x1080
 00001074  E3A06001  MOV         R6,#0x1
 00001078  E1A01000  MOV         R1,R0 ; input
 0000107C  E2611000  RSB         R1,R1,#0x0000 ; input
 00001080          L_25:
 00001080  E1A00001  MOV         R0,R1 ; inword
 00001084  E1A01005  MOV         R1,R5 ; output
 00001088  EBFFFFA6  BL          WordToStr?A  ; Targ=0xF28
 0000108C  E3A04006  MOV         R4,#0x6
 00001090  EA00000C  B           L_26  ; Targ=0x10C8
 00001094          L_28:
 00001094  E1A00004  MOV         R0,R4 ; i
 00001098  E1A02C00  MOV         R2,R0,LSL #24 ; i
 0000109C  E1A02C22  MOV         R2,R2,LSR #24
 000010A0  E1A00005  MOV         R0,R5 ; output
 000010A4  E0800002  ADD         R0,R0,R2 ; output
 000010A8  E5500001  LDRB        R0,[R0,#0xFFFFFFFF]
 000010AC  E1A01004  MOV         R1,R4 ; i
 000010B0  E1A02C01  MOV         R2,R1,LSL #24 ; i
 000010B4  E1A02C22  MOV         R2,R2,LSR #24
 000010B8  E1A01005  MOV         R1,R5 ; output
 000010BC  E7C10002  STRB        R0,[R1,+R2]
 000010C0  E2444001  SUB         R4,R4,#0x0001 ; i
 000010C4  E20440FF  AND         R4,R4,#0x00FF
 000010C8          L_26:
 000010C8  E1A00004  MOV         R0,R4 ; i
 000010CC  E1A00C00  MOV         R0,R0,LSL #24 ; i
 000010D0  E1A00C20  MOV         R0,R0,LSR #24
 000010D4  E3500000  CMP         R0,#0x0000
 000010D8  CAFFFFED  BGT         L_28  ; Targ=0x1094
 000010DC  E3A02020  MOV         R2,#0x20
 000010E0  E1A00005  MOV         R0,R5 ; output
 000010E4  E5C02000  STRB        R2,[R0,#0x0] ; output
 000010E8  E1A00006  MOV         R0,R6 ; negative
 000010EC  E3500000  CMP         R0,#0x0000 ; negative
 000010F0  0A000012  BEQ         L_30  ; Targ=0x1140
 000010F4  E3A04000  MOV         R4,#0x0
 000010F8  EA000001  B           L_31  ; Targ=0x1104
 000010FC          L_33:
 000010FC  E2844001  ADD         R4,R4,#0x0001 ; i
 00001100  E20440FF  AND         R4,R4,#0x00FF
 00001104          L_31:
 00001104  E1A00004  MOV         R0,R4 ; i
 00001108  E1A02C00  MOV         R2,R0,LSL #24 ; i
 0000110C  E1A02C22  MOV         R2,R2,LSR #24
 00001110  E1A00005  MOV         R0,R5 ; output
 00001114  E7D00002  LDRB        R0,[R0,+R2]
 00001118  E3500020  CMP         R0,#0x0020
 0000111C  0AFFFFF6  BEQ         L_33  ; Targ=0x10FC
 00001120  E2444001  SUB         R4,R4,#0x0001 ; i
 00001124  E20440FF  AND         R4,R4,#0x00FF
 00001128  E3A0002D  MOV         R0,#0x2D
 0000112C  E1A01004  MOV         R1,R4 ; i
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 22


 00001130  E1A02C01  MOV         R2,R1,LSL #24 ; i
 00001134  E1A02C22  MOV         R2,R2,LSR #24
 00001138  E1A01005  MOV         R1,R5 ; output
 0000113C  E7C10002  STRB        R0,[R1,+R2]
 00001140          L_30:
 00001140            ; SCOPE-END
 00001140  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 00001144            ; END 'IntToStr?A'


*** Disassembly of Segment '?PR?ENC28J60_Init?A?enc28j60':
 FILE: '..\enc28j60.c'
 00001144          ENC28J60_Init?A:  ; FUNCTION START
 00001144  E92D4070  STMDB       R13!,{R4-R6,LR}
 00001148  E1A05003  MOV         R5,R3 ; CSbit
 0000114C  ---- Variable 'CSbit' assigned to Register 'R5' ----
 0000114C  ---- Variable 'CSportPtr' assigned to Register 'R2' ----
 0000114C  E1A06001  MOV         R6,R1 ; RSTbit
 00001150  ---- Variable 'RSTbit' assigned to Register 'R6' ----
 00001150  E1A03000  MOV         R3,R0 ; RSTportPtr
 00001154  ---- Variable 'RSTportPtr' assigned to Register 'R3' ----
 00001154  E1A01002  MOV         R1,R2 ; CSportPtr
 00001158  E59F02FC  LDR         R0,[PC,+764] ; PoolRef @0x145C ; pENC28J60_csPIN
 0000115C  E5801000  STR         R1,[R0,#0x0] ; pENC28J60_csPIN
 00001160  E59F12F8  LDR         R1,[PC,+760] ; PoolRef @0x1460
 00001164  E59F02F0  LDR         R0,[PC,+752] ; PoolRef @0x145C ; pENC28J60_csPIN
 00001168  E5900000  LDR         R0,[R0,#0x0] ; pENC28J60_csPIN
 0000116C  E1500001  CMP         R0,R1
 00001170  1A000006  BNE         L_1  ; Targ=0x1190
 00001174  E59F12E8  LDR         R1,[PC,+744] ; PoolRef @0x1464
 00001178  E59F42DC  LDR         R4,[PC,+732] ; PoolRef @0x145C ; pENC28J60_csPIN
 0000117C  E5841004  STR         R1,[R4,#0x4] ; pENC28J60_csDIR
 00001180  E59F12E0  LDR         R1,[PC,+736] ; PoolRef @0x1468
 00001184  E5841008  STR         R1,[R4,#0x8] ; pENC28J60_csSET
 00001188  E59F12DC  LDR         R1,[PC,+732] ; PoolRef @0x146C
 0000118C  E584100C  STR         R1,[R4,#0xC] ; pENC28J60_csCLR
 00001190          L_1:
 00001190  E59F12D8  LDR         R1,[PC,+728] ; PoolRef @0x1470
 00001194  E1500001  CMP         R0,R1
 00001198  1A000006  BNE         L_2  ; Targ=0x11B8
 0000119C  E59F02D0  LDR         R0,[PC,+720] ; PoolRef @0x1474
 000011A0  E59F12B4  LDR         R1,[PC,+692] ; PoolRef @0x145C ; pENC28J60_csPIN
 000011A4  E5810004  STR         R0,[R1,#0x4] ; pENC28J60_csDIR
 000011A8  E59F02C8  LDR         R0,[PC,+712] ; PoolRef @0x1478
 000011AC  E5810008  STR         R0,[R1,#0x8] ; pENC28J60_csSET
 000011B0  E59F02C4  LDR         R0,[PC,+708] ; PoolRef @0x147C
 000011B4  E581000C  STR         R0,[R1,#0xC] ; pENC28J60_csCLR
 000011B8          L_2:
 000011B8  E1A01003  MOV         R1,R3 ; RSTportPtr
 000011BC  E59F02BC  LDR         R0,[PC,+700] ; PoolRef @0x1480 ; pENC28J60_rstPIN
 000011C0  E5801000  STR         R1,[R0,#0x0] ; pENC28J60_rstPIN
 000011C4  E59F1294  LDR         R1,[PC,+660] ; PoolRef @0x1460
 000011C8  E59F02B0  LDR         R0,[PC,+688] ; PoolRef @0x1480 ; pENC28J60_rstPIN
 000011CC  E5900000  LDR         R0,[R0,#0x0] ; pENC28J60_rstPIN
 000011D0  E1500001  CMP         R0,R1
 000011D4  1A000006  BNE         L_3  ; Targ=0x11F4
 000011D8  E59F1284  LDR         R1,[PC,+644] ; PoolRef @0x1464
 000011DC  E59F3278  LDR         R3,[PC,+632] ; PoolRef @0x145C ; pENC28J60_csPIN
 000011E0  E5831014  STR         R1,[R3,#0x14] ; pENC28J60_rstDIR
 000011E4  E59F127C  LDR         R1,[PC,+636] ; PoolRef @0x1468
 000011E8  E5831018  STR         R1,[R3,#0x18] ; pENC28J60_rstSET
 000011EC  E59F1278  LDR         R1,[PC,+632] ; PoolRef @0x146C
 000011F0  E583101C  STR         R1,[R3,#0x1C] ; pENC28J60_rstCLR
 000011F4          L_3:
 000011F4  E59F1274  LDR         R1,[PC,+628] ; PoolRef @0x1470
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 23


 000011F8  E1500001  CMP         R0,R1
 000011FC  1A000006  BNE         L_4  ; Targ=0x121C
 00001200  E59F026C  LDR         R0,[PC,+620] ; PoolRef @0x1474
 00001204  E59F1250  LDR         R1,[PC,+592] ; PoolRef @0x145C ; pENC28J60_csPIN
 00001208  E5810014  STR         R0,[R1,#0x14] ; pENC28J60_rstDIR
 0000120C  E59F0264  LDR         R0,[PC,+612] ; PoolRef @0x1478
 00001210  E5810018  STR         R0,[R1,#0x18] ; pENC28J60_rstSET
 00001214  E59F0260  LDR         R0,[PC,+608] ; PoolRef @0x147C
 00001218  E581001C  STR         R0,[R1,#0x1C] ; pENC28J60_rstCLR
 0000121C          L_4:
 0000121C  E1A03005  MOV         R3,R5 ; CSbit
 00001220  E3A00001  MOV         R0,#0x1
 00001224  E1A01000  MOV         R1,R0
 00001228  E1A01311  MOV         R1,R1,LSL R3
 0000122C  E59F4228  LDR         R4,[PC,+552] ; PoolRef @0x145C ; pENC28J60_csPIN
 00001230  E5841024  STR         R1,[R4,#0x24] ; ENC28J60_CSmask1
 00001234  E5941024  LDR         R1,[R4,#0x24] ; ENC28J60_CSmask1
 00001238  E1E01001  MVN         R1,R1
 0000123C  E5841020  STR         R1,[R4,#0x20] ; ENC28J60_CSmask0
 00001240  E1A01006  MOV         R1,R6 ; RSTbit
 00001244  E1A00110  MOV         R0,R0,LSL R1
 00001248  E584002C  STR         R0,[R4,#0x2C] ; ENC28J60_RSTmask1
 0000124C  E594002C  LDR         R0,[R4,#0x2C] ; ENC28J60_RSTmask1
 00001250  E1E00000  MVN         R0,R0
 00001254  E5840028  STR         R0,[R4,#0x28] ; ENC28J60_RSTmask0
 00001258  E5943024  LDR         R3,[R4,#0x24] ; ENC28J60_CSmask1
 0000125C  E5940004  LDR         R0,[R4,#0x4] ; pENC28J60_csDIR
 00001260  E5901000  LDR         R1,[R0,#0x0]
 00001264  E1811003  ORR         R1,R1,R3
 00001268  E5801000  STR         R1,[R0,#0x0]
 0000126C  E5943024  LDR         R3,[R4,#0x24] ; ENC28J60_CSmask1
 00001270  E5940008  LDR         R0,[R4,#0x8] ; pENC28J60_csSET
 00001274  E5901000  LDR         R1,[R0,#0x0]
 00001278  E1811003  ORR         R1,R1,R3
 0000127C  E5801000  STR         R1,[R0,#0x0]
 00001280  E594302C  LDR         R3,[R4,#0x2C] ; ENC28J60_RSTmask1
 00001284  E5940014  LDR         R0,[R4,#0x14] ; pENC28J60_rstDIR
 00001288  E5901000  LDR         R1,[R0,#0x0]
 0000128C  E1811003  ORR         R1,R1,R3
 00001290  E5801000  STR         R1,[R0,#0x0]
 00001294  E594302C  LDR         R3,[R4,#0x2C] ; ENC28J60_RSTmask1
 00001298  E5940018  LDR         R0,[R4,#0x18] ; pENC28J60_rstSET
 0000129C  E5901000  LDR         R1,[R0,#0x0]
 000012A0  E1811003  ORR         R1,R1,R3
 000012A4  E5801000  STR         R1,[R0,#0x0]
 000012A8  E3A00000  MOV         R0,#0x0
 000012AC  E5C4003A  STRB        R0,[R4,#0x3A] ; ENC28J60_closeTCP
 000012B0  E3A00002  MOV         R0,#0x2
 000012B4  EB00077E  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000012B8  E5943024  LDR         R3,[R4,#0x24] ; ENC28J60_CSmask1
 000012BC  E5940008  LDR         R0,[R4,#0x8] ; pENC28J60_csSET
 000012C0  E5901000  LDR         R1,[R0,#0x0]
 000012C4  E1811003  ORR         R1,R1,R3
 000012C8  E5801000  STR         R1,[R0,#0x0]
 000012CC  E594302C  LDR         R3,[R4,#0x2C] ; ENC28J60_RSTmask1
 000012D0  E5940018  LDR         R0,[R4,#0x18] ; pENC28J60_rstSET
 000012D4  E5901000  LDR         R1,[R0,#0x0]
 000012D8  E1811003  ORR         R1,R1,R3
 000012DC  E5801000  STR         R1,[R0,#0x0]
 000012E0  EB000481  BL          ENC28J60_delay?A  ; Targ=0x24EC
 000012E4  E594302C  LDR         R3,[R4,#0x2C] ; ENC28J60_RSTmask1
 000012E8  E594001C  LDR         R0,[R4,#0x1C] ; pENC28J60_rstCLR
 000012EC  E5901000  LDR         R1,[R0,#0x0]
 000012F0  E1811003  ORR         R1,R1,R3
 000012F4  E5801000  STR         R1,[R0,#0x0]
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 24


 000012F8  EB00047B  BL          ENC28J60_delay?A  ; Targ=0x24EC
 000012FC  E594302C  LDR         R3,[R4,#0x2C] ; ENC28J60_RSTmask1
 00001300  E5940018  LDR         R0,[R4,#0x18] ; pENC28J60_rstSET
 00001304  E5901000  LDR         R1,[R0,#0x0]
 00001308  E1811003  ORR         R1,R1,R3
 0000130C  E5801000  STR         R1,[R0,#0x0]
 00001310  EB000475  BL          ENC28J60_delay?A  ; Targ=0x24EC
 00001314  E3A00002  MOV         R0,#0x2
 00001318  EB000765  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 0000131C  E5943024  LDR         R3,[R4,#0x24] ; ENC28J60_CSmask1
 00001320  E5940008  LDR         R0,[R4,#0x8] ; pENC28J60_csSET
 00001324  E5901000  LDR         R1,[R0,#0x0]
 00001328  E1811003  ORR         R1,R1,R3
 0000132C  E5801000  STR         R1,[R0,#0x0]
 00001330  E3A03000  MOV         R3,#0x0
 00001334  E92D0008  STMDB       R13!,{R3}
 00001338  E1A01005  MOV         R1,R5 ; CSbit
 0000133C  E1A00002  MOV         R0,R2 ; CSportPtr
 00001340  E3A0200F  MOV         R2,#0xF
 00001344  EB0006E1  BL          SPI_init?A  ; Targ=0x2ED0
 00001348  E28DD004  ADD         R13,R13,#0x0004
 0000134C  E5942024  LDR         R2,[R4,#0x24] ; ENC28J60_CSmask1
 00001350  E594000C  LDR         R0,[R4,#0xC] ; pENC28J60_csCLR
 00001354  E5901000  LDR         R1,[R0,#0x0]
 00001358  E1811002  ORR         R1,R1,R2
 0000135C  E5801000  STR         R1,[R0,#0x0]
 00001360  E3A00001  MOV         R0,#0x1
 00001364  EB000752  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001368  E3A000FF  MOV         R0,#0xFF
 0000136C  EB00073A  BL          SPI_char?A  ; Targ=0x305C
 00001370  E3A00002  MOV         R0,#0x2
 00001374  EB00074E  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001378  E5942024  LDR         R2,[R4,#0x24] ; ENC28J60_CSmask1
 0000137C  E5940008  LDR         R0,[R4,#0x8] ; pENC28J60_csSET
 00001380  E5901000  LDR         R1,[R0,#0x0]
 00001384  E1811002  ORR         R1,R1,R2
 00001388  E5801000  STR         R1,[R0,#0x0]
 0000138C  EB000456  BL          ENC28J60_delay?A  ; Targ=0x24EC
 00001390  E59F00EC  LDR         R0,[PC,+236] ; PoolRef @0x1484 ; ENC28J60_macAddr
 00001394  E59D1010  LDR         R1,[R13,#0x10] ; mac
 00001398  E3A02006  MOV         R2,#0x6
 0000139C  EB000754  BL          memcpy?A  ; Targ=0x30F4
 000013A0  E59F00E0  LDR         R0,[PC,+224] ; PoolRef @0x1488 ; ENC28J60_ipAddr
 000013A4  E59D1014  LDR         R1,[R13,#0x14] ; ip
 000013A8  E3A02004  MOV         R2,#0x4
 000013AC  EB000750  BL          memcpy?A  ; Targ=0x30F4
 000013B0  E3A0001F  MOV         R0,#0x1F
 000013B4  E3A01001  MOV         R1,#0x1
 000013B8  EB000180  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 000013BC  E3A0001F  MOV         R0,#0x1F
 000013C0  E3A01002  MOV         R1,#0x2
 000013C4  EB00017D  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 000013C8  E3A00008  MOV         R0,#0x8
 000013CC  E3A01000  MOV         R1,#0x0
 000013D0  EB000121  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000013D4  E3A0000A  MOV         R0,#0xA
 000013D8  E59F10AC  LDR         R1,[PC,+172] ; PoolRef @0x148C
 000013DC  EB00011E  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000013E0  E3A0000C  MOV         R0,#0xC
 000013E4  E3A01000  MOV         R1,#0x0
 000013E8  EB00011B  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000013EC  E3A00000  MOV         R0,#0x0
 000013F0  E3A01000  MOV         R1,#0x0
 000013F4  EB000118  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000013F8  E3A00004  MOV         R0,#0x4
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 25


 000013FC  E59F108C  LDR         R1,[PC,+140] ; PoolRef @0x1490
 00001400  EB000115  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00001404  E3A0001F  MOV         R0,#0x1F
 00001408  E3A01001  MOV         R1,#0x1
 0000140C  EB00014E  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00001410  E3A0001F  MOV         R0,#0x1F
 00001414  E3A01002  MOV         R1,#0x2
 00001418  EB000168  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 0000141C  E3A00018  MOV         R0,#0x18
 00001420  E3A01020  MOV         R1,#0x20
 00001424  EB00012B  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00001428  E3A0001F  MOV         R0,#0x1F
 0000142C  E3A01001  MOV         R1,#0x1
 00001430  EB000162  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 00001434  E3A0001F  MOV         R0,#0x1F
 00001438  E3A01002  MOV         R1,#0x2
 0000143C  EB000142  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00001440  E3A00001  MOV         R0,#0x1
 00001444  E3A01000  MOV         R1,#0x0
 00001448  EB000122  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 0000144C  E28D0018  ADD         R0,R13,#0x0018
 00001450  E5D00000  LDRB        R0,[R0,#0x0] ; fullDuplex
 00001454  EB000633  BL          ENC28J60_Init2?A  ; Targ=0x2D28
 00001458  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 0000145C            ; END 'ENC28J60_Init?A'

 0000145C  400004DC  DD          pENC28J60_csPIN		; POOL-Entry U=7
 00001460  E0028000  DD          0xE0028000		; POOL-Entry U=2
 00001464  E0028008  DD          0xE0028008		; POOL-Entry U=2
 00001468  E0028004  DD          0xE0028004		; POOL-Entry U=2
 0000146C  E002800C  DD          0xE002800C		; POOL-Entry U=2
 00001470  E0028010  DD          0xE0028010		; POOL-Entry U=2
 00001474  E0028018  DD          0xE0028018		; POOL-Entry U=2
 00001478  E0028014  DD          0xE0028014		; POOL-Entry U=2
 0000147C  E002801C  DD          0xE002801C		; POOL-Entry U=2
 00001480  400004EC  DD          pENC28J60_rstPIN		; POOL-Entry U=2
 00001484  4000050C  DD          ENC28J60_macAddr		; POOL-Entry U=1
 00001488  40000512  DD          ENC28J60_ipAddr		; POOL-Entry U=1
 0000148C  000019AD  DD          0x19AD		; POOL-Entry U=1
 00001490  000019AE  DD          0x19AE		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_doPacket?A?enc28j60':
 FILE: '..\enc28j60.c'
 00001494          ENC28J60_doPacket?A:  ; FUNCTION START
 00001494  E92D4000  STMDB       R13!,{LR}
 00001498  E3A0001F  MOV         R0,#0x1F
 0000149C  E3A01001  MOV         R1,#0x1
 000014A0  EB000129  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 000014A4  E3A0001F  MOV         R0,#0x1F
 000014A8  E3A01002  MOV         R1,#0x2
 000014AC  EB000143  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 000014B0  E3A00019  MOV         R0,#0x19
 000014B4  EB0000CB  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 000014B8  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readReg?A
 000014BC  E1A00C20  MOV         R0,R0,LSR #24
 000014C0  E3500000  CMP         R0,#0x0000
 000014C4  DA000000  BLE         L_14  ; Targ=0x14CC
 000014C8  EB0004CC  BL          ENC28J60_readPacket?A  ; Targ=0x2800
 000014CC          L_14:
 000014CC  E8BD8000  LDMIA       R13!,{PC}
 000014D0            ; END 'ENC28J60_doPacket?A'


*** Disassembly of Segment '?PR?ENC28J60_putByte?A?enc28j60':
 FILE: '..\enc28j60.c'
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 26


 000014D0          ENC28J60_putByte?A:  ; FUNCTION START
 000014D0  E92D4010  STMDB       R13!,{R4,LR}
 000014D4  E1A02000  MOV         R2,R0 ; v
 000014D8  ---- Variable 'v' assigned to Register 'R2' ----
 000014D8  E59F3050  LDR         R3,[PC,+80] ; PoolRef @0x1530 ; ENC28J60_CSmask1
 000014DC  E5934000  LDR         R4,[R3,#0x0] ; ENC28J60_CSmask1
 000014E0  E5130018  LDR         R0,[R3,#0xFFFFFFE8] ; pENC28J60_csCLR
 000014E4  E5901000  LDR         R1,[R0,#0x0]
 000014E8  E1811004  ORR         R1,R1,R4
 000014EC  E5801000  STR         R1,[R0,#0x0]
 000014F0  E3A00001  MOV         R0,#0x1
 000014F4  EB0006EE  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000014F8  E3A0007A  MOV         R0,#0x7A
 000014FC  EB0006D6  BL          SPI_char?A  ; Targ=0x305C
 00001500  E1A00002  MOV         R0,R2 ; v
 00001504  E1A00C00  MOV         R0,R0,LSL #24 ; v
 00001508  E1A00C20  MOV         R0,R0,LSR #24
 0000150C  EB0006D2  BL          SPI_char?A  ; Targ=0x305C
 00001510  E3A00002  MOV         R0,#0x2
 00001514  EB0006E6  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001518  E5932000  LDR         R2,[R3,#0x0] ; ENC28J60_CSmask1
 0000151C  E513001C  LDR         R0,[R3,#0xFFFFFFE4] ; pENC28J60_csSET
 00001520  E5901000  LDR         R1,[R0,#0x0]
 00001524  E1811002  ORR         R1,R1,R2
 00001528  E5801000  STR         R1,[R0,#0x0]
 0000152C  E8BD8010  LDMIA       R13!,{R4,PC}
 00001530            ; END 'ENC28J60_putByte?A'

 00001530  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_getByte?A?enc28j60':
 FILE: '..\enc28j60.c'
 00001534          ENC28J60_getByte?A:  ; FUNCTION START
 00001534  E92D4010  STMDB       R13!,{R4,LR}
 00001538            ; SCOPE-START
 00001538  E59F4058  LDR         R4,[PC,+88] ; PoolRef @0x1598 ; ENC28J60_CSmask1
 0000153C  E5942000  LDR         R2,[R4,#0x0] ; ENC28J60_CSmask1
 00001540  E5140018  LDR         R0,[R4,#0xFFFFFFE8] ; pENC28J60_csCLR
 00001544  E5901000  LDR         R1,[R0,#0x0]
 00001548  E1811002  ORR         R1,R1,R2
 0000154C  E5801000  STR         R1,[R0,#0x0]
 00001550  E3A00001  MOV         R0,#0x1
 00001554  EB0006D6  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001558  E3A0003A  MOV         R0,#0x3A
 0000155C  EB0006BE  BL          SPI_char?A  ; Targ=0x305C
 00001560  E3A00000  MOV         R0,#0x0
 00001564  EB0006BC  BL          SPI_char?A  ; Targ=0x305C
 00001568  E1A02000  MOV         R2,R0 ; v
 0000156C  ---- Variable 'v' assigned to Register 'R2' ----
 0000156C  E3A00002  MOV         R0,#0x2
 00001570  EB0006CF  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001574  E5943000  LDR         R3,[R4,#0x0] ; ENC28J60_CSmask1
 00001578  E514001C  LDR         R0,[R4,#0xFFFFFFE4] ; pENC28J60_csSET
 0000157C  E5901000  LDR         R1,[R0,#0x0]
 00001580  E1811003  ORR         R1,R1,R3
 00001584  E5801000  STR         R1,[R0,#0x0]
 00001588  E1A00002  MOV         R0,R2 ; v
 0000158C  E1A00C00  MOV         R0,R0,LSL #24 ; v
 00001590  E1A00C20  MOV         R0,R0,LSR #24
 00001594            ; SCOPE-END
 00001594  E8BD8010  LDMIA       R13!,{R4,PC}
 00001598            ; END 'ENC28J60_getByte?A'

 00001598  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 27


*** Disassembly of Segment '?PR?ENC28J60_memcpy?A?enc28j60':
 FILE: '..\enc28j60.c'
 0000159C          ENC28J60_memcpy?A:  ; FUNCTION START
 0000159C  E92D4030  STMDB       R13!,{R4-R5,LR}
 000015A0  E1A05002  MOV         R5,R2 ; l
 000015A4  ---- Variable 'l' assigned to Register 'R5' ----
 000015A4  E1A04001  MOV         R4,R1 ; s
 000015A8  ---- Variable 's' assigned to Register 'R4' ----
 000015A8  ---- Variable 'addr' assigned to Register 'R0' ----
 000015A8  E1A01000  MOV         R1,R0 ; addr
 000015AC  E3A00002  MOV         R0,#0x2
 000015B0  EB0000A9  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000015B4  E59F006C  LDR         R0,[PC,+108] ; PoolRef @0x1628 ; ENC28J60_CSmask1
 000015B8  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 000015BC  E5100018  LDR         R0,[R0,#0xFFFFFFE8] ; pENC28J60_csCLR
 000015C0  E5901000  LDR         R1,[R0,#0x0]
 000015C4  E1811002  ORR         R1,R1,R2
 000015C8  E5801000  STR         R1,[R0,#0x0]
 000015CC  E3A00001  MOV         R0,#0x1
 000015D0  EB0006B7  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000015D4  E3A0007A  MOV         R0,#0x7A
 000015D8  EB00069F  BL          SPI_char?A  ; Targ=0x305C
 000015DC  EA000005  B           L_72  ; Targ=0x15F8
 000015E0          L_74:
 000015E0  E1A00004  MOV         R0,R4 ; s
 000015E4  E5D00000  LDRB        R0,[R0,#0x0] ; s
 000015E8  EB00069B  BL          SPI_char?A  ; Targ=0x305C
 000015EC  E2844001  ADD         R4,R4,#0x0001 ; s
 000015F0  E2455001  SUB         R5,R5,#0x0001 ; l
 000015F4  E20550FF  AND         R5,R5,#0x00FF
 000015F8          L_72:
 000015F8  E1A00005  MOV         R0,R5 ; l
 000015FC  E3500000  CMP         R0,#0x0000 ; l
 00001600  1AFFFFF6  BNE         L_74  ; Targ=0x15E0
 00001604  E3A00002  MOV         R0,#0x2
 00001608  EB0006A9  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 0000160C  E59F0014  LDR         R0,[PC,+20] ; PoolRef @0x1628 ; ENC28J60_CSmask1
 00001610  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 00001614  E510001C  LDR         R0,[R0,#0xFFFFFFE4] ; pENC28J60_csSET
 00001618  E5901000  LDR         R1,[R0,#0x0]
 0000161C  E1811002  ORR         R1,R1,R2
 00001620  E5801000  STR         R1,[R0,#0x0]
 00001624  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 00001628            ; END 'ENC28J60_memcpy?A'

 00001628  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=2

*** Disassembly of Segment '?PR?ENC28J60_memcmp?A?enc28j60':
 FILE: '..\enc28j60.c'
 0000162C          ENC28J60_memcmp?A:  ; FUNCTION START
 0000162C  E92D4030  STMDB       R13!,{R4-R5,LR}
 00001630  E1A04002  MOV         R4,R2 ; l
 00001634  ---- Variable 'l' assigned to Register 'R4' ----
 00001634  E1A05001  MOV         R5,R1 ; s
 00001638  ---- Variable 's' assigned to Register 'R5' ----
 00001638  ---- Variable 'addr' assigned to Register 'R0' ----
 00001638  E1A01000  MOV         R1,R0 ; addr
 0000163C  E3A00000  MOV         R0,#0x0
 00001640  EB000085  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00001644  E59F008C  LDR         R0,[PC,+140] ; PoolRef @0x16D8 ; ENC28J60_CSmask1
 00001648  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 0000164C  E5100018  LDR         R0,[R0,#0xFFFFFFE8] ; pENC28J60_csCLR
 00001650  E5901000  LDR         R1,[R0,#0x0]
 00001654  E1811002  ORR         R1,R1,R2
 00001658  E5801000  STR         R1,[R0,#0x0]
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 28


 0000165C  E3A00001  MOV         R0,#0x1
 00001660  EB000693  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001664  E3A0003A  MOV         R0,#0x3A
 00001668  EB00067B  BL          SPI_char?A  ; Targ=0x305C
 0000166C  EA00000A  B           L_66  ; Targ=0x169C
 00001670          L_68:
 00001670  E3A00000  MOV         R0,#0x0
 00001674  EB000678  BL          SPI_char?A  ; Targ=0x305C
 00001678  E1A00C00  MOV         R0,R0,LSL #24 ; SPI_char?A
 0000167C  E1A00C20  MOV         R0,R0,LSR #24
 00001680  E1A01005  MOV         R1,R5 ; s
 00001684  E5D11000  LDRB        R1,[R1,#0x0] ; s
 00001688  E1500001  CMP         R0,R1
 0000168C  1A000005  BNE         L_67  ; Targ=0x16A8
 00001690  E2855001  ADD         R5,R5,#0x0001 ; s
 00001694  E2444001  SUB         R4,R4,#0x0001 ; l
 00001698  E20440FF  AND         R4,R4,#0x00FF
 0000169C          L_66:
 0000169C  E1A00004  MOV         R0,R4 ; l
 000016A0  E3500000  CMP         R0,#0x0000 ; l
 000016A4  1AFFFFF1  BNE         L_68  ; Targ=0x1670
 000016A8          L_67:
 000016A8  E3A00002  MOV         R0,#0x2
 000016AC  EB000680  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000016B0  E59F0020  LDR         R0,[PC,+32] ; PoolRef @0x16D8 ; ENC28J60_CSmask1
 000016B4  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 000016B8  E510001C  LDR         R0,[R0,#0xFFFFFFE4] ; pENC28J60_csSET
 000016BC  E5901000  LDR         R1,[R0,#0x0]
 000016C0  E1811002  ORR         R1,R1,R2
 000016C4  E5801000  STR         R1,[R0,#0x0]
 000016C8  E1A00004  MOV         R0,R4 ; l
 000016CC  E1A00C00  MOV         R0,R0,LSL #24 ; l
 000016D0  E1A00C20  MOV         R0,R0,LSR #24
 000016D4  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 000016D8            ; END 'ENC28J60_memcmp?A'

 000016D8  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=2

*** Disassembly of Segment '?PR?ENC28J60_writeMemory?A?enc28j60':
 FILE: '..\enc28j60.c'
 000016DC          ENC28J60_writeMemory?A:  ; FUNCTION START
 000016DC  E92D4070  STMDB       R13!,{R4-R6,LR}
 000016E0  E1A05003  MOV         R5,R3 ; bis
 000016E4  ---- Variable 'bis' assigned to Register 'R5' ----
 000016E4  E1A04002  MOV         R4,R2 ; v2
 000016E8  ---- Variable 'v2' assigned to Register 'R4' ----
 000016E8  E1A06001  MOV         R6,R1 ; v1
 000016EC  ---- Variable 'v1' assigned to Register 'R6' ----
 000016EC  ---- Variable 'addr' assigned to Register 'R0' ----
 000016EC  E1A01000  MOV         R1,R0 ; addr
 000016F0  E3A00002  MOV         R0,#0x2
 000016F4  EB000058  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000016F8  E59F0070  LDR         R0,[PC,+112] ; PoolRef @0x1770 ; ENC28J60_CSmask1
 000016FC  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 00001700  E5100018  LDR         R0,[R0,#0xFFFFFFE8] ; pENC28J60_csCLR
 00001704  E5901000  LDR         R1,[R0,#0x0]
 00001708  E1811002  ORR         R1,R1,R2
 0000170C  E5801000  STR         R1,[R0,#0x0]
 00001710  E3A00001  MOV         R0,#0x1
 00001714  EB000666  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001718  E3A0007A  MOV         R0,#0x7A
 0000171C  EB00064E  BL          SPI_char?A  ; Targ=0x305C
 00001720  E1A00006  MOV         R0,R6 ; v1
 00001724  E1A00C00  MOV         R0,R0,LSL #24 ; v1
 00001728  E1A00C20  MOV         R0,R0,LSR #24
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 29


 0000172C  EB00064A  BL          SPI_char?A  ; Targ=0x305C
 00001730  E1A00005  MOV         R0,R5 ; bis
 00001734  E3500000  CMP         R0,#0x0000 ; bis
 00001738  0A000003  BEQ         L_76  ; Targ=0x174C
 0000173C  E1A00004  MOV         R0,R4 ; v2
 00001740  E1A00C00  MOV         R0,R0,LSL #24 ; v2
 00001744  E1A00C20  MOV         R0,R0,LSR #24
 00001748  EB000643  BL          SPI_char?A  ; Targ=0x305C
 0000174C          L_76:
 0000174C  E3A00002  MOV         R0,#0x2
 00001750  EB000657  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001754  E59F0014  LDR         R0,[PC,+20] ; PoolRef @0x1770 ; ENC28J60_CSmask1
 00001758  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 0000175C  E510001C  LDR         R0,[R0,#0xFFFFFFE4] ; pENC28J60_csSET
 00001760  E5901000  LDR         R1,[R0,#0x0]
 00001764  E1811002  ORR         R1,R1,R2
 00001768  E5801000  STR         R1,[R0,#0x0]
 0000176C  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 00001770            ; END 'ENC28J60_writeMemory?A'

 00001770  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=2

*** Disassembly of Segment '?PR?ENC28J60_readMem?A?enc28j60':
 FILE: '..\enc28j60.c'
 00001774          ENC28J60_readMem?A:  ; FUNCTION START
 00001774  E92D4010  STMDB       R13!,{R4,LR}
 00001778  ---- Variable 'addr' assigned to Register 'R0' ----
 00001778            ; SCOPE-START
 00001778  E1A01000  MOV         R1,R0 ; addr
 0000177C  E3A00000  MOV         R0,#0x0
 00001780  EB000035  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00001784  E59F4058  LDR         R4,[PC,+88] ; PoolRef @0x17E4 ; ENC28J60_CSmask1
 00001788  E5942000  LDR         R2,[R4,#0x0] ; ENC28J60_CSmask1
 0000178C  E5140018  LDR         R0,[R4,#0xFFFFFFE8] ; pENC28J60_csCLR
 00001790  E5901000  LDR         R1,[R0,#0x0]
 00001794  E1811002  ORR         R1,R1,R2
 00001798  E5801000  STR         R1,[R0,#0x0]
 0000179C  E3A00001  MOV         R0,#0x1
 000017A0  EB000643  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000017A4  E3A0003A  MOV         R0,#0x3A
 000017A8  EB00062B  BL          SPI_char?A  ; Targ=0x305C
 000017AC  E3A00000  MOV         R0,#0x0
 000017B0  EB000629  BL          SPI_char?A  ; Targ=0x305C
 000017B4  E1A02000  MOV         R2,R0 ; v
 000017B8  ---- Variable 'v' assigned to Register 'R2' ----
 000017B8  E3A00002  MOV         R0,#0x2
 000017BC  EB00063C  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000017C0  E5943000  LDR         R3,[R4,#0x0] ; ENC28J60_CSmask1
 000017C4  E514001C  LDR         R0,[R4,#0xFFFFFFE4] ; pENC28J60_csSET
 000017C8  E5901000  LDR         R1,[R0,#0x0]
 000017CC  E1811003  ORR         R1,R1,R3
 000017D0  E5801000  STR         R1,[R0,#0x0]
 000017D4  E1A00002  MOV         R0,R2 ; v
 000017D8  E1A00C00  MOV         R0,R0,LSL #24 ; v
 000017DC  E1A00C20  MOV         R0,R0,LSR #24
 000017E0            ; SCOPE-END
 000017E0  E8BD8010  LDMIA       R13!,{R4,PC}
 000017E4            ; END 'ENC28J60_readMem?A'

 000017E4  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_readReg?A?enc28j60':
 FILE: '..\enc28j60.c'
 000017E8          ENC28J60_readReg?A:  ; FUNCTION START
 000017E8  E92D4010  STMDB       R13!,{R4,LR}
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 30


 000017EC  E1A02000  MOV         R2,R0 ; addr
 000017F0  ---- Variable 'addr' assigned to Register 'R2' ----
 000017F0            ; SCOPE-START
 000017F0  E59F4060  LDR         R4,[PC,+96] ; PoolRef @0x1858 ; ENC28J60_CSmask1
 000017F4  E5943000  LDR         R3,[R4,#0x0] ; ENC28J60_CSmask1
 000017F8  E5140018  LDR         R0,[R4,#0xFFFFFFE8] ; pENC28J60_csCLR
 000017FC  E5901000  LDR         R1,[R0,#0x0]
 00001800  E1811003  ORR         R1,R1,R3
 00001804  E5801000  STR         R1,[R0,#0x0]
 00001808  E3A00001  MOV         R0,#0x1
 0000180C  EB000628  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001810  E1A00002  MOV         R0,R2 ; addr
 00001814  E1A00C00  MOV         R0,R0,LSL #24 ; addr
 00001818  E1A00C20  MOV         R0,R0,LSR #24
 0000181C  EB00060E  BL          SPI_char?A  ; Targ=0x305C
 00001820  E3A00000  MOV         R0,#0x0
 00001824  EB00060C  BL          SPI_char?A  ; Targ=0x305C
 00001828  E1A02000  MOV         R2,R0 ; v
 0000182C  ---- Variable 'v' assigned to Register 'R2' ----
 0000182C  E3A00002  MOV         R0,#0x2
 00001830  EB00061F  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001834  E5943000  LDR         R3,[R4,#0x0] ; ENC28J60_CSmask1
 00001838  E514001C  LDR         R0,[R4,#0xFFFFFFE4] ; pENC28J60_csSET
 0000183C  E5901000  LDR         R1,[R0,#0x0]
 00001840  E1811003  ORR         R1,R1,R3
 00001844  E5801000  STR         R1,[R0,#0x0]
 00001848  E1A00002  MOV         R0,R2 ; v
 0000184C  E1A00C00  MOV         R0,R0,LSL #24 ; v
 00001850  E1A00C20  MOV         R0,R0,LSR #24
 00001854            ; SCOPE-END
 00001854  E8BD8010  LDMIA       R13!,{R4,PC}
 00001858            ; END 'ENC28J60_readReg?A'

 00001858  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_writeAddr?A?enc28j60':
 FILE: '..\enc28j60.c'
 0000185C          ENC28J60_writeAddr?A:  ; FUNCTION START
 0000185C  E92D4030  STMDB       R13!,{R4-R5,LR}
 00001860  E1A02001  MOV         R2,R1 ; v
 00001864  ---- Variable 'v' assigned to Register 'R2' ----
 00001864  E1A04000  MOV         R4,R0 ; addr
 00001868  ---- Variable 'addr' assigned to Register 'R4' ----
 00001868  E59F3064  LDR         R3,[PC,+100] ; PoolRef @0x18D4 ; ENC28J60_CSmask1
 0000186C  E5935000  LDR         R5,[R3,#0x0] ; ENC28J60_CSmask1
 00001870  E5130018  LDR         R0,[R3,#0xFFFFFFE8] ; pENC28J60_csCLR
 00001874  E5901000  LDR         R1,[R0,#0x0]
 00001878  E1811005  ORR         R1,R1,R5
 0000187C  E5801000  STR         R1,[R0,#0x0]
 00001880  E3A00001  MOV         R0,#0x1
 00001884  EB00060A  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001888  E1A00004  MOV         R0,R4 ; addr
 0000188C  E1A00C00  MOV         R0,R0,LSL #24 ; addr
 00001890  E1A00C20  MOV         R0,R0,LSR #24
 00001894  E3800040  ORR         R0,R0,#0x0040
 00001898  EB0005EF  BL          SPI_char?A  ; Targ=0x305C
 0000189C  E1A00002  MOV         R0,R2 ; v
 000018A0  E20000FF  AND         R0,R0,#0x00FF ; v
 000018A4  EB0005EC  BL          SPI_char?A  ; Targ=0x305C
 000018A8  E1A00002  MOV         R0,R2 ; v
 000018AC  E1A00420  MOV         R0,R0,LSR #8 ; v
 000018B0  EB0005E9  BL          SPI_char?A  ; Targ=0x305C
 000018B4  E3A00002  MOV         R0,#0x2
 000018B8  EB0005FD  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000018BC  E5932000  LDR         R2,[R3,#0x0] ; ENC28J60_CSmask1
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 31


 000018C0  E513001C  LDR         R0,[R3,#0xFFFFFFE4] ; pENC28J60_csSET
 000018C4  E5901000  LDR         R1,[R0,#0x0]
 000018C8  E1811002  ORR         R1,R1,R2
 000018CC  E5801000  STR         R1,[R0,#0x0]
 000018D0  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 000018D4            ; END 'ENC28J60_writeAddr?A'

 000018D4  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_writeReg?A?enc28j60':
 FILE: '..\enc28j60.c'
 000018D8          ENC28J60_writeReg?A:  ; FUNCTION START
 000018D8  E92D4030  STMDB       R13!,{R4-R5,LR}
 000018DC  E1A02001  MOV         R2,R1 ; v
 000018E0  ---- Variable 'v' assigned to Register 'R2' ----
 000018E0  E1A04000  MOV         R4,R0 ; addr
 000018E4  ---- Variable 'addr' assigned to Register 'R4' ----
 000018E4  E59F305C  LDR         R3,[PC,+92] ; PoolRef @0x1948 ; ENC28J60_CSmask1
 000018E8  E5935000  LDR         R5,[R3,#0x0] ; ENC28J60_CSmask1
 000018EC  E5130018  LDR         R0,[R3,#0xFFFFFFE8] ; pENC28J60_csCLR
 000018F0  E5901000  LDR         R1,[R0,#0x0]
 000018F4  E1811005  ORR         R1,R1,R5
 000018F8  E5801000  STR         R1,[R0,#0x0]
 000018FC  E3A00001  MOV         R0,#0x1
 00001900  EB0005EB  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001904  E1A00004  MOV         R0,R4 ; addr
 00001908  E1A00C00  MOV         R0,R0,LSL #24 ; addr
 0000190C  E1A00C20  MOV         R0,R0,LSR #24
 00001910  E3800040  ORR         R0,R0,#0x0040
 00001914  EB0005D0  BL          SPI_char?A  ; Targ=0x305C
 00001918  E1A00002  MOV         R0,R2 ; v
 0000191C  E1A00C00  MOV         R0,R0,LSL #24 ; v
 00001920  E1A00C20  MOV         R0,R0,LSR #24
 00001924  EB0005CC  BL          SPI_char?A  ; Targ=0x305C
 00001928  E3A00002  MOV         R0,#0x2
 0000192C  EB0005E0  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001930  E5932000  LDR         R2,[R3,#0x0] ; ENC28J60_CSmask1
 00001934  E513001C  LDR         R0,[R3,#0xFFFFFFE4] ; pENC28J60_csSET
 00001938  E5901000  LDR         R1,[R0,#0x0]
 0000193C  E1811002  ORR         R1,R1,R2
 00001940  E5801000  STR         R1,[R0,#0x0]
 00001944  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 00001948            ; END 'ENC28J60_writeReg?A'

 00001948  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_setBitReg?A?enc28j60':
 FILE: '..\enc28j60.c'
 0000194C          ENC28J60_setBitReg?A:  ; FUNCTION START
 0000194C  E92D4030  STMDB       R13!,{R4-R5,LR}
 00001950  E1A02001  MOV         R2,R1 ; mask
 00001954  ---- Variable 'mask' assigned to Register 'R2' ----
 00001954  E1A04000  MOV         R4,R0 ; addr
 00001958  ---- Variable 'addr' assigned to Register 'R4' ----
 00001958  E59F305C  LDR         R3,[PC,+92] ; PoolRef @0x19BC ; ENC28J60_CSmask1
 0000195C  E5935000  LDR         R5,[R3,#0x0] ; ENC28J60_CSmask1
 00001960  E5130018  LDR         R0,[R3,#0xFFFFFFE8] ; pENC28J60_csCLR
 00001964  E5901000  LDR         R1,[R0,#0x0]
 00001968  E1811005  ORR         R1,R1,R5
 0000196C  E5801000  STR         R1,[R0,#0x0]
 00001970  E3A00001  MOV         R0,#0x1
 00001974  EB0005CE  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001978  E1A00004  MOV         R0,R4 ; addr
 0000197C  E1A00C00  MOV         R0,R0,LSL #24 ; addr
 00001980  E1A00C20  MOV         R0,R0,LSR #24
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 32


 00001984  E3800080  ORR         R0,R0,#0x0080
 00001988  EB0005B3  BL          SPI_char?A  ; Targ=0x305C
 0000198C  E1A00002  MOV         R0,R2 ; mask
 00001990  E1A00C00  MOV         R0,R0,LSL #24 ; mask
 00001994  E1A00C20  MOV         R0,R0,LSR #24
 00001998  EB0005AF  BL          SPI_char?A  ; Targ=0x305C
 0000199C  E3A00002  MOV         R0,#0x2
 000019A0  EB0005C3  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000019A4  E5932000  LDR         R2,[R3,#0x0] ; ENC28J60_CSmask1
 000019A8  E513001C  LDR         R0,[R3,#0xFFFFFFE4] ; pENC28J60_csSET
 000019AC  E5901000  LDR         R1,[R0,#0x0]
 000019B0  E1811002  ORR         R1,R1,R2
 000019B4  E5801000  STR         R1,[R0,#0x0]
 000019B8  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 000019BC            ; END 'ENC28J60_setBitReg?A'

 000019BC  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_clearBitReg?A?enc28j60':
 FILE: '..\enc28j60.c'
 000019C0          ENC28J60_clearBitReg?A:  ; FUNCTION START
 000019C0  E92D4030  STMDB       R13!,{R4-R5,LR}
 000019C4  E1A02001  MOV         R2,R1 ; mask
 000019C8  ---- Variable 'mask' assigned to Register 'R2' ----
 000019C8  E1A04000  MOV         R4,R0 ; addr
 000019CC  ---- Variable 'addr' assigned to Register 'R4' ----
 000019CC  E59F305C  LDR         R3,[PC,+92] ; PoolRef @0x1A30 ; ENC28J60_CSmask1
 000019D0  E5935000  LDR         R5,[R3,#0x0] ; ENC28J60_CSmask1
 000019D4  E5130018  LDR         R0,[R3,#0xFFFFFFE8] ; pENC28J60_csCLR
 000019D8  E5901000  LDR         R1,[R0,#0x0]
 000019DC  E1811005  ORR         R1,R1,R5
 000019E0  E5801000  STR         R1,[R0,#0x0]
 000019E4  E3A00001  MOV         R0,#0x1
 000019E8  EB0005B1  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000019EC  E1A00004  MOV         R0,R4 ; addr
 000019F0  E1A00C00  MOV         R0,R0,LSL #24 ; addr
 000019F4  E1A00C20  MOV         R0,R0,LSR #24
 000019F8  E38000A0  ORR         R0,R0,#0x00A0
 000019FC  EB000596  BL          SPI_char?A  ; Targ=0x305C
 00001A00  E1A00002  MOV         R0,R2 ; mask
 00001A04  E1A00C00  MOV         R0,R0,LSL #24 ; mask
 00001A08  E1A00C20  MOV         R0,R0,LSR #24
 00001A0C  EB000592  BL          SPI_char?A  ; Targ=0x305C
 00001A10  E3A00002  MOV         R0,#0x2
 00001A14  EB0005A6  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 00001A18  E5932000  LDR         R2,[R3,#0x0] ; ENC28J60_CSmask1
 00001A1C  E513001C  LDR         R0,[R3,#0xFFFFFFE4] ; pENC28J60_csSET
 00001A20  E5901000  LDR         R1,[R0,#0x0]
 00001A24  E1811002  ORR         R1,R1,R2
 00001A28  E5801000  STR         R1,[R0,#0x0]
 00001A2C  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 00001A30            ; END 'ENC28J60_clearBitReg?A'

 00001A30  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_doTCP?A?enc28j60':
 FILE: '..\enc28j60.c'
 00001A34          ENC28J60_doTCP?A:  ; FUNCTION START
 00001A34  E92D40F0  STMDB       R13!,{R4-R7,LR}
 00001A38  E1A07002  MOV         R7,R2 ; payloadAddr
 00001A3C  ---- Variable 'payloadAddr' assigned to Register 'R7' ----
 00001A3C  E1A06001  MOV         R6,R1 ; ipHeaderLen
 00001A40  ---- Variable 'ipHeaderLen' assigned to Register 'R6' ----
 00001A40  E1A05000  MOV         R5,R0 ; start
 00001A44  ---- Variable 'start' assigned to Register 'R5' ----
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 33


 00001A44  E24DD02C  SUB         R13,R13,#0x002C
 00001A48            ; SCOPE-START
 00001A48  E1A00007  MOV         R0,R7 ; payloadAddr
 00001A4C  EBFFFF48  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001A50  E1A04C00  MOV         R4,R0,LSL #24 ; ENC28J60_readMem?A
 00001A54  E1A04C24  MOV         R4,R4,LSR #24
 00001A58  E1A04404  MOV         R4,R4,LSL #8
 00001A5C  E1A00007  MOV         R0,R7 ; payloadAddr
 00001A60  E2800001  ADD         R0,R0,#0x0001 ; payloadAddr
 00001A64  EBFFFF42  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001A68  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00001A6C  E1A00C20  MOV         R0,R0,LSR #24
 00001A70  E1840000  ORR         R0,R4,R0
 00001A74  E58D0004  STR         R0,[R13,#0x4] ; remotePort
 00001A78  E1A00007  MOV         R0,R7 ; payloadAddr
 00001A7C  E2800002  ADD         R0,R0,#0x0002 ; payloadAddr
 00001A80  EBFFFF3B  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001A84  E1A04C00  MOV         R4,R0,LSL #24 ; ENC28J60_readMem?A
 00001A88  E1A04C24  MOV         R4,R4,LSR #24
 00001A8C  E1A04404  MOV         R4,R4,LSL #8
 00001A90  E1A00007  MOV         R0,R7 ; payloadAddr
 00001A94  E2800003  ADD         R0,R0,#0x0003 ; payloadAddr
 00001A98  EBFFFF35  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001A9C  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00001AA0  E1A00C20  MOV         R0,R0,LSR #24
 00001AA4  E1840000  ORR         R0,R4,R0
 00001AA8  E58D0000  STR         R0,[R13,#0x0] ; port
 00001AAC  E3A01000  MOV         R1,#0x0
 00001AB0  E1A08001  MOV         R8,R1 ; tx
 00001AB4  ---- Variable 'tx' assigned to Register 'R8' ----
 00001AB4  E28D0014  ADD         R0,R13,#0x0014
 00001AB8  E5C01000  STRB        R1,[R0,#0x0] ; transmit
 00001ABC  E3A01001  MOV         R1,#0x1
 00001AC0  E28D0018  ADD         R0,R13,#0x0018
 00001AC4  E5C01000  STRB        R1,[R0,#0x0] ; swap
 00001AC8  E3A00000  MOV         R0,#0x0
 00001ACC  E58D0010  STR         R0,[R13,#0x10] ; replen
 00001AD0  E1A00007  MOV         R0,R7 ; payloadAddr
 00001AD4  E280000C  ADD         R0,R0,#0x000C ; payloadAddr
 00001AD8  EBFFFF25  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001ADC  E1A04C00  MOV         R4,R0,LSL #24 ; ENC28J60_readMem?A
 00001AE0  E1A04C24  MOV         R4,R4,LSR #24
 00001AE4  E1A04224  MOV         R4,R4,LSR #4
 00001AE8  E1A04104  MOV         R4,R4,LSL #2
 00001AEC  ---- Variable 'len' assigned to Register 'R4' ----
 00001AEC  E59F0688  LDR         R0,[PC,+1672] ; PoolRef @0x217C
 00001AF0  EBFFFF1F  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001AF4  E28D101C  ADD         R1,R13,#0x001C
 00001AF8  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr
 00001AFC  EBFFFE8C  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001B00  E3A0101D  MOV         R1,#0x1D
 00001B04  E081100D  ADD         R1,R1,R13
 00001B08  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr+1
 00001B0C  EBFFFE88  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001B10  E3A0101E  MOV         R1,#0x1E
 00001B14  E081100D  ADD         R1,R1,R13
 00001B18  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr+2
 00001B1C  EBFFFE84  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001B20  E3A0101F  MOV         R1,#0x1F
 00001B24  E081100D  ADD         R1,R1,R13
 00001B28  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr+3
 00001B2C  E1A00007  MOV         R0,R7 ; payloadAddr
 00001B30  E280000D  ADD         R0,R0,#0x000D ; payloadAddr
 00001B34  EBFFFF0E  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001B38  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 34


 00001B3C  E1A00C20  MOV         R0,R0,LSR #24
 00001B40  E200003F  AND         R0,R0,#0x003F
 00001B44  E58D0008  STR         R0,[R13,#0x8] ; tcpFlags
 00001B48  E59F0630  LDR         R0,[PC,+1584] ; PoolRef @0x2180 ; ENC28J60_pktLen
 00001B4C  E5900000  LDR         R0,[R0,#0x0] ; ENC28J60_pktLen
 00001B50  E240000E  SUB         R0,R0,#0x000E
 00001B54  E1A01006  MOV         R1,R6 ; ipHeaderLen
 00001B58  E0400001  SUB         R0,R0,R1 ; ipHeaderLen
 00001B5C  E1A01004  MOV         R1,R4 ; len
 00001B60  E0400001  SUB         R0,R0,R1 ; len
 00001B64  E58D000C  STR         R0,[R13,#0xC] ; datalen
 00001B68  E1A00007  MOV         R0,R7 ; payloadAddr
 00001B6C  EBFFFF00  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001B70  E1A0A000  MOV         R10,R0 ; i1
 00001B74  ---- Variable 'i1' assigned to Register 'R10' ----
 00001B74  EBFFFE6E  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001B78  E1A09000  MOV         R9,R0 ; i2
 00001B7C  ---- Variable 'i2' assigned to Register 'R9' ----
 00001B7C  E1A00007  MOV         R0,R7 ; payloadAddr
 00001B80  E2800002  ADD         R0,R0,#0x0002 ; payloadAddr
 00001B84  EBFFFEFA  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001B88  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readMem?A
 00001B8C  E1A01C21  MOV         R1,R1,LSR #24
 00001B90  E1A00007  MOV         R0,R7 ; payloadAddr
 00001B94  E3A03000  MOV         R3,#0x0
 00001B98  E1A02003  MOV         R2,R3
 00001B9C  EBFFFECE  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001BA0  E1A00007  MOV         R0,R7 ; payloadAddr
 00001BA4  E2800003  ADD         R0,R0,#0x0003 ; payloadAddr
 00001BA8  EBFFFEF1  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001BAC  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00001BB0  E1A00C20  MOV         R0,R0,LSR #24
 00001BB4  EBFFFE45  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00001BB8  E1A00007  MOV         R0,R7 ; payloadAddr
 00001BBC  E2800002  ADD         R0,R0,#0x0002 ; payloadAddr
 00001BC0  E1A0100A  MOV         R1,R10 ; i1
 00001BC4  E1A01C01  MOV         R1,R1,LSL #24 ; i1
 00001BC8  E1A01C21  MOV         R1,R1,LSR #24
 00001BCC  E1A02009  MOV         R2,R9 ; i2
 00001BD0  E1A02C02  MOV         R2,R2,LSL #24 ; i2
 00001BD4  E1A02C22  MOV         R2,R2,LSR #24
 00001BD8  E3A03001  MOV         R3,#0x1
 00001BDC  EBFFFEBE  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001BE0  E1A00007  MOV         R0,R7 ; payloadAddr
 00001BE4  E2800004  ADD         R0,R0,#0x0004 ; payloadAddr
 00001BE8  EBFFFEE1  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001BEC  E3A01023  MOV         R1,#0x23
 00001BF0  E081100D  ADD         R1,R1,R13
 00001BF4  E5C10000  STRB        R0,[R1,#0x0] ; syn+3
 00001BF8  EBFFFE4D  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001BFC  E3A01022  MOV         R1,#0x22
 00001C00  E081100D  ADD         R1,R1,R13
 00001C04  E5C10000  STRB        R0,[R1,#0x0] ; syn+2
 00001C08  EBFFFE49  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001C0C  E3A01021  MOV         R1,#0x21
 00001C10  E081100D  ADD         R1,R1,R13
 00001C14  E5C10000  STRB        R0,[R1,#0x0] ; syn+1
 00001C18  EBFFFE45  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001C1C  E28D1020  ADD         R1,R13,#0x0020
 00001C20  E5C10000  STRB        R0,[R1,#0x0] ; syn
 00001C24  E1A00007  MOV         R0,R7 ; payloadAddr
 00001C28  E2800008  ADD         R0,R0,#0x0008 ; payloadAddr
 00001C2C  EBFFFED0  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001C30  E3A01027  MOV         R1,#0x27
 00001C34  E081100D  ADD         R1,R1,R13
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 35


 00001C38  E5C10000  STRB        R0,[R1,#0x0] ; ack+3
 00001C3C  EBFFFE3C  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001C40  E3A01026  MOV         R1,#0x26
 00001C44  E081100D  ADD         R1,R1,R13
 00001C48  E5C10000  STRB        R0,[R1,#0x0] ; ack+2
 00001C4C  EBFFFE38  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001C50  E3A01025  MOV         R1,#0x25
 00001C54  E081100D  ADD         R1,R1,R13
 00001C58  E5C10000  STRB        R0,[R1,#0x0] ; ack+1
 00001C5C  EBFFFE34  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00001C60  E28D1024  ADD         R1,R13,#0x0024
 00001C64  E5C10000  STRB        R0,[R1,#0x0] ; ack
 00001C68  E59D9008  LDR         R9,[R13,#0x8] ; tcpFlags
 00001C6C  E3590002  CMP         R9,#0x0002
 00001C70  1A000020  BNE         L_32  ; Targ=0x1CF8
 00001C74  E59D0020  LDR         R0,[R13,#0x20] ; syn
 00001C78  E2800001  ADD         R0,R0,#0x0001
 00001C7C  E58D0024  STR         R0,[R13,#0x24] ; ack
 00001C80  E3A00012  MOV         R0,#0x12
 00001C84  E58D0008  STR         R0,[R13,#0x8] ; tcpFlags
 00001C88  E3A0000C  MOV         R0,#0xC
 00001C8C  EBFFFED5  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00001C90  E28D1020  ADD         R1,R13,#0x0020
 00001C94  E5C10000  STRB        R0,[R1,#0x0] ; syn
 00001C98  E3A0000D  MOV         R0,#0xD
 00001C9C  EBFFFED1  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00001CA0  E3A01021  MOV         R1,#0x21
 00001CA4  E081100D  ADD         R1,R1,R13
 00001CA8  E5C10000  STRB        R0,[R1,#0x0] ; syn+1
 00001CAC  E3A00000  MOV         R0,#0x0
 00001CB0  EBFFFECC  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00001CB4  E3A01022  MOV         R1,#0x22
 00001CB8  E081100D  ADD         R1,R1,R13
 00001CBC  E5C10000  STRB        R0,[R1,#0x0] ; syn+2
 00001CC0  E3A00001  MOV         R0,#0x1
 00001CC4  EBFFFEC7  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00001CC8  E3A01023  MOV         R1,#0x23
 00001CCC  E081100D  ADD         R1,R1,R13
 00001CD0  E5C10000  STRB        R0,[R1,#0x0] ; syn+3
 00001CD4  E2888001  ADD         R8,R8,#0x0001 ; tx
 00001CD8  E20880FF  AND         R8,R8,#0x00FF
 00001CDC  E3A04014  MOV         R4,#0x14
 00001CE0  E3A00000  MOV         R0,#0x0
 00001CE4  E58D0010  STR         R0,[R13,#0x10] ; replen
 00001CE8  E3A01000  MOV         R1,#0x0
 00001CEC  E59F0490  LDR         R0,[PC,+1168] ; PoolRef @0x2184 ; ENC28J60_closeTCP
 00001CF0  E5C01000  STRB        R1,[R0,#0x0] ; ENC28J60_closeTCP
 00001CF4  EA000022  B           L_33  ; Targ=0x1D84
 00001CF8          L_32:
 00001CF8  E3590018  CMP         R9,#0x0018
 00001CFC  1A000011  BNE         L_34  ; Targ=0x1D48
 00001D00  E59D0020  LDR         R0,[R13,#0x20] ; syn
 00001D04  E58D0028  STR         R0,[R13,#0x28] ; s
 00001D08  E59D0024  LDR         R0,[R13,#0x24] ; ack
 00001D0C  E58D0020  STR         R0,[R13,#0x20] ; syn
 00001D10  E59D100C  LDR         R1,[R13,#0xC] ; datalen
 00001D14  E59D0028  LDR         R0,[R13,#0x28] ; s
 00001D18  E0800001  ADD         R0,R0,R1
 00001D1C  E58D0024  STR         R0,[R13,#0x24] ; ack
 00001D20  E3A00010  MOV         R0,#0x10
 00001D24  E58D0008  STR         R0,[R13,#0x8] ; tcpFlags
 00001D28  E2888001  ADD         R8,R8,#0x0001 ; tx
 00001D2C  E20880FF  AND         R8,R8,#0x00FF
 00001D30  E3A04014  MOV         R4,#0x14
 00001D34  E28D0014  ADD         R0,R13,#0x0014
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 36


 00001D38  E5D01000  LDRB        R1,[R0,#0x0] ; transmit
 00001D3C  E2811001  ADD         R1,R1,#0x0001
 00001D40  E5C01000  STRB        R1,[R0,#0x0] ; transmit
 00001D44  EA00000E  B           L_33  ; Targ=0x1D84
 00001D48          L_34:
 00001D48  E3590011  CMP         R9,#0x0011
 00001D4C  1A00000C  BNE         L_33  ; Targ=0x1D84
 00001D50  E59D1020  LDR         R1,[R13,#0x20] ; syn
 00001D54  ---- Variable 'l' assigned to Register 'R1' ----
 00001D54  E59D0024  LDR         R0,[R13,#0x24] ; ack
 00001D58  E58D0020  STR         R0,[R13,#0x20] ; syn
 00001D5C  E1A00001  MOV         R0,R1 ; l
 00001D60  E2800001  ADD         R0,R0,#0x0001 ; l
 00001D64  E58D0024  STR         R0,[R13,#0x24] ; ack
 00001D68  E3A00010  MOV         R0,#0x10
 00001D6C  E58D0008  STR         R0,[R13,#0x8] ; tcpFlags
 00001D70  E2888001  ADD         R8,R8,#0x0001 ; tx
 00001D74  E20880FF  AND         R8,R8,#0x00FF
 00001D78  E3A04014  MOV         R4,#0x14
 00001D7C  E3A00000  MOV         R0,#0x0
 00001D80  E58D0010  STR         R0,[R13,#0x10] ; replen
 00001D84          L_33:
 00001D84  E1A00008  MOV         R0,R8 ; tx
 00001D88  E3500000  CMP         R0,#0x0000 ; tx
 00001D8C  0A0000F8  BEQ         L_37  ; Targ=0x2174
 00001D90          MORE2SEND:
 00001D90  E1A00007  MOV         R0,R7 ; payloadAddr
 00001D94  E2800004  ADD         R0,R0,#0x0004 ; payloadAddr
 00001D98  E3A01023  MOV         R1,#0x23
 00001D9C  E081100D  ADD         R1,R1,R13
 00001DA0  E5D11000  LDRB        R1,[R1,#0x0] ; syn+3
 00001DA4  E3A02022  MOV         R2,#0x22
 00001DA8  E082200D  ADD         R2,R2,R13
 00001DAC  E5D22000  LDRB        R2,[R2,#0x0] ; syn+2
 00001DB0  E3A03001  MOV         R3,#0x1
 00001DB4  EBFFFE48  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001DB8  E3A00021  MOV         R0,#0x21
 00001DBC  E080000D  ADD         R0,R0,R13
 00001DC0  E5D00000  LDRB        R0,[R0,#0x0] ; syn+1
 00001DC4  EBFFFDC1  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00001DC8  E28D0020  ADD         R0,R13,#0x0020
 00001DCC  E5D00000  LDRB        R0,[R0,#0x0] ; syn
 00001DD0  EBFFFDBE  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00001DD4  E1A00007  MOV         R0,R7 ; payloadAddr
 00001DD8  E2800008  ADD         R0,R0,#0x0008 ; payloadAddr
 00001DDC  E3A01027  MOV         R1,#0x27
 00001DE0  E081100D  ADD         R1,R1,R13
 00001DE4  E5D11000  LDRB        R1,[R1,#0x0] ; ack+3
 00001DE8  E3A02026  MOV         R2,#0x26
 00001DEC  E082200D  ADD         R2,R2,R13
 00001DF0  E5D22000  LDRB        R2,[R2,#0x0] ; ack+2
 00001DF4  E3A03001  MOV         R3,#0x1
 00001DF8  EBFFFE37  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001DFC  E3A00025  MOV         R0,#0x25
 00001E00  E080000D  ADD         R0,R0,R13
 00001E04  E5D00000  LDRB        R0,[R0,#0x0] ; ack+1
 00001E08  EBFFFDB0  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00001E0C  E28D0024  ADD         R0,R13,#0x0024
 00001E10  E5D00000  LDRB        R0,[R0,#0x0] ; ack
 00001E14  EBFFFDAD  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00001E18  E1A00007  MOV         R0,R7 ; payloadAddr
 00001E1C  E280000C  ADD         R0,R0,#0x000C ; payloadAddr
 00001E20  EBFFFE53  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001E24  E1A08C00  MOV         R8,R0,LSL #24 ; ENC28J60_readMem?A
 00001E28  E1A08C28  MOV         R8,R8,LSR #24
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 37


 00001E2C  E208800F  AND         R8,R8,#0x000F
 00001E30  E1A08C08  MOV         R8,R8,LSL #24
 00001E34  E1A08C28  MOV         R8,R8,LSR #24
 00001E38  ---- Variable 'tmp' assigned to Register 'R8' ----
 00001E38  E1A00004  MOV         R0,R4 ; len
 00001E3C  E1A00120  MOV         R0,R0,LSR #2 ; len
 00001E40  E1A00200  MOV         R0,R0,LSL #4
 00001E44  E1A00C00  MOV         R0,R0,LSL #24
 00001E48  E1A00C20  MOV         R0,R0,LSR #24
 00001E4C  E1888000  ORR         R8,R8,R0 ; tmp
 00001E50  E1A00007  MOV         R0,R7 ; payloadAddr
 00001E54  E280000C  ADD         R0,R0,#0x000C ; payloadAddr
 00001E58  E1A01008  MOV         R1,R8 ; tmp
 00001E5C  E1A01C01  MOV         R1,R1,LSL #24 ; tmp
 00001E60  E1A01C21  MOV         R1,R1,LSR #24
 00001E64  E3A03000  MOV         R3,#0x0
 00001E68  E1A02003  MOV         R2,R3
 00001E6C  EBFFFE1A  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001E70  E1A00007  MOV         R0,R7 ; payloadAddr
 00001E74  E280000D  ADD         R0,R0,#0x000D ; payloadAddr
 00001E78  EBFFFE3D  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00001E7C  E1A08C00  MOV         R8,R0,LSL #24 ; ENC28J60_readMem?A
 00001E80  E1A08C28  MOV         R8,R8,LSR #24
 00001E84  E20880C0  AND         R8,R8,#0x00C0
 00001E88  E1A08C08  MOV         R8,R8,LSL #24
 00001E8C  E1A08C28  MOV         R8,R8,LSR #24
 00001E90  E59D0008  LDR         R0,[R13,#0x8] ; tcpFlags
 00001E94  E1A00C00  MOV         R0,R0,LSL #24
 00001E98  E1A00C20  MOV         R0,R0,LSR #24
 00001E9C  E1888000  ORR         R8,R8,R0 ; tmp
 00001EA0  E1A00007  MOV         R0,R7 ; payloadAddr
 00001EA4  E280000D  ADD         R0,R0,#0x000D ; payloadAddr
 00001EA8  E1A01008  MOV         R1,R8 ; tmp
 00001EAC  E1A01C01  MOV         R1,R1,LSL #24 ; tmp
 00001EB0  E1A01C21  MOV         R1,R1,LSR #24
 00001EB4  E3A03000  MOV         R3,#0x0
 00001EB8  E1A02003  MOV         R2,R3
 00001EBC  EBFFFE06  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001EC0  E1A01006  MOV         R1,R6 ; ipHeaderLen
 00001EC4  E59D0010  LDR         R0,[R13,#0x10] ; replen
 00001EC8  E0800001  ADD         R0,R0,R1 ; ipHeaderLen
 00001ECC  E1A01004  MOV         R1,R4 ; len
 00001ED0  E0800001  ADD         R0,R0,R1 ; len
 00001ED4  E58D000C  STR         R0,[R13,#0xC] ; datalen
 00001ED8  E28D0018  ADD         R0,R13,#0x0018
 00001EDC  E5D00000  LDRB        R0,[R0,#0x0] ; swap
 00001EE0  E3500000  CMP         R0,#0x0000
 00001EE4  0A000001  BEQ         L_39  ; Targ=0x1EF0
 00001EE8  EB00020A  BL          ENC28J60_MACswap?A  ; Targ=0x2718
 00001EEC  EB000218  BL          ENC28J60_IPswap?A  ; Targ=0x2754
 00001EF0          L_39:
 00001EF0  E59D200C  LDR         R2,[R13,#0xC] ; datalen
 00001EF4  E1A01422  MOV         R1,R2,LSR #8
 00001EF8  E59F0288  LDR         R0,[PC,+648] ; PoolRef @0x2188
 00001EFC  E3A03001  MOV         R3,#0x1
 00001F00  EBFFFDF5  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001F04  E59F0280  LDR         R0,[PC,+640] ; PoolRef @0x218C
 00001F08  E3A02000  MOV         R2,#0x0
 00001F0C  E1A01002  MOV         R1,R2
 00001F10  E3A03001  MOV         R3,#0x1
 00001F14  EBFFFDF0  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001F18  E1A01006  MOV         R1,R6 ; ipHeaderLen
 00001F1C  E59F026C  LDR         R0,[PC,+620] ; PoolRef @0x2190
 00001F20  EB00036A  BL          ENC28J60_checksum?A  ; Targ=0x2CD0
 00001F24  E3A00017  MOV         R0,#0x17
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 38


 00001F28  EBFFFE2E  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00001F2C  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readReg?A
 00001F30  E1A01C21  MOV         R1,R1,LSR #24
 00001F34  E92D0002  STMDB       R13!,{R1}
 00001F38  E3A00016  MOV         R0,#0x16
 00001F3C  EBFFFE29  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00001F40  E1A02C00  MOV         R2,R0,LSL #24 ; ENC28J60_readReg?A
 00001F44  E1A02C22  MOV         R2,R2,LSR #24
 00001F48  E59F023C  LDR         R0,[PC,+572] ; PoolRef @0x218C
 00001F4C  E3A03001  MOV         R3,#0x1
 00001F50  E8BD0002  LDMIA       R13!,{R1}
 00001F54  EBFFFDE0  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001F58  E59DA00C  LDR         R10,[R13,#0xC] ; datalen
 00001F5C  E59F022C  LDR         R0,[PC,+556] ; PoolRef @0x2190
 00001F60  E08AA000  ADD         R10,R10,R0
 00001F64  ---- Variable 'packetEndAddr' assigned to Register 'R10' ----
 00001F64  E1A00007  MOV         R0,R7 ; payloadAddr
 00001F68  E2800010  ADD         R0,R0,#0x0010 ; payloadAddr
 00001F6C  E3A02000  MOV         R2,#0x0
 00001F70  E1A01002  MOV         R1,R2
 00001F74  E3A03001  MOV         R3,#0x1
 00001F78  EBFFFDD7  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001F7C  E59D900C  LDR         R9,[R13,#0xC] ; datalen
 00001F80  E2099001  AND         R9,R9,#0x0001
 00001F84  E1A09C09  MOV         R9,R9,LSL #24
 00001F88  E1A09C29  MOV         R9,R9,LSR #24
 00001F8C  ---- Variable 'align' assigned to Register 'R9' ----
 00001F8C  E1A0000A  MOV         R0,R10 ; packetEndAddr
 00001F90  E3A03000  MOV         R3,#0x0
 00001F94  E1A01003  MOV         R1,R3
 00001F98  E1A02003  MOV         R2,R3
 00001F9C  EBFFFDCE  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001FA0  E1A00009  MOV         R0,R9 ; align
 00001FA4  E1A00C00  MOV         R0,R0,LSL #24 ; align
 00001FA8  E1A00C20  MOV         R0,R0,LSR #24
 00001FAC  E1A0200A  MOV         R2,R10 ; packetEndAddr
 00001FB0  E0822000  ADD         R2,R2,R0 ; packetEndAddr
 00001FB4  E59F01C0  LDR         R0,[PC,+448] ; PoolRef @0x217C
 00001FB8  E59F11D4  LDR         R1,[PC,+468] ; PoolRef @0x2194
 00001FBC  E3A03000  MOV         R3,#0x0
 00001FC0  EB000187  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 00001FC4  E1A0000A  MOV         R0,R10 ; packetEndAddr
 00001FC8  E2800008  ADD         R0,R0,#0x0008 ; packetEndAddr
 00001FCC  E1A01009  MOV         R1,R9 ; align
 00001FD0  E1A01C01  MOV         R1,R1,LSL #24 ; align
 00001FD4  E1A01C21  MOV         R1,R1,LSR #24
 00001FD8  E0800001  ADD         R0,R0,R1
 00001FDC  E3A01000  MOV         R1,#0x0
 00001FE0  E3A02006  MOV         R2,#0x6
 00001FE4  E3A03001  MOV         R3,#0x1
 00001FE8  EBFFFDBB  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00001FEC  E59D0010  LDR         R0,[R13,#0x10] ; replen
 00001FF0  E1A02004  MOV         R2,R4 ; len
 00001FF4  E0822000  ADD         R2,R2,R0 ; len
 00001FF8  E1A01422  MOV         R1,R2,LSR #8
 00001FFC  E1A0000A  MOV         R0,R10 ; packetEndAddr
 00002000  E280000A  ADD         R0,R0,#0x000A ; packetEndAddr
 00002004  E1A03009  MOV         R3,R9 ; align
 00002008  E1A03C03  MOV         R3,R3,LSL #24 ; align
 0000200C  E1A03C23  MOV         R3,R3,LSR #24
 00002010  E0800003  ADD         R0,R0,R3
 00002014  E3A03001  MOV         R3,#0x1
 00002018  EBFFFDAF  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 0000201C  E59D0010  LDR         R0,[R13,#0x10] ; replen
 00002020  E1A01004  MOV         R1,R4 ; len
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 39


 00002024  E0811000  ADD         R1,R1,R0 ; len
 00002028  E281100C  ADD         R1,R1,#0x000C
 0000202C  E1A00009  MOV         R0,R9 ; align
 00002030  E1A00C00  MOV         R0,R0,LSL #24 ; align
 00002034  E1A00C20  MOV         R0,R0,LSR #24
 00002038  E0811000  ADD         R1,R1,R0
 0000203C  E1A00007  MOV         R0,R7 ; payloadAddr
 00002040  EB000322  BL          ENC28J60_checksum?A  ; Targ=0x2CD0
 00002044  E3A00017  MOV         R0,#0x17
 00002048  EBFFFDE6  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 0000204C  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readReg?A
 00002050  E1A01C21  MOV         R1,R1,LSR #24
 00002054  E92D0002  STMDB       R13!,{R1}
 00002058  E3A00016  MOV         R0,#0x16
 0000205C  EBFFFDE1  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002060  E1A02C00  MOV         R2,R0,LSL #24 ; ENC28J60_readReg?A
 00002064  E1A02C22  MOV         R2,R2,LSR #24
 00002068  E1A00007  MOV         R0,R7 ; payloadAddr
 0000206C  E2800010  ADD         R0,R0,#0x0010 ; payloadAddr
 00002070  E3A03001  MOV         R3,#0x1
 00002074  E8BD0002  LDMIA       R13!,{R1}
 00002078  EBFFFD97  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 0000207C  E59D000C  LDR         R0,[R13,#0xC] ; datalen
 00002080  E280000E  ADD         R0,R0,#0x000E
 00002084  EB0001C0  BL          ENC28J60_TXpacket?A  ; Targ=0x278C
 00002088  E28D0014  ADD         R0,R13,#0x0014
 0000208C  E5D01000  LDRB        R1,[R0,#0x0] ; transmit
 00002090  E3510000  CMP         R1,#0x0000
 00002094  0A000023  BEQ         L_40  ; Targ=0x2128
 00002098  E3A01010  MOV         R1,#0x10
 0000209C  E58D1008  STR         R1,[R13,#0x8] ; tcpFlags
 000020A0  E3A01000  MOV         R1,#0x0
 000020A4  E5C01000  STRB        R1,[R0,#0x0] ; transmit
 000020A8  E59F00D4  LDR         R0,[PC,+212] ; PoolRef @0x2184 ; ENC28J60_closeTCP
 000020AC  E5D02000  LDRB        R2,[R0,#0x0] ; ENC28J60_closeTCP
 000020B0  E2822001  ADD         R2,R2,#0x0001
 000020B4  E5C02000  STRB        R2,[R0,#0x0] ; ENC28J60_closeTCP
 000020B8  E28D0018  ADD         R0,R13,#0x0018
 000020BC  E5C01000  STRB        R1,[R0,#0x0] ; swap
 000020C0  E1A00004  MOV         R0,R4 ; len
 000020C4  E1A01007  MOV         R1,R7 ; payloadAddr
 000020C8  E0811000  ADD         R1,R1,R0 ; payloadAddr
 000020CC  E3A00002  MOV         R0,#0x2
 000020D0  EBFFFDE1  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000020D4  E1A01005  MOV         R1,R5 ; start
 000020D8  E281100E  ADD         R1,R1,#0x000E ; start
 000020DC  E1A00006  MOV         R0,R6 ; ipHeaderLen
 000020E0  E0811000  ADD         R1,R1,R0 ; ipHeaderLen
 000020E4  E1A00004  MOV         R0,R4 ; len
 000020E8  E0811000  ADD         R1,R1,R0 ; len
 000020EC  E3A00000  MOV         R0,#0x0
 000020F0  EBFFFDD9  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000020F4  E59F0084  LDR         R0,[PC,+132] ; PoolRef @0x2180 ; ENC28J60_pktLen
 000020F8  E5903000  LDR         R3,[R0,#0x0] ; ENC28J60_pktLen
 000020FC  E243300E  SUB         R3,R3,#0x000E
 00002100  E1A00006  MOV         R0,R6 ; ipHeaderLen
 00002104  E0433000  SUB         R3,R3,R0 ; ipHeaderLen
 00002108  E1A00004  MOV         R0,R4 ; len
 0000210C  E0433000  SUB         R3,R3,R0 ; len
 00002110  E28D001C  ADD         R0,R13,#0x001C
 00002114  E59D1004  LDR         R1,[R13,#0x4] ; remotePort
 00002118  E59D2000  LDR         R2,[R13,#0x0] ; port
 0000211C  EBFFF9A8  BL          ENC28J60_userTCP?A  ; Targ=0x7C4
 00002120  E58D0010  STR         R0,[R13,#0x10] ; replen
 00002124  EAFFFF19  B           MORE2SEND  ; Targ=0x1D90
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 40


 00002128          L_40:
 00002128  E59F0054  LDR         R0,[PC,+84] ; PoolRef @0x2184 ; ENC28J60_closeTCP
 0000212C  E5D00000  LDRB        R0,[R0,#0x0] ; ENC28J60_closeTCP
 00002130  E3500000  CMP         R0,#0x0000
 00002134  0A00000E  BEQ         L_37  ; Targ=0x2174
 00002138  E59D1010  LDR         R1,[R13,#0x10] ; replen
 0000213C  E59D0020  LDR         R0,[R13,#0x20] ; syn
 00002140  E0800001  ADD         R0,R0,R1
 00002144  E58D0020  STR         R0,[R13,#0x20] ; syn
 00002148  E3A00011  MOV         R0,#0x11
 0000214C  E58D0008  STR         R0,[R13,#0x8] ; tcpFlags
 00002150  E3A01000  MOV         R1,#0x0
 00002154  E59F0028  LDR         R0,[PC,+40] ; PoolRef @0x2184 ; ENC28J60_closeTCP
 00002158  E5C01000  STRB        R1,[R0,#0x0] ; ENC28J60_closeTCP
 0000215C  E28D0018  ADD         R0,R13,#0x0018
 00002160  E5C01000  STRB        R1,[R0,#0x0] ; swap
 00002164  E3A04014  MOV         R4,#0x14
 00002168  E3A00000  MOV         R0,#0x0
 0000216C  E58D0010  STR         R0,[R13,#0x10] ; replen
 00002170  EAFFFF06  B           MORE2SEND  ; Targ=0x1D90
 00002174          L_37:
 00002174            ; SCOPE-END
 00002174  E28DD02C  ADD         R13,R13,#0x002C
 00002178  E8BD80F0  LDMIA       R13!,{R4-R7,PC}
 0000217C            ; END 'ENC28J60_doTCP?A'

 0000217C  000019C9  DD          0x19C9		; POOL-Entry U=2
 00002180  400004D8  DD          ENC28J60_pktLen		; POOL-Entry U=2
 00002184  40000516  DD          ENC28J60_closeTCP		; POOL-Entry U=4
 00002188  000019BF  DD          0x19BF		; POOL-Entry U=1
 0000218C  000019C7  DD          0x19C7		; POOL-Entry U=2
 00002190  000019BD  DD          0x19BD		; POOL-Entry U=2
 00002194  000019D1  DD          0x19D1		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_doUDP?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002198          ENC28J60_doUDP?A:  ; FUNCTION START
 00002198  E92D40F0  STMDB       R13!,{R4-R7,LR}
 0000219C  E1A05002  MOV         R5,R2 ; payloadAddr
 000021A0  ---- Variable 'payloadAddr' assigned to Register 'R5' ----
 000021A0  E1A06001  MOV         R6,R1 ; ipHeaderLen
 000021A4  ---- Variable 'ipHeaderLen' assigned to Register 'R6' ----
 000021A4  E1A09000  MOV         R9,R0 ; start
 000021A8  ---- Variable 'start' assigned to Register 'R9' ----
 000021A8  E24DD00C  SUB         R13,R13,#0x000C
 000021AC            ; SCOPE-START
 000021AC  E1A00005  MOV         R0,R5 ; payloadAddr
 000021B0  EBFFFD6F  BL          ENC28J60_readMem?A  ; Targ=0x1774
 000021B4  E28D4000  ADD         R4,R13,#0x0000
 000021B8  E5C40000  STRB        R0,[R4,#0x0] ; sph
 000021BC  EBFFFCDC  BL          ENC28J60_getByte?A  ; Targ=0x1534
 000021C0  E28D1004  ADD         R1,R13,#0x0004
 000021C4  E5C10000  STRB        R0,[R1,#0x0] ; spl
 000021C8  E5D40000  LDRB        R0,[R4,#0x0] ; sph
 000021CC  E1A08000  MOV         R8,R0
 000021D0  E1A08408  MOV         R8,R8,LSL #8
 000021D4  E5D10000  LDRB        R0,[R1,#0x0] ; spl
 000021D8  E0888000  ADD         R8,R8,R0
 000021DC  ---- Variable 'remotePort' assigned to Register 'R8' ----
 000021DC  EBFFFCD4  BL          ENC28J60_getByte?A  ; Targ=0x1534
 000021E0  E1A0B000  MOV         R11,R0 ; dph
 000021E4  ---- Variable 'dph' assigned to Register 'R11' ----
 000021E4  EBFFFCD2  BL          ENC28J60_getByte?A  ; Targ=0x1534
 000021E8  E1A0A000  MOV         R10,R0 ; dpl
 000021EC  ---- Variable 'dpl' assigned to Register 'R10' ----
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 41


 000021EC  E1A0000B  MOV         R0,R11 ; dph
 000021F0  E1A04C00  MOV         R4,R0,LSL #24 ; dph
 000021F4  E1A04C24  MOV         R4,R4,LSR #24
 000021F8  E1A04404  MOV         R4,R4,LSL #8
 000021FC  E1A0000A  MOV         R0,R10 ; dpl
 00002200  E1A00C00  MOV         R0,R0,LSL #24 ; dpl
 00002204  E1A00C20  MOV         R0,R0,LSR #24
 00002208  E0844000  ADD         R4,R4,R0
 0000220C  ---- Variable 'dport' assigned to Register 'R4' ----
 0000220C  E1A00004  MOV         R0,R4 ; dport
 00002210  E3500000  CMP         R0,#0x0000 ; dport
 00002214  0A0000AC  BEQ         L_43  ; Targ=0x24CC
 00002218  EBFFFCC5  BL          ENC28J60_getByte?A  ; Targ=0x1534
 0000221C  E1A07C00  MOV         R7,R0,LSL #24 ; ENC28J60_getByte?A
 00002220  E1A07C27  MOV         R7,R7,LSR #24
 00002224  E1A07407  MOV         R7,R7,LSL #8
 00002228  ---- Variable 'len' assigned to Register 'R7' ----
 00002228  EBFFFCC1  BL          ENC28J60_getByte?A  ; Targ=0x1534
 0000222C  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_getByte?A
 00002230  E1A00C20  MOV         R0,R0,LSR #24
 00002234  E1877000  ORR         R7,R7,R0 ; len
 00002238  E59F0294  LDR         R0,[PC,+660] ; PoolRef @0x24D4
 0000223C  EBFFFD4C  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002240  E28D1008  ADD         R1,R13,#0x0008
 00002244  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr
 00002248  EBFFFCB9  BL          ENC28J60_getByte?A  ; Targ=0x1534
 0000224C  E3A01009  MOV         R1,#0x9
 00002250  E081100D  ADD         R1,R1,R13
 00002254  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr+1
 00002258  EBFFFCB5  BL          ENC28J60_getByte?A  ; Targ=0x1534
 0000225C  E3A0100A  MOV         R1,#0xA
 00002260  E081100D  ADD         R1,R1,R13
 00002264  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr+2
 00002268  EBFFFCB1  BL          ENC28J60_getByte?A  ; Targ=0x1534
 0000226C  E3A0100B  MOV         R1,#0xB
 00002270  E081100D  ADD         R1,R1,R13
 00002274  E5C10000  STRB        R0,[R1,#0x0] ; remoteIpAddr+3
 00002278  E1A01005  MOV         R1,R5 ; payloadAddr
 0000227C  E2811008  ADD         R1,R1,#0x0008 ; payloadAddr
 00002280  E3A00002  MOV         R0,#0x2
 00002284  EBFFFD74  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00002288  E1A00006  MOV         R0,R6 ; ipHeaderLen
 0000228C  E1A02C00  MOV         R2,R0,LSL #24 ; ipHeaderLen
 00002290  E1A02C22  MOV         R2,R2,LSR #24
 00002294  E1A01009  MOV         R1,R9 ; start
 00002298  E0811002  ADD         R1,R1,R2 ; start
 0000229C  E2811016  ADD         R1,R1,#0x0016
 000022A0  E3A00000  MOV         R0,#0x0
 000022A4  EBFFFD6C  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000022A8  E1A03007  MOV         R3,R7 ; len
 000022AC  E2433008  SUB         R3,R3,#0x0008 ; len
 000022B0  E28D0008  ADD         R0,R13,#0x0008
 000022B4  E1A01008  MOV         R1,R8 ; remotePort
 000022B8  E1A02004  MOV         R2,R4 ; dport
 000022BC  EBFFF8F6  BL          ENC28J60_userUDP?A  ; Targ=0x69C
 000022C0  E1A07000  MOV         R7,R0 ; len
 000022C4  E3500000  CMP         R0,#0x0000 ; ENC28J60_userUDP?A
 000022C8  9A00007F  BLS         L_43  ; Targ=0x24CC
 000022CC  E2877008  ADD         R7,R7,#0x0008 ; len
 000022D0  E1A01007  MOV         R1,R7 ; len
 000022D4  E1A01421  MOV         R1,R1,LSR #8 ; len
 000022D8  E1A00005  MOV         R0,R5 ; payloadAddr
 000022DC  E2800004  ADD         R0,R0,#0x0004 ; payloadAddr
 000022E0  E1A02007  MOV         R2,R7 ; len
 000022E4  E3A03001  MOV         R3,#0x1
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 42


 000022E8  EBFFFCFB  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000022EC  E1A00006  MOV         R0,R6 ; ipHeaderLen
 000022F0  E1A04C00  MOV         R4,R0,LSL #24 ; ipHeaderLen
 000022F4  E1A04C24  MOV         R4,R4,LSR #24
 000022F8  E1A00007  MOV         R0,R7 ; len
 000022FC  E0844000  ADD         R4,R4,R0 ; len
 00002300  ---- Variable 'totlen' assigned to Register 'R4' ----
 00002300  EB000104  BL          ENC28J60_MACswap?A  ; Targ=0x2718
 00002304  EB000112  BL          ENC28J60_IPswap?A  ; Targ=0x2754
 00002308  E1A0000B  MOV         R0,R11 ; dph
 0000230C  E1A01C00  MOV         R1,R0,LSL #24 ; dph
 00002310  E1A01C21  MOV         R1,R1,LSR #24
 00002314  E1A0000A  MOV         R0,R10 ; dpl
 00002318  E1A02C00  MOV         R2,R0,LSL #24 ; dpl
 0000231C  E1A02C22  MOV         R2,R2,LSR #24
 00002320  E1A00005  MOV         R0,R5 ; payloadAddr
 00002324  E3A03001  MOV         R3,#0x1
 00002328  EBFFFCEB  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 0000232C  E28D0000  ADD         R0,R13,#0x0000
 00002330  E5D00000  LDRB        R0,[R0,#0x0] ; sph
 00002334  EBFFFC65  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00002338  E28D0004  ADD         R0,R13,#0x0004
 0000233C  E5D00000  LDRB        R0,[R0,#0x0] ; spl
 00002340  EBFFFC62  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00002344  E1A01004  MOV         R1,R4 ; totlen
 00002348  E1A01421  MOV         R1,R1,LSR #8 ; totlen
 0000234C  E1A02004  MOV         R2,R4 ; totlen
 00002350  E59F0180  LDR         R0,[PC,+384] ; PoolRef @0x24D8
 00002354  E3A03001  MOV         R3,#0x1
 00002358  EBFFFCDF  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 0000235C  E59F0178  LDR         R0,[PC,+376] ; PoolRef @0x24DC
 00002360  E3A02000  MOV         R2,#0x0
 00002364  E1A01002  MOV         R1,R2
 00002368  E3A03001  MOV         R3,#0x1
 0000236C  EBFFFCDA  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002370  E1A00006  MOV         R0,R6 ; ipHeaderLen
 00002374  E1A01C00  MOV         R1,R0,LSL #24 ; ipHeaderLen
 00002378  E1A01C21  MOV         R1,R1,LSR #24
 0000237C  E59F015C  LDR         R0,[PC,+348] ; PoolRef @0x24E0
 00002380  EB000252  BL          ENC28J60_checksum?A  ; Targ=0x2CD0
 00002384  E3A00017  MOV         R0,#0x17
 00002388  EBFFFD16  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 0000238C  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readReg?A
 00002390  E1A01C21  MOV         R1,R1,LSR #24
 00002394  E92D0002  STMDB       R13!,{R1}
 00002398  E3A00016  MOV         R0,#0x16
 0000239C  EBFFFD11  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 000023A0  E1A02C00  MOV         R2,R0,LSL #24 ; ENC28J60_readReg?A
 000023A4  E1A02C22  MOV         R2,R2,LSR #24
 000023A8  E59F012C  LDR         R0,[PC,+300] ; PoolRef @0x24DC
 000023AC  E3A03001  MOV         R3,#0x1
 000023B0  E8BD0002  LDMIA       R13!,{R1}
 000023B4  EBFFFCC8  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000023B8  E1A00005  MOV         R0,R5 ; payloadAddr
 000023BC  E2800006  ADD         R0,R0,#0x0006 ; payloadAddr
 000023C0  E3A02000  MOV         R2,#0x0
 000023C4  E1A01002  MOV         R1,R2
 000023C8  E3A03001  MOV         R3,#0x1
 000023CC  EBFFFCC2  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000023D0  E1A06004  MOV         R6,R4 ; totlen
 000023D4  E2066001  AND         R6,R6,#0x0001 ; totlen
 000023D8  E1A06C06  MOV         R6,R6,LSL #24
 000023DC  E1A06C26  MOV         R6,R6,LSR #24
 000023E0  ---- Variable 'align' assigned to Register 'R6' ----
 000023E0  E1A00004  MOV         R0,R4 ; totlen
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 43


 000023E4  E59F10F4  LDR         R1,[PC,+244] ; PoolRef @0x24E0
 000023E8  E0800001  ADD         R0,R0,R1 ; totlen
 000023EC  E3A03000  MOV         R3,#0x0
 000023F0  E1A01003  MOV         R1,R3
 000023F4  E1A02003  MOV         R2,R3
 000023F8  EBFFFCB7  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000023FC  E1A02004  MOV         R2,R4 ; totlen
 00002400  E59F00D8  LDR         R0,[PC,+216] ; PoolRef @0x24E0
 00002404  E0822000  ADD         R2,R2,R0 ; totlen
 00002408  E1A00006  MOV         R0,R6 ; align
 0000240C  E1A00C00  MOV         R0,R0,LSL #24 ; align
 00002410  E1A00C20  MOV         R0,R0,LSR #24
 00002414  E0822000  ADD         R2,R2,R0
 00002418  E59F00B4  LDR         R0,[PC,+180] ; PoolRef @0x24D4
 0000241C  E59F10C0  LDR         R1,[PC,+192] ; PoolRef @0x24E4
 00002420  E3A03000  MOV         R3,#0x0
 00002424  EB00006E  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 00002428  E1A00004  MOV         R0,R4 ; totlen
 0000242C  E59F10B4  LDR         R1,[PC,+180] ; PoolRef @0x24E8
 00002430  E0800001  ADD         R0,R0,R1 ; totlen
 00002434  E1A01006  MOV         R1,R6 ; align
 00002438  E1A01C01  MOV         R1,R1,LSL #24 ; align
 0000243C  E1A01C21  MOV         R1,R1,LSR #24
 00002440  E0800001  ADD         R0,R0,R1
 00002444  E3A01000  MOV         R1,#0x0
 00002448  E3A02011  MOV         R2,#0x11
 0000244C  E3A03001  MOV         R3,#0x1
 00002450  EBFFFCA1  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002454  E1A00007  MOV         R0,R7 ; len
 00002458  E1A00420  MOV         R0,R0,LSR #8 ; len
 0000245C  EBFFFC1B  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00002460  E1A00007  MOV         R0,R7 ; len
 00002464  EBFFFC19  BL          ENC28J60_putByte?A  ; Targ=0x14D0
 00002468  E1A01007  MOV         R1,R7 ; len
 0000246C  E281100C  ADD         R1,R1,#0x000C ; len
 00002470  E1A00006  MOV         R0,R6 ; align
 00002474  E1A00C00  MOV         R0,R0,LSL #24 ; align
 00002478  E1A00C20  MOV         R0,R0,LSR #24
 0000247C  E0811000  ADD         R1,R1,R0
 00002480  E1A00005  MOV         R0,R5 ; payloadAddr
 00002484  EB000211  BL          ENC28J60_checksum?A  ; Targ=0x2CD0
 00002488  E3A00017  MOV         R0,#0x17
 0000248C  EBFFFCD5  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002490  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readReg?A
 00002494  E1A01C21  MOV         R1,R1,LSR #24
 00002498  E92D0002  STMDB       R13!,{R1}
 0000249C  E3A00016  MOV         R0,#0x16
 000024A0  EBFFFCD0  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 000024A4  E1A02C00  MOV         R2,R0,LSL #24 ; ENC28J60_readReg?A
 000024A8  E1A02C22  MOV         R2,R2,LSR #24
 000024AC  E1A00005  MOV         R0,R5 ; payloadAddr
 000024B0  E2800006  ADD         R0,R0,#0x0006 ; payloadAddr
 000024B4  E3A03001  MOV         R3,#0x1
 000024B8  E8BD0002  LDMIA       R13!,{R1}
 000024BC  EBFFFC86  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000024C0  E1A00004  MOV         R0,R4 ; totlen
 000024C4  E280000E  ADD         R0,R0,#0x000E ; totlen
 000024C8  EB0000AF  BL          ENC28J60_TXpacket?A  ; Targ=0x278C
 000024CC            ; SCOPE-END
 000024CC          L_43:
 000024CC  E28DD00C  ADD         R13,R13,#0x000C
 000024D0  E8BD80F0  LDMIA       R13!,{R4-R7,PC}
 000024D4            ; END 'ENC28J60_doUDP?A'

 000024D4  000019C9  DD          0x19C9		; POOL-Entry U=2
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 44


 000024D8  000019BF  DD          0x19BF		; POOL-Entry U=1
 000024DC  000019C7  DD          0x19C7		; POOL-Entry U=2
 000024E0  000019BD  DD          0x19BD		; POOL-Entry U=3
 000024E4  000019D1  DD          0x19D1		; POOL-Entry U=1
 000024E8  000019C5  DD          0x19C5		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_delay?A?enc28j60':
 FILE: '..\enc28j60.c'
 000024EC          ENC28J60_delay?A:  ; FUNCTION START
 000024EC  E92D4000  STMDB       R13!,{LR}
 000024F0  E59F0004  LDR         R0,[PC,+4] ; PoolRef @0x24FC
 000024F4  EB0002EE  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 000024F8  E8BD8000  LDMIA       R13!,{PC}
 000024FC            ; END 'ENC28J60_delay?A'

 000024FC  0000176F  DD          0x176F		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_readPHY?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002500          ENC28J60_readPHY?A:  ; FUNCTION START
 00002500  E92D4070  STMDB       R13!,{R4-R6,LR}
 00002504  E1A05002  MOV         R5,R2 ; l
 00002508  ---- Variable 'l' assigned to Register 'R5' ----
 00002508  E1A04001  MOV         R4,R1 ; h
 0000250C  ---- Variable 'h' assigned to Register 'R4' ----
 0000250C  E1A06000  MOV         R6,R0 ; reg
 00002510  ---- Variable 'reg' assigned to Register 'R6' ----
 00002510  E3A0001F  MOV         R0,#0x1F
 00002514  E3A01001  MOV         R1,#0x1
 00002518  EBFFFD28  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 0000251C  E3A0001F  MOV         R0,#0x1F
 00002520  E3A01002  MOV         R1,#0x2
 00002524  EBFFFD08  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002528  E1A00006  MOV         R0,R6 ; reg
 0000252C  E1A01C00  MOV         R1,R0,LSL #24 ; reg
 00002530  E1A01C21  MOV         R1,R1,LSR #24
 00002534  E3A00014  MOV         R0,#0x14
 00002538  EBFFFCE6  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 0000253C  E3A00012  MOV         R0,#0x12
 00002540  E3A01001  MOV         R1,#0x1
 00002544  EBFFFD00  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002548  EBFFFFE7  BL          ENC28J60_delay?A  ; Targ=0x24EC
 0000254C  E3A00012  MOV         R0,#0x12
 00002550  E3A01001  MOV         R1,#0x1
 00002554  EBFFFD19  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 00002558  E3A00016  MOV         R0,#0x16
 0000255C  EBFFFCA1  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002560  E1A01005  MOV         R1,R5 ; l
 00002564  E5C10000  STRB        R0,[R1,#0x0] ; l
 00002568  E3A00017  MOV         R0,#0x17
 0000256C  EBFFFC9D  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002570  E1A01004  MOV         R1,R4 ; h
 00002574  E5C10000  STRB        R0,[R1,#0x0] ; h
 00002578  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 0000257C            ; END 'ENC28J60_readPHY?A'


*** Disassembly of Segment '?PR?ENC28J60_writePHY?A?enc28j60':
 FILE: '..\enc28j60.c'
 0000257C          ENC28J60_writePHY?A:  ; FUNCTION START
 0000257C  E92D4070  STMDB       R13!,{R4-R6,LR}
 00002580  E1A05002  MOV         R5,R2 ; l
 00002584  ---- Variable 'l' assigned to Register 'R5' ----
 00002584  E1A04001  MOV         R4,R1 ; h
 00002588  ---- Variable 'h' assigned to Register 'R4' ----
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 45


 00002588  E1A06000  MOV         R6,R0 ; reg
 0000258C  ---- Variable 'reg' assigned to Register 'R6' ----
 0000258C  E3A0001F  MOV         R0,#0x1F
 00002590  E3A01001  MOV         R1,#0x1
 00002594  EBFFFD09  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 00002598  E3A0001F  MOV         R0,#0x1F
 0000259C  E3A01002  MOV         R1,#0x2
 000025A0  EBFFFCE9  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 000025A4  E1A00006  MOV         R0,R6 ; reg
 000025A8  E1A01C00  MOV         R1,R0,LSL #24 ; reg
 000025AC  E1A01C21  MOV         R1,R1,LSR #24
 000025B0  E3A00014  MOV         R0,#0x14
 000025B4  EBFFFCC7  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 000025B8  E1A00005  MOV         R0,R5 ; l
 000025BC  E1A01C00  MOV         R1,R0,LSL #24 ; l
 000025C0  E1A01C21  MOV         R1,R1,LSR #24
 000025C4  E3A00016  MOV         R0,#0x16
 000025C8  EBFFFCC2  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 000025CC  E1A00004  MOV         R0,R4 ; h
 000025D0  E1A01C00  MOV         R1,R0,LSL #24 ; h
 000025D4  E1A01C21  MOV         R1,R1,LSR #24
 000025D8  E3A00017  MOV         R0,#0x17
 000025DC  EBFFFCBD  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 000025E0  E8BD8070  LDMIA       R13!,{R4-R6,PC}
 000025E4            ; END 'ENC28J60_writePHY?A'


*** Disassembly of Segment '?PR?ENC28J60_RAMcopy?A?enc28j60':
 FILE: '..\enc28j60.c'
 000025E4          ENC28J60_RAMcopy?A:  ; FUNCTION START
 000025E4  E92D40F0  STMDB       R13!,{R4-R7,LR}
 000025E8  ---- Variable 'w' assigned to Register 'R3' ----
 000025E8  E1A08002  MOV         R8,R2 ; dest
 000025EC  ---- Variable 'dest' assigned to Register 'R8' ----
 000025EC  E1A07001  MOV         R7,R1 ; stop
 000025F0  ---- Variable 'stop' assigned to Register 'R7' ----
 000025F0  E1A06000  MOV         R6,R0 ; start
 000025F4  ---- Variable 'start' assigned to Register 'R6' ----
 000025F4  ---- Variable 'remain' assigned to Register 'R4' ----
 000025F4            ; SCOPE-START
 000025F4  E3A05000  MOV         R5,#0x0
 000025F8  ---- Variable 'overflow' assigned to Register 'R5' ----
 000025F8  E2477001  SUB         R7,R7,#0x0001 ; stop
 000025FC  E1A00003  MOV         R0,R3 ; w
 00002600  E3500000  CMP         R0,#0x0000 ; w
 00002604  0A000007  BEQ         PART2  ; Targ=0x2628
 00002608  E1A01007  MOV         R1,R7 ; stop
 0000260C  E59F0100  LDR         R0,[PC,+256] ; PoolRef @0x2714
 00002610  E1510000  CMP         R1,R0 ; stop
 00002614  9A000003  BLS         PART2  ; Targ=0x2628
 00002618  E2855001  ADD         R5,R5,#0x0001 ; overflow
 0000261C  E20550FF  AND         R5,R5,#0x00FF
 00002620  E1A04007  MOV         R4,R7 ; stop
 00002624  E0444000  SUB         R4,R4,R0 ; stop
 00002628          PART2:
 00002628  E1A00005  MOV         R0,R5 ; overflow
 0000262C  E3500000  CMP         R0,#0x0000 ; overflow
 00002630  0A000001  BEQ         L_52  ; Targ=0x263C
 00002634  E59F10D8  LDR         R1,[PC,+216] ; PoolRef @0x2714
 00002638  EA000000  B           L_53  ; Targ=0x2640
 0000263C          L_52:
 0000263C  E1A01007  MOV         R1,R7 ; stop
 00002640          L_53:
 00002640  E1A00006  MOV         R0,R6 ; start
 00002644  E1500001  CMP         R0,R1 ; start
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 46


 00002648  1A000008  BNE         L_51  ; Targ=0x2670
 0000264C  E1A00006  MOV         R0,R6 ; start
 00002650  EBFFFC47  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002654  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readMem?A
 00002658  E1A01C21  MOV         R1,R1,LSR #24
 0000265C  E1A00008  MOV         R0,R8 ; dest
 00002660  E3A03000  MOV         R3,#0x0
 00002664  E1A02003  MOV         R2,R3
 00002668  EBFFFC1B  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 0000266C  EA000019  B           L_54  ; Targ=0x26D8
 00002670          L_51:
 00002670  E1A01006  MOV         R1,R6 ; start
 00002674  E3A00010  MOV         R0,#0x10
 00002678  EBFFFC77  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 0000267C  E1A00005  MOV         R0,R5 ; overflow
 00002680  E3500000  CMP         R0,#0x0000 ; overflow
 00002684  0A000001  BEQ         L_55  ; Targ=0x2690
 00002688  E59F1084  LDR         R1,[PC,+132] ; PoolRef @0x2714
 0000268C  EA000000  B           L_56  ; Targ=0x2694
 00002690          L_55:
 00002690  E1A01007  MOV         R1,R7 ; stop
 00002694          L_56:
 00002694  E3A00012  MOV         R0,#0x12
 00002698  EBFFFC6F  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 0000269C  E1A01008  MOV         R1,R8 ; dest
 000026A0  E3A00014  MOV         R0,#0x14
 000026A4  EBFFFC6C  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000026A8  E3A0001F  MOV         R0,#0x1F
 000026AC  E3A01010  MOV         R1,#0x10
 000026B0  EBFFFCC2  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 000026B4  E3A0001F  MOV         R0,#0x1F
 000026B8  E3A01020  MOV         R1,#0x20
 000026BC  EBFFFCA2  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 000026C0          L_57:
 000026C0  E3A0001F  MOV         R0,#0x1F
 000026C4  EBFFFC47  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 000026C8  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readReg?A
 000026CC  E1A00C20  MOV         R0,R0,LSR #24
 000026D0  E3100020  TST         R0,#0x0020
 000026D4  1AFFFFF9  BNE         L_57  ; Targ=0x26C0
 000026D8          L_54:
 000026D8  E1A00005  MOV         R0,R5 ; overflow
 000026DC  E3500000  CMP         R0,#0x0000 ; overflow
 000026E0  0A00000A  BEQ         L_61  ; Targ=0x2710
 000026E4  E1A02006  MOV         R2,R6 ; start
 000026E8  E1A00007  MOV         R0,R7 ; stop
 000026EC  E0400002  SUB         R0,R0,R2 ; stop
 000026F0  E1A01004  MOV         R1,R4 ; remain
 000026F4  E0400001  SUB         R0,R0,R1 ; remain
 000026F8  E2800001  ADD         R0,R0,#0x0001
 000026FC  E0888000  ADD         R8,R8,R0 ; dest
 00002700  E1A07004  MOV         R7,R4 ; remain
 00002704  E3A06000  MOV         R6,#0x0
 00002708  E3A05000  MOV         R5,#0x0
 0000270C  EAFFFFC5  B           PART2  ; Targ=0x2628
 00002710          L_61:
 00002710            ; SCOPE-END
 00002710  E8BD80F0  LDMIA       R13!,{R4-R7,PC}
 00002714            ; END 'ENC28J60_RAMcopy?A'

 00002714  000019AD  DD          0x19AD		; POOL-Entry U=3

*** Disassembly of Segment '?PR?ENC28J60_MACswap?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002718          ENC28J60_MACswap?A:  ; FUNCTION START
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 47


 00002718  E92D4000  STMDB       R13!,{LR}
 0000271C  E59F0020  LDR         R0,[PC,+32] ; PoolRef @0x2744
 00002720  E59F1020  LDR         R1,[PC,+32] ; PoolRef @0x2748
 00002724  E59F2020  LDR         R2,[PC,+32] ; PoolRef @0x274C
 00002728  E3A03000  MOV         R3,#0x0
 0000272C  EBFFFFAC  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 00002730  E59F1018  LDR         R1,[PC,+24] ; PoolRef @0x2750 ; ENC28J60_macAddr
 00002734  E59F0008  LDR         R0,[PC,+8] ; PoolRef @0x2744
 00002738  E3A02006  MOV         R2,#0x6
 0000273C  EBFFFB96  BL          ENC28J60_memcpy?A  ; Targ=0x159C
 00002740  E8BD8000  LDMIA       R13!,{PC}
 00002744            ; END 'ENC28J60_MACswap?A'

 00002744  000019B5  DD          0x19B5		; POOL-Entry U=2
 00002748  000019BB  DD          0x19BB		; POOL-Entry U=1
 0000274C  000019AF  DD          0x19AF		; POOL-Entry U=1
 00002750  4000050C  DD          ENC28J60_macAddr		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_IPswap?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002754          ENC28J60_IPswap?A:  ; FUNCTION START
 00002754  E92D4000  STMDB       R13!,{LR}
 00002758  E59F0020  LDR         R0,[PC,+32] ; PoolRef @0x2780
 0000275C  E59F2020  LDR         R2,[PC,+32] ; PoolRef @0x2784
 00002760  E1A01002  MOV         R1,R2
 00002764  E3A03000  MOV         R3,#0x0
 00002768  EBFFFF9D  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 0000276C  E59F1014  LDR         R1,[PC,+20] ; PoolRef @0x2788 ; ENC28J60_ipAddr
 00002770  E59F0008  LDR         R0,[PC,+8] ; PoolRef @0x2780
 00002774  E3A02004  MOV         R2,#0x4
 00002778  EBFFFB87  BL          ENC28J60_memcpy?A  ; Targ=0x159C
 0000277C  E8BD8000  LDMIA       R13!,{PC}
 00002780            ; END 'ENC28J60_IPswap?A'

 00002780  000019C9  DD          0x19C9		; POOL-Entry U=2
 00002784  000019CD  DD          0x19CD		; POOL-Entry U=1
 00002788  40000512  DD          ENC28J60_ipAddr		; POOL-Entry U=1

*** Disassembly of Segment '?PR?ENC28J60_TXpacket?A?enc28j60':
 FILE: '..\enc28j60.c'
 0000278C          ENC28J60_TXpacket?A:  ; FUNCTION START
 0000278C  E92D4010  STMDB       R13!,{R4,LR}
 00002790  E1A04000  MOV         R4,R0 ; l
 00002794  ---- Variable 'l' assigned to Register 'R4' ----
 00002794  E59F0060  LDR         R0,[PC,+96] ; PoolRef @0x27FC
 00002798  E3A03000  MOV         R3,#0x0
 0000279C  E1A01003  MOV         R1,R3
 000027A0  E1A02003  MOV         R2,R3
 000027A4  EBFFFBCC  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000027A8  E59F004C  LDR         R0,[PC,+76] ; PoolRef @0x27FC
 000027AC  E0844000  ADD         R4,R4,R0 ; l
 000027B0  E1A01004  MOV         R1,R4 ; l
 000027B4  E3A00006  MOV         R0,#0x6
 000027B8  EBFFFC27  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 000027BC  E3A0001F  MOV         R0,#0x1F
 000027C0  E3A01080  MOV         R1,#0x80
 000027C4  EBFFFC60  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 000027C8  E3A0001F  MOV         R0,#0x1F
 000027CC  E3A01080  MOV         R1,#0x80
 000027D0  EBFFFC7A  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 000027D4  E3A0001F  MOV         R0,#0x1F
 000027D8  E3A01008  MOV         R1,#0x8
 000027DC  EBFFFC5A  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 000027E0          L_62:
 000027E0  E3A0001F  MOV         R0,#0x1F
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 48


 000027E4  EBFFFBFF  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 000027E8  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readReg?A
 000027EC  E1A00C20  MOV         R0,R0,LSR #24
 000027F0  E3100008  TST         R0,#0x0008
 000027F4  1AFFFFF9  BNE         L_62  ; Targ=0x27E0
 000027F8  E8BD8010  LDMIA       R13!,{R4,PC}
 000027FC            ; END 'ENC28J60_TXpacket?A'

 000027FC  000019AE  DD          0x19AE		; POOL-Entry U=2

*** Disassembly of Segment '?PR?ENC28J60_readPacket?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002800          ENC28J60_readPacket?A:  ; FUNCTION START
 00002800  E92D40F0  STMDB       R13!,{R4-R7,LR}
 00002804  E24DD004  SUB         R13,R13,#0x0004
 00002808            ; SCOPE-START
 00002808  E59F0474  LDR         R0,[PC,+1140] ; PoolRef @0x2C84 ; ENC28J60_CSmask1
 0000280C  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 00002810  E59F0470  LDR         R0,[PC,+1136] ; PoolRef @0x2C88 ; pENC28J60_csCLR
 00002814  E5900000  LDR         R0,[R0,#0x0] ; pENC28J60_csCLR
 00002818  E5901000  LDR         R1,[R0,#0x0]
 0000281C  E1811002  ORR         R1,R1,R2
 00002820  E5801000  STR         R1,[R0,#0x0]
 00002824  E3A00001  MOV         R0,#0x1
 00002828  EB000221  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 0000282C  E3A0003A  MOV         R0,#0x3A
 00002830  EB000209  BL          SPI_char?A  ; Targ=0x305C
 00002834  E3A00000  MOV         R0,#0x0
 00002838  EB000207  BL          SPI_char?A  ; Targ=0x305C
 0000283C  E1A04C00  MOV         R4,R0,LSL #24 ; SPI_char?A
 00002840  E1A04C24  MOV         R4,R4,LSR #24
 00002844  ---- Variable 'nextPtr' assigned to Register 'R4' ----
 00002844  E3A00000  MOV         R0,#0x0
 00002848  EB000203  BL          SPI_char?A  ; Targ=0x305C
 0000284C  E1A00C00  MOV         R0,R0,LSL #24 ; SPI_char?A
 00002850  E1A00C20  MOV         R0,R0,LSR #24
 00002854  E1A00400  MOV         R0,R0,LSL #8
 00002858  E1844000  ORR         R4,R4,R0 ; nextPtr
 0000285C  E3A00000  MOV         R0,#0x0
 00002860  EB0001FD  BL          SPI_char?A  ; Targ=0x305C
 00002864  E1A05000  MOV         R5,R0 ; v1
 00002868  ---- Variable 'v1' assigned to Register 'R5' ----
 00002868  E3A00000  MOV         R0,#0x0
 0000286C  EB0001FA  BL          SPI_char?A  ; Targ=0x305C
 00002870  E1A06000  MOV         R6,R0 ; v2
 00002874  ---- Variable 'v2' assigned to Register 'R6' ----
 00002874  E3A00000  MOV         R0,#0x0
 00002878  EB0001F7  BL          SPI_char?A  ; Targ=0x305C
 0000287C  E3A00000  MOV         R0,#0x0
 00002880  EB0001F5  BL          SPI_char?A  ; Targ=0x305C
 00002884  E3A00002  MOV         R0,#0x2
 00002888  EB000209  BL          delay_Nx10cyc?A  ; Targ=0x30B4
 0000288C  E59F03F0  LDR         R0,[PC,+1008] ; PoolRef @0x2C84 ; ENC28J60_CSmask1
 00002890  E5902000  LDR         R2,[R0,#0x0] ; ENC28J60_CSmask1
 00002894  E59F03F0  LDR         R0,[PC,+1008] ; PoolRef @0x2C8C ; pENC28J60_csSET
 00002898  E5900000  LDR         R0,[R0,#0x0] ; pENC28J60_csSET
 0000289C  E5901000  LDR         R1,[R0,#0x0]
 000028A0  E1811002  ORR         R1,R1,R2
 000028A4  E5801000  STR         R1,[R0,#0x0]
 000028A8  E3A0001F  MOV         R0,#0x1F
 000028AC  E3A01001  MOV         R1,#0x1
 000028B0  EBFFFC42  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
 000028B4  E3A0001F  MOV         R0,#0x1F
 000028B8  E3A01002  MOV         R1,#0x2
 000028BC  EBFFFC3F  BL          ENC28J60_clearBitReg?A  ; Targ=0x19C0
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 49


 000028C0  E1A00006  MOV         R0,R6 ; v2
 000028C4  E1A01C00  MOV         R1,R0,LSL #24 ; v2
 000028C8  E1A01C21  MOV         R1,R1,LSR #24
 000028CC  E1A01401  MOV         R1,R1,LSL #8
 000028D0  E1A00005  MOV         R0,R5 ; v1
 000028D4  E1A00C00  MOV         R0,R0,LSL #24 ; v1
 000028D8  E1A00C20  MOV         R0,R0,LSR #24
 000028DC  E1811000  ORR         R1,R1,R0
 000028E0  E59F03A8  LDR         R0,[PC,+936] ; PoolRef @0x2C90 ; ENC28J60_pktLen
 000028E4  E5801000  STR         R1,[R0,#0x0] ; ENC28J60_pktLen
 000028E8  E59F03A0  LDR         R0,[PC,+928] ; PoolRef @0x2C90 ; ENC28J60_pktLen
 000028EC  E5901000  LDR         R1,[R0,#0x0] ; ENC28J60_pktLen
 000028F0  E2411004  SUB         R1,R1,#0x0004
 000028F4  E59F0394  LDR         R0,[PC,+916] ; PoolRef @0x2C90 ; ENC28J60_pktLen
 000028F8  E5801000  STR         R1,[R0,#0x0] ; ENC28J60_pktLen
 000028FC  E3A00001  MOV         R0,#0x1
 00002900  EBFFFBB8  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002904  E1A07C00  MOV         R7,R0,LSL #24 ; ENC28J60_readReg?A
 00002908  E1A07C27  MOV         R7,R7,LSR #24
 0000290C  E1A07407  MOV         R7,R7,LSL #8
 00002910  E3A00000  MOV         R0,#0x0
 00002914  EBFFFBB3  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002918  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readReg?A
 0000291C  E1A00C20  MOV         R0,R0,LSR #24
 00002920  E0877000  ADD         R7,R7,R0
 00002924  ---- Variable 'start' assigned to Register 'R7' ----
 00002924  E59F0364  LDR         R0,[PC,+868] ; PoolRef @0x2C90 ; ENC28J60_pktLen
 00002928  E5900000  LDR         R0,[R0,#0x0] ; ENC28J60_pktLen
 0000292C  E1A01007  MOV         R1,R7 ; start
 00002930  E0811000  ADD         R1,R1,R0 ; start
 00002934  E1A00007  MOV         R0,R7 ; start
 00002938  E59F2354  LDR         R2,[PC,+852] ; PoolRef @0x2C94
 0000293C  E3A03001  MOV         R3,#0x1
 00002940  EBFFFF27  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 00002944  E59F034C  LDR         R0,[PC,+844] ; PoolRef @0x2C98
 00002948  EBFFFB89  BL          ENC28J60_readMem?A  ; Targ=0x1774
 0000294C  E1A06000  MOV         R6,R0 ; t1
 00002950  ---- Variable 't1' assigned to Register 'R6' ----
 00002950  EBFFFAF7  BL          ENC28J60_getByte?A  ; Targ=0x1534
 00002954  E1A05000  MOV         R5,R0 ; t2
 00002958  ---- Variable 't2' assigned to Register 'R5' ----
 00002958  E1A00006  MOV         R0,R6 ; t1
 0000295C  E1A00C00  MOV         R0,R0,LSL #24 ; t1
 00002960  E1A00C20  MOV         R0,R0,LSR #24
 00002964  E3500008  CMP         R0,#0x0008
 00002968  1A00002F  BNE         L_16  ; Targ=0x2A2C
 0000296C  E1A00005  MOV         R0,R5 ; t2
 00002970  E1A00C00  MOV         R0,R0,LSL #24 ; t2
 00002974  E1A00C20  MOV         R0,R0,LSR #24
 00002978  E3500006  CMP         R0,#0x0006
 0000297C  1A00002A  BNE         L_16  ; Targ=0x2A2C
 00002980  E59F1314  LDR         R1,[PC,+788] ; PoolRef @0x2C9C ; ??S_1
 00002984  E59F0314  LDR         R0,[PC,+788] ; PoolRef @0x2CA0
 00002988  E3A02008  MOV         R2,#0x8
 0000298C  EBFFFB26  BL          ENC28J60_memcmp?A  ; Targ=0x162C
 00002990  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_memcmp?A
 00002994  E1A00C20  MOV         R0,R0,LSR #24
 00002998  E3500000  CMP         R0,#0x0000
 0000299C  1A0000AD  BNE         L_19  ; Targ=0x2C58
 000029A0  E59F12FC  LDR         R1,[PC,+764] ; PoolRef @0x2CA4 ; ENC28J60_ipAddr
 000029A4  E59F02FC  LDR         R0,[PC,+764] ; PoolRef @0x2CA8
 000029A8  E3A02004  MOV         R2,#0x4
 000029AC  EBFFFB1E  BL          ENC28J60_memcmp?A  ; Targ=0x162C
 000029B0  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_memcmp?A
 000029B4  E1A00C20  MOV         R0,R0,LSR #24
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 50


 000029B8  E3500000  CMP         R0,#0x0000
 000029BC  1A0000A5  BNE         L_19  ; Targ=0x2C58
 000029C0  E59F02E4  LDR         R0,[PC,+740] ; PoolRef @0x2CAC
 000029C4  E3A01002  MOV         R1,#0x2
 000029C8  E3A03000  MOV         R3,#0x0
 000029CC  E1A02003  MOV         R2,R3
 000029D0  EBFFFB41  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 000029D4  EBFFFF4F  BL          ENC28J60_MACswap?A  ; Targ=0x2718
 000029D8  E59F02D0  LDR         R0,[PC,+720] ; PoolRef @0x2CB0
 000029DC  E59F12D0  LDR         R1,[PC,+720] ; PoolRef @0x2CB4
 000029E0  E59F22C0  LDR         R2,[PC,+704] ; PoolRef @0x2CA8
 000029E4  E3A03000  MOV         R3,#0x0
 000029E8  EBFFFEFD  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 000029EC  E59F12B0  LDR         R1,[PC,+688] ; PoolRef @0x2CA4 ; ENC28J60_ipAddr
 000029F0  E59F02B8  LDR         R0,[PC,+696] ; PoolRef @0x2CB0
 000029F4  E3A02004  MOV         R2,#0x4
 000029F8  EBFFFAE7  BL          ENC28J60_memcpy?A  ; Targ=0x159C
 000029FC  E59F02B4  LDR         R0,[PC,+692] ; PoolRef @0x2CB8
 00002A00  E59F12A8  LDR         R1,[PC,+680] ; PoolRef @0x2CB0
 00002A04  E59F22A8  LDR         R2,[PC,+680] ; PoolRef @0x2CB4
 00002A08  E3A03000  MOV         R3,#0x0
 00002A0C  EBFFFEF4  BL          ENC28J60_RAMcopy?A  ; Targ=0x25E4
 00002A10  E59F12A4  LDR         R1,[PC,+676] ; PoolRef @0x2CBC ; ENC28J60_macAddr
 00002A14  E59F029C  LDR         R0,[PC,+668] ; PoolRef @0x2CB8
 00002A18  E3A02006  MOV         R2,#0x6
 00002A1C  EBFFFADE  BL          ENC28J60_memcpy?A  ; Targ=0x159C
 00002A20  E3A0003C  MOV         R0,#0x3C
 00002A24  EBFFFF58  BL          ENC28J60_TXpacket?A  ; Targ=0x278C
 00002A28  EA00008A  B           L_19  ; Targ=0x2C58
 00002A2C          L_16:
 00002A2C  E1A00006  MOV         R0,R6 ; t1
 00002A30  E1A00C00  MOV         R0,R0,LSL #24 ; t1
 00002A34  E1A00C20  MOV         R0,R0,LSR #24
 00002A38  E3500008  CMP         R0,#0x0008
 00002A3C  1A000085  BNE         L_19  ; Targ=0x2C58
 00002A40  E1A00005  MOV         R0,R5 ; t2
 00002A44  E1A00C00  MOV         R0,R0,LSL #24 ; t2
 00002A48  E1A00C20  MOV         R0,R0,LSR #24
 00002A4C  E3500000  CMP         R0,#0x0000
 00002A50  1A000080  BNE         L_19  ; Targ=0x2C58
 00002A54  E59F1248  LDR         R1,[PC,+584] ; PoolRef @0x2CA4 ; ENC28J60_ipAddr
 00002A58  E59F0260  LDR         R0,[PC,+608] ; PoolRef @0x2CC0
 00002A5C  E3A02004  MOV         R2,#0x4
 00002A60  EBFFFAF1  BL          ENC28J60_memcmp?A  ; Targ=0x162C
 00002A64  E3500000  CMP         R0,#0x0000 ; ENC28J60_memcmp?A
 00002A68  1A00007A  BNE         L_19  ; Targ=0x2C58
 00002A6C  E59F022C  LDR         R0,[PC,+556] ; PoolRef @0x2CA0
 00002A70  EBFFFB3F  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002A74  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00002A78  E1A00C20  MOV         R0,R0,LSR #24
 00002A7C  E20000F0  AND         R0,R0,#0x00F0
 00002A80  E3500040  CMP         R0,#0x0040
 00002A84  1A000073  BNE         L_19  ; Targ=0x2C58
 00002A88  E59F0210  LDR         R0,[PC,+528] ; PoolRef @0x2CA0
 00002A8C  EBFFFB38  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002A90  E1A06C00  MOV         R6,R0,LSL #24 ; ENC28J60_readMem?A
 00002A94  E1A06C26  MOV         R6,R6,LSR #24
 00002A98  ---- Variable 'ipHeaderLen' assigned to Register 'R6' ----
 00002A98  E206600F  AND         R6,R6,#0x000F ; ipHeaderLen
 00002A9C  E1A06106  MOV         R6,R6,LSL #2 ; ipHeaderLen
 00002AA0  E59F021C  LDR         R0,[PC,+540] ; PoolRef @0x2CC4
 00002AA4  EBFFFB32  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002AA8  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00002AAC  E1A00C20  MOV         R0,R0,LSR #24
 00002AB0  E31000BF  TST         R0,#0x00BF
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 51


 00002AB4  1A000067  BNE         L_19  ; Targ=0x2C58
 00002AB8  E59F01EC  LDR         R0,[PC,+492] ; PoolRef @0x2CAC
 00002ABC  EBFFFB2C  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002AC0  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00002AC4  E1A00C20  MOV         R0,R0,LSR #24
 00002AC8  E3500000  CMP         R0,#0x0000
 00002ACC  1A000061  BNE         L_19  ; Targ=0x2C58
 00002AD0  E1A05006  MOV         R5,R6 ; ipHeaderLen
 00002AD4  E59F01C4  LDR         R0,[PC,+452] ; PoolRef @0x2CA0
 00002AD8  E0855000  ADD         R5,R5,R0 ; ipHeaderLen
 00002ADC  ---- Variable 'payloadAddr' assigned to Register 'R5' ----
 00002ADC  E59F01E4  LDR         R0,[PC,+484] ; PoolRef @0x2CC8
 00002AE0  EBFFFB23  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002AE4  E28D1000  ADD         R1,R13,#0x0000
 00002AE8  E5C10000  STRB        R0,[R1,#0x0] ; proto
 00002AEC  E5D10000  LDRB        R0,[R1,#0x0] ; proto
 00002AF0  E1A09000  MOV         R9,R0
 00002AF4  E3590001  CMP         R9,#0x0001
 00002AF8  1A000047  BNE         L_26  ; Targ=0x2C1C
 00002AFC  E1A00005  MOV         R0,R5 ; payloadAddr
 00002B00  EBFFFB1B  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002B04  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00002B08  E1A00C20  MOV         R0,R0,LSR #24
 00002B0C  E3500008  CMP         R0,#0x0008
 00002B10  1A000050  BNE         L_19  ; Targ=0x2C58
 00002B14  E1A00005  MOV         R0,R5 ; payloadAddr
 00002B18  E2800001  ADD         R0,R0,#0x0001 ; payloadAddr
 00002B1C  EBFFFB14  BL          ENC28J60_readMem?A  ; Targ=0x1774
 00002B20  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readMem?A
 00002B24  E1A00C20  MOV         R0,R0,LSR #24
 00002B28  E3500000  CMP         R0,#0x0000
 00002B2C  1A000049  BNE         L_19  ; Targ=0x2C58
 00002B30  E1A00005  MOV         R0,R5 ; payloadAddr
 00002B34  E3A03000  MOV         R3,#0x0
 00002B38  E1A01003  MOV         R1,R3
 00002B3C  E1A02003  MOV         R2,R3
 00002B40  EBFFFAE5  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002B44  EBFFFEF3  BL          ENC28J60_MACswap?A  ; Targ=0x2718
 00002B48  EBFFFF01  BL          ENC28J60_IPswap?A  ; Targ=0x2754
 00002B4C  E59F0178  LDR         R0,[PC,+376] ; PoolRef @0x2CCC
 00002B50  E3A02000  MOV         R2,#0x0
 00002B54  E1A01002  MOV         R1,R2
 00002B58  E3A03001  MOV         R3,#0x1
 00002B5C  EBFFFADE  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002B60  E1A01006  MOV         R1,R6 ; ipHeaderLen
 00002B64  E59F0134  LDR         R0,[PC,+308] ; PoolRef @0x2CA0
 00002B68  EB000058  BL          ENC28J60_checksum?A  ; Targ=0x2CD0
 00002B6C  E3A00017  MOV         R0,#0x17
 00002B70  EBFFFB1C  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002B74  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readReg?A
 00002B78  E1A01C21  MOV         R1,R1,LSR #24
 00002B7C  E92D0002  STMDB       R13!,{R1}
 00002B80  E3A00016  MOV         R0,#0x16
 00002B84  EBFFFB17  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002B88  E1A02C00  MOV         R2,R0,LSL #24 ; ENC28J60_readReg?A
 00002B8C  E1A02C22  MOV         R2,R2,LSR #24
 00002B90  E59F0134  LDR         R0,[PC,+308] ; PoolRef @0x2CCC
 00002B94  E3A03001  MOV         R3,#0x1
 00002B98  E8BD0002  LDMIA       R13!,{R1}
 00002B9C  EBFFFACE  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002BA0  E1A00005  MOV         R0,R5 ; payloadAddr
 00002BA4  E2800002  ADD         R0,R0,#0x0002 ; payloadAddr
 00002BA8  E3A02000  MOV         R2,#0x0
 00002BAC  E1A01002  MOV         R1,R2
 00002BB0  E3A03001  MOV         R3,#0x1
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 52


 00002BB4  EBFFFAC8  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002BB8  E1A00006  MOV         R0,R6 ; ipHeaderLen
 00002BBC  E59F10CC  LDR         R1,[PC,+204] ; PoolRef @0x2C90 ; ENC28J60_pktLen
 00002BC0  E5911000  LDR         R1,[R1,#0x0] ; ENC28J60_pktLen
 00002BC4  E0411000  SUB         R1,R1,R0 ; ipHeaderLen
 00002BC8  E241100E  SUB         R1,R1,#0x000E
 00002BCC  E1A00005  MOV         R0,R5 ; payloadAddr
 00002BD0  EB00003E  BL          ENC28J60_checksum?A  ; Targ=0x2CD0
 00002BD4  E3A00017  MOV         R0,#0x17
 00002BD8  EBFFFB02  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002BDC  E1A01C00  MOV         R1,R0,LSL #24 ; ENC28J60_readReg?A
 00002BE0  E1A01C21  MOV         R1,R1,LSR #24
 00002BE4  E92D0002  STMDB       R13!,{R1}
 00002BE8  E3A00016  MOV         R0,#0x16
 00002BEC  EBFFFAFD  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002BF0  E1A02C00  MOV         R2,R0,LSL #24 ; ENC28J60_readReg?A
 00002BF4  E1A02C22  MOV         R2,R2,LSR #24
 00002BF8  E1A00005  MOV         R0,R5 ; payloadAddr
 00002BFC  E2800002  ADD         R0,R0,#0x0002 ; payloadAddr
 00002C00  E3A03001  MOV         R3,#0x1
 00002C04  E8BD0002  LDMIA       R13!,{R1}
 00002C08  EBFFFAB3  BL          ENC28J60_writeMemory?A  ; Targ=0x16DC
 00002C0C  E59F007C  LDR         R0,[PC,+124] ; PoolRef @0x2C90 ; ENC28J60_pktLen
 00002C10  E5900000  LDR         R0,[R0,#0x0] ; ENC28J60_pktLen
 00002C14  EBFFFEDC  BL          ENC28J60_TXpacket?A  ; Targ=0x278C
 00002C18  EA00000E  B           L_19  ; Targ=0x2C58
 00002C1C          L_26:
 00002C1C  E3590011  CMP         R9,#0x0011
 00002C20  1A000004  BNE         L_29  ; Targ=0x2C38
 00002C24  E1A01006  MOV         R1,R6 ; ipHeaderLen
 00002C28  E1A00007  MOV         R0,R7 ; start
 00002C2C  E1A02005  MOV         R2,R5 ; payloadAddr
 00002C30  EBFFFD58  BL          ENC28J60_doUDP?A  ; Targ=0x2198
 00002C34  EA000007  B           L_19  ; Targ=0x2C58
 00002C38          L_29:
 00002C38  E28D0000  ADD         R0,R13,#0x0000
 00002C3C  E5D00000  LDRB        R0,[R0,#0x0] ; proto
 00002C40  E3500006  CMP         R0,#0x0006
 00002C44  1A000003  BNE         L_19  ; Targ=0x2C58
 00002C48  E1A00007  MOV         R0,R7 ; start
 00002C4C  E1A01006  MOV         R1,R6 ; ipHeaderLen
 00002C50  E1A02005  MOV         R2,R5 ; payloadAddr
 00002C54  EBFFFB76  BL          ENC28J60_doTCP?A  ; Targ=0x1A34
 00002C58          L_19:
 00002C58  E3A0001E  MOV         R0,#0x1E
 00002C5C  E3A01040  MOV         R1,#0x40
 00002C60  EBFFFB39  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002C64  E1A01004  MOV         R1,R4 ; nextPtr
 00002C68  E3A00000  MOV         R0,#0x0
 00002C6C  EBFFFAFA  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00002C70  E1A01004  MOV         R1,R4 ; nextPtr
 00002C74  E3A0000C  MOV         R0,#0xC
 00002C78  EBFFFAF7  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00002C7C            ; SCOPE-END
 00002C7C  E28DD004  ADD         R13,R13,#0x0004
 00002C80  E8BD80F0  LDMIA       R13!,{R4-R7,PC}
 00002C84            ; END 'ENC28J60_readPacket?A'

 00002C84  40000500  DD          ENC28J60_CSmask1		; POOL-Entry U=2
 00002C88  400004E8  DD          pENC28J60_csCLR		; POOL-Entry U=1
 00002C8C  400004E4  DD          pENC28J60_csSET		; POOL-Entry U=1
 00002C90  400004D8  DD          ENC28J60_pktLen		; POOL-Entry U=6
 00002C94  000019AF  DD          0x19AF		; POOL-Entry U=1
 00002C98  000019BB  DD          0x19BB		; POOL-Entry U=1
 00002C9C  00000644  DD          ??S_1		; POOL-Entry U=1
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 53


 00002CA0  000019BD  DD          0x19BD		; POOL-Entry U=5
 00002CA4  40000512  DD          ENC28J60_ipAddr		; POOL-Entry U=3
 00002CA8  000019D5  DD          0x19D5		; POOL-Entry U=2
 00002CAC  000019C4  DD          0x19C4		; POOL-Entry U=2
 00002CB0  000019CB  DD          0x19CB		; POOL-Entry U=3
 00002CB4  000019CF  DD          0x19CF		; POOL-Entry U=2
 00002CB8  000019C5  DD          0x19C5		; POOL-Entry U=2
 00002CBC  4000050C  DD          ENC28J60_macAddr		; POOL-Entry U=1
 00002CC0  000019CD  DD          0x19CD		; POOL-Entry U=1
 00002CC4  000019C3  DD          0x19C3		; POOL-Entry U=1
 00002CC8  000019C6  DD          0x19C6		; POOL-Entry U=1
 00002CCC  000019C7  DD          0x19C7		; POOL-Entry U=2

*** Disassembly of Segment '?PR?ENC28J60_checksum?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002CD0          ENC28J60_checksum?A:  ; FUNCTION START
 00002CD0  E92D4010  STMDB       R13!,{R4,LR}
 00002CD4  E1A02001  MOV         R2,R1 ; l
 00002CD8  ---- Variable 'l' assigned to Register 'R2' ----
 00002CD8  ---- Variable 'start' assigned to Register 'R0' ----
 00002CD8            ; SCOPE-START
 00002CD8  E1A01002  MOV         R1,R2 ; l
 00002CDC  E1A04000  MOV         R4,R0 ; start
 00002CE0  E0844001  ADD         R4,R4,R1 ; start
 00002CE4  E2444001  SUB         R4,R4,#0x0001
 00002CE8  ---- Variable 'stop' assigned to Register 'R4' ----
 00002CE8  E1A01000  MOV         R1,R0 ; start
 00002CEC  E3A00010  MOV         R0,#0x10
 00002CF0  EBFFFAD9  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00002CF4  E1A01004  MOV         R1,R4 ; stop
 00002CF8  E3A00012  MOV         R0,#0x12
 00002CFC  EBFFFAD6  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00002D00  E3A0001F  MOV         R0,#0x1F
 00002D04  E3A01030  MOV         R1,#0x30
 00002D08  EBFFFB0F  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002D0C          L_45:
 00002D0C  E3A0001F  MOV         R0,#0x1F
 00002D10  EBFFFAB4  BL          ENC28J60_readReg?A  ; Targ=0x17E8
 00002D14  E1A00C00  MOV         R0,R0,LSL #24 ; ENC28J60_readReg?A
 00002D18  E1A00C20  MOV         R0,R0,LSR #24
 00002D1C  E3100020  TST         R0,#0x0020
 00002D20  1AFFFFF9  BNE         L_45  ; Targ=0x2D0C
 00002D24            ; SCOPE-END
 00002D24  E8BD8010  LDMIA       R13!,{R4,PC}
 00002D28            ; END 'ENC28J60_checksum?A'


*** Disassembly of Segment '?PR?ENC28J60_Init2?A?enc28j60':
 FILE: '..\enc28j60.c'
 00002D28          ENC28J60_Init2?A:  ; FUNCTION START
 00002D28  E92D4030  STMDB       R13!,{R4-R5,LR}
 00002D2C  E1A04000  MOV         R4,R0 ; fullDuplex
 00002D30  ---- Variable 'fullDuplex' assigned to Register 'R4' ----
 00002D30  E24DD008  SUB         R13,R13,#0x0008
 00002D34            ; SCOPE-START
 00002D34  E1A00004  MOV         R0,R4 ; fullDuplex
 00002D38  E3500000  CMP         R0,#0x0000 ; fullDuplex
 00002D3C  0A000001  BEQ         L_5  ; Targ=0x2D48
 00002D40  E3A0100D  MOV         R1,#0xD
 00002D44  EA000000  B           L_6  ; Targ=0x2D4C
 00002D48          L_5:
 00002D48  E3A01001  MOV         R1,#0x1
 00002D4C          L_6:
 00002D4C  E3A00000  MOV         R0,#0x0
 00002D50  EBFFFAE0  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 54


 00002D54  E1A00004  MOV         R0,R4 ; fullDuplex
 00002D58  E3500000  CMP         R0,#0x0000 ; fullDuplex
 00002D5C  0A000001  BEQ         L_7  ; Targ=0x2D68
 00002D60  E3A01031  MOV         R1,#0x31
 00002D64  EA000000  B           L_8  ; Targ=0x2D6C
 00002D68          L_7:
 00002D68  E3A01030  MOV         R1,#0x30
 00002D6C          L_8:
 00002D6C  E3A00002  MOV         R0,#0x2
 00002D70  EBFFFAD8  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002D74  E3A0000A  MOV         R0,#0xA
 00002D78  E59F1148  LDR         R1,[PC,+328] ; PoolRef @0x2EC8
 00002D7C  EBFFFAB6  BL          ENC28J60_writeAddr?A  ; Targ=0x185C
 00002D80  E1A00004  MOV         R0,R4 ; fullDuplex
 00002D84  E3500000  CMP         R0,#0x0000 ; fullDuplex
 00002D88  0A000001  BEQ         L_9  ; Targ=0x2D94
 00002D8C  E3A01015  MOV         R1,#0x15
 00002D90  EA000000  B           L_10  ; Targ=0x2D98
 00002D94          L_9:
 00002D94  E3A01012  MOV         R1,#0x12
 00002D98          L_10:
 00002D98  E3A00004  MOV         R0,#0x4
 00002D9C  EBFFFACD  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002DA0  E3A00006  MOV         R0,#0x6
 00002DA4  E3A01012  MOV         R1,#0x12
 00002DA8  EBFFFACA  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002DAC  E1A00004  MOV         R0,R4 ; fullDuplex
 00002DB0  E1A00C00  MOV         R0,R0,LSL #24 ; fullDuplex
 00002DB4  E1A00C20  MOV         R0,R0,LSR #24
 00002DB8  E3500000  CMP         R0,#0x0000
 00002DBC  1A000002  BNE         L_11  ; Targ=0x2DCC
 00002DC0  E3A00007  MOV         R0,#0x7
 00002DC4  E3A0100C  MOV         R1,#0xC
 00002DC8  EBFFFAC2  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002DCC          L_11:
 00002DCC  E3A0001F  MOV         R0,#0x1F
 00002DD0  E3A01001  MOV         R1,#0x1
 00002DD4  EBFFFADC  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002DD8  E3A0001F  MOV         R0,#0x1F
 00002DDC  E3A01002  MOV         R1,#0x2
 00002DE0  EBFFFAD9  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002DE4  E59F50E0  LDR         R5,[PC,+224] ; PoolRef @0x2ECC ; ENC28J60_macAddr
 00002DE8  E5D50000  LDRB        R0,[R5,#0x0] ; ENC28J60_macAddr
 00002DEC  E1A01000  MOV         R1,R0
 00002DF0  E3A00001  MOV         R0,#0x1
 00002DF4  EBFFFAB7  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002DF8  E5D50001  LDRB        R0,[R5,#0x1] ; ENC28J60_macAddr
 00002DFC  E1A01000  MOV         R1,R0
 00002E00  E3A00000  MOV         R0,#0x0
 00002E04  EBFFFAB3  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002E08  E5D50002  LDRB        R0,[R5,#0x2] ; ENC28J60_macAddr
 00002E0C  E1A01000  MOV         R1,R0
 00002E10  E3A00003  MOV         R0,#0x3
 00002E14  EBFFFAAF  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002E18  E5D50003  LDRB        R0,[R5,#0x3] ; ENC28J60_macAddr
 00002E1C  E1A01000  MOV         R1,R0
 00002E20  E3A00002  MOV         R0,#0x2
 00002E24  EBFFFAAB  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002E28  E5D50004  LDRB        R0,[R5,#0x4] ; ENC28J60_macAddr
 00002E2C  E1A01000  MOV         R1,R0
 00002E30  E3A00005  MOV         R0,#0x5
 00002E34  EBFFFAA7  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002E38  E5D50005  LDRB        R0,[R5,#0x5] ; ENC28J60_macAddr
 00002E3C  E1A01000  MOV         R1,R0
 00002E40  E3A00004  MOV         R0,#0x4
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 55


 00002E44  EBFFFAA3  BL          ENC28J60_writeReg?A  ; Targ=0x18D8
 00002E48  E28D1000  ADD         R1,R13,#0x0000
 00002E4C  E28D2004  ADD         R2,R13,#0x0004
 00002E50  E3A00000  MOV         R0,#0x0
 00002E54  EBFFFDA9  BL          ENC28J60_readPHY?A  ; Targ=0x2500
 00002E58  E28D0000  ADD         R0,R13,#0x0000
 00002E5C  E5D00000  LDRB        R0,[R0,#0x0] ; h
 00002E60  E1A01000  MOV         R1,R0
 00002E64  E20110FE  AND         R1,R1,#0x00FE
 00002E68  E1A00004  MOV         R0,R4 ; fullDuplex
 00002E6C  E3500000  CMP         R0,#0x0000 ; fullDuplex
 00002E70  0A000001  BEQ         L_12  ; Targ=0x2E7C
 00002E74  E3A00001  MOV         R0,#0x1
 00002E78  EA000000  B           L_13  ; Targ=0x2E80
 00002E7C          L_12:
 00002E7C  E3A00000  MOV         R0,#0x0
 00002E80          L_13:
 00002E80  E1811000  ORR         R1,R1,R0
 00002E84  E28D0004  ADD         R0,R13,#0x0004
 00002E88  E5D00000  LDRB        R0,[R0,#0x0] ; l
 00002E8C  E1A02000  MOV         R2,R0
 00002E90  E3A00000  MOV         R0,#0x0
 00002E94  EBFFFDB8  BL          ENC28J60_writePHY?A  ; Targ=0x257C
 00002E98  E3A00010  MOV         R0,#0x10
 00002E9C  E3A01001  MOV         R1,#0x1
 00002EA0  E3A02000  MOV         R2,#0x0
 00002EA4  EBFFFDB4  BL          ENC28J60_writePHY?A  ; Targ=0x257C
 00002EA8  E3A0001E  MOV         R0,#0x1E
 00002EAC  E3A01080  MOV         R1,#0x80
 00002EB0  EBFFFAA5  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002EB4  E3A0001F  MOV         R0,#0x1F
 00002EB8  E3A01004  MOV         R1,#0x4
 00002EBC  EBFFFAA2  BL          ENC28J60_setBitReg?A  ; Targ=0x194C
 00002EC0            ; SCOPE-END
 00002EC0  E28DD008  ADD         R13,R13,#0x0008
 00002EC4  E8BD8030  LDMIA       R13!,{R4-R5,PC}
 00002EC8            ; END 'ENC28J60_Init2?A'

 00002EC8  000005EE  DD          0x5EE		; POOL-Entry U=1
 00002ECC  4000050C  DD          ENC28J60_macAddr		; POOL-Entry U=1

*** Disassembly of Segment '?PR?SPI_init?A?SPIhw':
 FILE: '..\SPIhw.c'
 00002ED0          SPI_init?A:  ; FUNCTION START
 00002ED0  E92D0030  STMDB       R13!,{R4-R5}
 00002ED4  ---- Variable 'bCPOL' assigned to Register 'R3' ----
 00002ED4  ---- Variable 'pclkdiv' assigned to Register 'R2' ----
 00002ED4  ---- Variable 'cs_pin' assigned to Register 'R1' ----
 00002ED4  E1A04000  MOV         R4,R0 ; spi_port
 00002ED8  ---- Variable 'spi_port' assigned to Register 'R4' ----
 00002ED8  E1A00001  MOV         R0,R1 ; cs_pin
 00002EDC  E59F5144  LDR         R5,[PC,+324] ; PoolRef @0x3028 ; posCS
 00002EE0  E5C50000  STRB        R0,[R5,#0x0] ; posCS
 00002EE4  E1A00004  MOV         R0,R4 ; spi_port
 00002EE8  E5050018  STR         R0,[R5,#0xFFFFFFE8] ; pSPIswPIN
 00002EEC  E59F4138  LDR         R4,[PC,+312] ; PoolRef @0x302C
 00002EF0  E5150018  LDR         R0,[R5,#0xFFFFFFE8] ; pSPIswPIN
 00002EF4  E1500004  CMP         R0,R4
 00002EF8  1A000006  BNE         L_1  ; Targ=0x2F18
 00002EFC  E59F412C  LDR         R4,[PC,+300] ; PoolRef @0x3030
 00002F00  E59F5120  LDR         R5,[PC,+288] ; PoolRef @0x3028 ; posCS
 00002F04  E5054014  STR         R4,[R5,#0xFFFFFFEC] ; pSPIswDIR
 00002F08  E59F4124  LDR         R4,[PC,+292] ; PoolRef @0x3034
 00002F0C  E5054010  STR         R4,[R5,#0xFFFFFFF0] ; pSPIswSET
 00002F10  E59F4120  LDR         R4,[PC,+288] ; PoolRef @0x3038
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 56


 00002F14  E505400C  STR         R4,[R5,#0xFFFFFFF4] ; pSPIswCLR
 00002F18          L_1:
 00002F18  E59F411C  LDR         R4,[PC,+284] ; PoolRef @0x303C
 00002F1C  E1500004  CMP         R0,R4
 00002F20  1A000006  BNE         L_2  ; Targ=0x2F40
 00002F24  E59F0114  LDR         R0,[PC,+276] ; PoolRef @0x3040
 00002F28  E59F40F8  LDR         R4,[PC,+248] ; PoolRef @0x3028 ; posCS
 00002F2C  E5040014  STR         R0,[R4,#0xFFFFFFEC] ; pSPIswDIR
 00002F30  E59F010C  LDR         R0,[PC,+268] ; PoolRef @0x3044
 00002F34  E5040010  STR         R0,[R4,#0xFFFFFFF0] ; pSPIswSET
 00002F38  E59F0108  LDR         R0,[PC,+264] ; PoolRef @0x3048
 00002F3C  E504000C  STR         R0,[R4,#0xFFFFFFF4] ; pSPIswCLR
 00002F40          L_2:
 00002F40  E1A00001  MOV         R0,R1 ; cs_pin
 00002F44  E1A00C00  MOV         R0,R0,LSL #24 ; cs_pin
 00002F48  E1A00C20  MOV         R0,R0,LSR #24
 00002F4C  E3A01001  MOV         R1,#0x1
 00002F50  E1A01011  MOV         R1,R1,LSL R0
 00002F54  E59F00CC  LDR         R0,[PC,+204] ; PoolRef @0x3028 ; posCS
 00002F58  E5001004  STR         R1,[R0,#0xFFFFFFFC] ; CSmask1
 00002F5C  E5104004  LDR         R4,[R0,#0xFFFFFFFC] ; CSmask1
 00002F60  E1E01004  MVN         R1,R4
 00002F64  E5001008  STR         R1,[R0,#0xFFFFFFF8] ; CSmask0
 00002F68  E5101010  LDR         R1,[R0,#0xFFFFFFF0] ; pSPIswSET
 00002F6C  E5915000  LDR         R5,[R1,#0x0]
 00002F70  E1855004  ORR         R5,R5,R4
 00002F74  E5815000  STR         R5,[R1,#0x0]
 00002F78  E5100014  LDR         R0,[R0,#0xFFFFFFEC] ; pSPIswDIR
 00002F7C  E5901000  LDR         R1,[R0,#0x0]
 00002F80  E1811004  ORR         R1,R1,R4
 00002F84  E5801000  STR         R1,[R0,#0x0]
 00002F88  E59F00BC  LDR         R0,[PC,+188] ; PoolRef @0x304C
 00002F8C  E5901000  LDR         R1,[R0,#0x0]
 00002F90  E3C11CFF  BIC         R1,R1,#0xFF00
 00002F94  E5801000  STR         R1,[R0,#0x0]
 00002F98  E59F00AC  LDR         R0,[PC,+172] ; PoolRef @0x304C
 00002F9C  E5901000  LDR         R1,[R0,#0x0]
 00002FA0  E3811C55  ORR         R1,R1,#0x5500
 00002FA4  E5801000  STR         R1,[R0,#0x0]
 00002FA8  E3A01000  MOV         R1,#0x0
 00002FAC  E59F009C  LDR         R0,[PC,+156] ; PoolRef @0x3050
 00002FB0  E5C01000  STRB        R1,[R0,#0x0]
 00002FB4  E1A01002  MOV         R1,R2 ; pclkdiv
 00002FB8  E59F0094  LDR         R0,[PC,+148] ; PoolRef @0x3054
 00002FBC  E5C01000  STRB        R1,[R0,#0x0]
 00002FC0  E3A01000  MOV         R1,#0x0
 00002FC4  E59F008C  LDR         R0,[PC,+140] ; PoolRef @0x3058
 00002FC8  E1C010B0  STRH        R1,[R0,#0x0]
 00002FCC  E28D0008  ADD         R0,R13,#0x0008
 00002FD0  E5D00000  LDRB        R0,[R0,#0x0] ; bCPHA
 00002FD4  E3500000  CMP         R0,#0x0000
 00002FD8  0A000003  BEQ         L_3  ; Targ=0x2FEC
 00002FDC  E59F0074  LDR         R0,[PC,+116] ; PoolRef @0x3058
 00002FE0  E1D010B0  LDRH        R1,[R0,#0x0]
 00002FE4  E3811008  ORR         R1,R1,#0x0008
 00002FE8  E1C010B0  STRH        R1,[R0,#0x0]
 00002FEC          L_3:
 00002FEC  E1A00003  MOV         R0,R3 ; bCPOL
 00002FF0  E1A00C00  MOV         R0,R0,LSL #24 ; bCPOL
 00002FF4  E1A00C20  MOV         R0,R0,LSR #24
 00002FF8  E3500000  CMP         R0,#0x0000
 00002FFC  0A000003  BEQ         L_4  ; Targ=0x3010
 00003000  E59F0050  LDR         R0,[PC,+80] ; PoolRef @0x3058
 00003004  E1D010B0  LDRH        R1,[R0,#0x0]
 00003008  E3811010  ORR         R1,R1,#0x0010
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 57


 0000300C  E1C010B0  STRH        R1,[R0,#0x0]
 00003010          L_4:
 00003010  E59F0040  LDR         R0,[PC,+64] ; PoolRef @0x3058
 00003014  E1D010B0  LDRH        R1,[R0,#0x0]
 00003018  E3811020  ORR         R1,R1,#0x0020
 0000301C  E1C010B0  STRH        R1,[R0,#0x0]
 00003020  E8BD0030  LDMIA       R13!,{R4-R5}
 00003024  E12FFF1E  BX          R14
 00003028            ; END 'SPI_init?A'

 00003028  40000530  DD          posCS		; POOL-Entry U=4
 0000302C  E0028000  DD          0xE0028000		; POOL-Entry U=1
 00003030  E0028008  DD          0xE0028008		; POOL-Entry U=1
 00003034  E0028004  DD          0xE0028004		; POOL-Entry U=1
 00003038  E002800C  DD          0xE002800C		; POOL-Entry U=1
 0000303C  E0028010  DD          0xE0028010		; POOL-Entry U=1
 00003040  E0028018  DD          0xE0028018		; POOL-Entry U=1
 00003044  E0028014  DD          0xE0028014		; POOL-Entry U=1
 00003048  E002801C  DD          0xE002801C		; POOL-Entry U=1
 0000304C  E002C000  DD          0xE002C000		; POOL-Entry U=2
 00003050  E002001C  DD          0xE002001C		; POOL-Entry U=1
 00003054  E002000C  DD          0xE002000C		; POOL-Entry U=1
 00003058  E0020000  DD          0xE0020000		; POOL-Entry U=4

*** Disassembly of Segment '?PR?SPI_char?A?SPIhw':
 FILE: '..\SPIhw.c'
 0000305C          SPI_char?A:  ; FUNCTION START
 0000305C  E1A01000  MOV         R1,R0 ; chTx
 00003060  ---- Variable 'chTx' assigned to Register 'R1' ----
 00003060            ; SCOPE-START
 00003060  E1A00001  MOV         R0,R1 ; chTx
 00003064  E1A01C00  MOV         R1,R0,LSL #24 ; chTx
 00003068  E1A01C21  MOV         R1,R1,LSR #24
 0000306C  E59F0038  LDR         R0,[PC,+56] ; PoolRef @0x30AC
 00003070  E1C010B0  STRH        R1,[R0,#0x0]
 00003074          L_5:
 00003074  E59F0034  LDR         R0,[PC,+52] ; PoolRef @0x30B0
 00003078  E5D00000  LDRB        R0,[R0,#0x0]
 0000307C  E3100080  TST         R0,#0x0080
 00003080  0AFFFFFB  BEQ         L_5  ; Targ=0x3074
 00003084  E59F0024  LDR         R0,[PC,+36] ; PoolRef @0x30B0
 00003088  E5D01000  LDRB        R1,[R0,#0x0]
 0000308C  ---- Variable 'c' assigned to Register 'R1' ----
 0000308C  E59F0018  LDR         R0,[PC,+24] ; PoolRef @0x30AC
 00003090  E1D010B0  LDRH        R1,[R0,#0x0]
 00003094  E1A01C01  MOV         R1,R1,LSL #24
 00003098  E1A01C21  MOV         R1,R1,LSR #24
 0000309C  E1A00001  MOV         R0,R1 ; c
 000030A0  E1A00C00  MOV         R0,R0,LSL #24 ; c
 000030A4  E1A00C20  MOV         R0,R0,LSR #24
 000030A8            ; SCOPE-END
 000030A8  E12FFF1E  BX          R14
 000030AC            ; END 'SPI_char?A'

 000030AC  E0020008  DD          0xE0020008		; POOL-Entry U=2
 000030B0  E0020004  DD          0xE0020004		; POOL-Entry U=2

*** Disassembly of Segment '?PR?delay_Nx10cyc?A?Utility':
 FILE: '..\Utility.c'
 000030B4          delay_Nx10cyc?A:  ; FUNCTION START
 000030B4  ---- Variable 'cnt' assigned to Register 'R0' ----
 000030B4  EA000003  B           L_32  ; Targ=0x30C8
 000030B8          L_34:
 000030B8  E1A00000  NOP       
 000030BC  E1A00000  NOP       
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 58


 000030C0  E1A00000  NOP       
 000030C4  E1A00000  NOP       
 000030C8          L_32:
 000030C8  E1A01000  MOV         R1,R0 ; cnt
 000030CC  E2410001  SUB         R0,R1,#0x0001 ; cnt
 000030D0  E3510000  CMP         R1,#0x0000 ; cnt
 000030D4  1AFFFFF7  BNE         L_34  ; Targ=0x30B8
 000030D8  E12FFF1E  BX          R14
 000030DC            ; END 'delay_Nx10cyc?A'


*** Disassembly of Segment '?C?FIQ':
 FILE: 'fiq.s'
 000030DC            ; SCOPE-START
 000030DC  EAFFFFFE  B           $  ; Targ=0x30DC
 000030E0            ; SCOPE-END

*** Disassembly of Segment '?C?IRQ':
 FILE: 'irq.s'
 000030E0            ; SCOPE-START
 000030E0  EAFFFFFE  B           $  ; Targ=0x30E0
 000030E4            ; SCOPE-END

*** Disassembly of Segment '?C?DABT':
 FILE: 'dabt.s'
 000030E4            ; SCOPE-START
 000030E4  EAFFFFFE  B           $  ; Targ=0x30E4
 000030E8            ; SCOPE-END

*** Disassembly of Segment '?C?PABT':
 FILE: 'pabt.s'
 000030E8            ; SCOPE-START
 000030E8  EAFFFFFE  B           $  ; Targ=0x30E8
 000030EC            ; SCOPE-END

*** Disassembly of Segment '?C?UNDEF':
 FILE: 'swi.s'
 000030EC            ; SCOPE-START
 000030EC  EAFFFFFE  B           $  ; Targ=0x30EC
 000030F0            ; SCOPE-END
 000030F0            ; SCOPE-START
 000030F0  EAFFFFFE  B           $  ; Targ=0x30F0
 000030F4            ; SCOPE-END

*** Disassembly of Segment '?PR?memcpy?T?memcpy':
 FILE: 'func\memcpy.c'
 000030F4          memcpy?A PROC ARM   
 000030F4  E59FC000  LDR         R12,[R15]
 000030F8  E12FFF1C  BX          R12
 000030FC  00003101  DD          memcpy?T
 00003100          ENDP      

 00003100          memcpy?T:  ; FUNCTION START
 00003100  B430      PUSH        {R4-R5}
 00003102  ---- Variable 'len' assigned to Register 'R2' ----
 00003102  ---- Variable 's2' assigned to Register 'R1' ----
 00003102  1C03      MOV         R3,R0 ; s1
 00003104  ---- Variable 's1' assigned to Register 'R3' ----
 00003104            ; SCOPE-START
 00003104  1C18      MOV         R0,R3 ; s1
 00003106  ---- Variable 's0' assigned to Register 'R0' ----
 00003106  E005      B           L_1  ; T=0x00003114
 00003108          L_3:
 00003108  1C0C      MOV         R4,R1 ; s2
 0000310A  7825      LDRB        R5,[R4,#0x0] ; s2
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 59


 0000310C  1C04      MOV         R4,R0 ; s0
 0000310E  7025      STRB        R5,[R4,#0x0] ; s0
 00003110  3101      ADD         R1,#0x1
 00003112  3001      ADD         R0,#0x1
 00003114          L_1:
 00003114  1C14      MOV         R4,R2 ; len
 00003116  3A01      SUB         R2,#0x1
 00003118  2C00      CMP         R4,#0x0 ; len
 0000311A  D1F5      BNE         L_3  ; T=0x00003108
 0000311C  1C18      MOV         R0,R3 ; s1
 0000311E            ; SCOPE-END
 0000311E  BC30      POP         {R4-R5}
 00003120  4770      BX          R14
 00003122            ; END 'memcpy?T'

 00003122            ALIGN       4

*** Disassembly of Segment '?PR?memcmp?T?memcmp':
 FILE: 'func\memcmp.c'
 00003124          memcmp?A PROC ARM   
 00003124  E59FC000  LDR         R12,[R15]
 00003128  E12FFF1C  BX          R12
 0000312C  00003131  DD          memcmp?T
 00003130          ENDP      

 00003130          memcmp?T:  ; FUNCTION START
 00003130  B430      PUSH        {R4-R5}
 00003132  1C14      MOV         R4,R2 ; len
 00003134  ---- Variable 'len' assigned to Register 'R4' ----
 00003134  ---- Variable 's2' assigned to Register 'R1' ----
 00003134  1C03      MOV         R3,R0 ; s1
 00003136  ---- Variable 's1' assigned to Register 'R3' ----
 00003136          L_3:
 00003136  1C20      MOV         R0,R4 ; len
 00003138  2800      CMP         R0,#0x0 ; len
 0000313A  D101      BNE         L_5  ; T=0x00003140
 0000313C  2000      MOV         R0,#0x0
 0000313E  E00C      B           L_6  ; T=0x0000315A
 00003140          L_5:
 00003140  3C01      SUB         R4,#0x1
 00003142  1C08      MOV         R0,R1 ; s2
 00003144  7805      LDRB        R5,[R0,#0x0] ; s2
 00003146  1C18      MOV         R0,R3 ; s1
 00003148  7802      LDRB        R2,[R0,#0x0] ; s1
 0000314A  42AA      CMP         R2,R5
 0000314C  D002      BEQ         L_7  ; T=0x00003154
 0000314E  1B52      SUB         R2,R5
 00003150  1C10      MOV         R0,R2
 00003152  E002      B           L_6  ; T=0x0000315A
 00003154          L_7:
 00003154  3301      ADD         R3,#0x1
 00003156  3101      ADD         R1,#0x1
 00003158  E7ED      B           L_3  ; T=0x00003136
 0000315A          L_6:
 0000315A  BC30      POP         {R4-R5}
 0000315C  4770      BX          R14
 0000315E            ; END 'memcmp?T'

 0000315E            ALIGN       4

*** Disassembly of Segment '?PR?C?UDIV':
 FILE: 'udiv.s'
 00003160            ; SCOPE-START
 00003160  4778      BX          R15
 00003162  46C0      NOP         ; MOV R8,R8
LARM LINKER/LOCATER V2.53                                                             04/25/2009  14:43:42  PAGE 60


 00003164            ; SCOPE-END
 00003164            ; SCOPE-START
 00003164  E3A0C000  MOV         R12,#0x0000
 00003168  E1B08001  MOVS        R8,R1
 0000316C  0A00000A  BEQ         DIV_0  ; Targ=0x319C
 00003170          just_l:
 00003170  E15800A0  CMP         R8,R0,LSR #1
 00003174  91A08088  MOVLS       R8,R8,LSL #1
 00003178  3AFFFFFC  BCC         just_l  ; Targ=0x3170
 0000317C          div_l:
 0000317C  E1500008  CMP         R0,R8
 00003180  E0ACC00C  ADC         R12,R12,R12
 00003184  20400008  SUBCS       R0,R0,R8
 00003188  E1380001  TEQ         R8,R1
 0000318C  11A080A8  MOVNE       R8,R8,LSR #1
 00003190  1AFFFFF9  BNE         div_l  ; Targ=0x317C
 00003194  E1A0100C  MOV         R1,R12
 00003198  E12FFF1E  BX          R14
 0000319C          DIV_0:
 0000319C  E3E01000  MVN         R1,#0x0000
 000031A0  E3A00000  MOV         R0,#0x0000
 000031A4  E12FFF1E  BX          R14
 000031A8            ; SCOPE-END
