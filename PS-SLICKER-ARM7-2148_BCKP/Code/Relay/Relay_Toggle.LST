ARM COMPILER V2.53,  Relay_Toggle                                                          24/03/10  11:34:52  PAGE 1   


ARM COMPILER V2.53, COMPILATION OF MODULE Relay_Toggle
OBJECT MODULE PLACED IN .\OUt\Relay_Toggle.obj
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe Relay_Toggle.c THUMB BROWSE DEBUG TABS(4) OBJECT(.\OUt\Relay_Toggle.obj) 

stmt  level    source

    1          /***********************************************************************************************
    2          ;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||;
    3          ;||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Important Note ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||;
    4          ;||~                                                                                        ~||;
    5          ;||~        This part of the software coding is the sole property of the company!           ~||;
    6          ;||~        Any unauthorized re-usage or transformation of this code is prohibited.         ~||;
    7          ;||~                                                                                        ~||;
    8          ;||~                © Pantech Solutions Pvt Ltd. | All rights Reserved                      ~||;
    9          ;||~                                                                                        ~||;
   10          ;||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||;
   11          ;||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||;
   12          ;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||;
   13          ;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||;
   14          ;||                                                                                          ||;
   15          ;|| Title       : Relay_Toggle.c                                                             ||;
   16          ;|| Status      : Completed!                                                                 ||;
   17          ;|| Features    : Port pin is toggled to trun On and OFF the Buzzer                          ||;
   18          ;|| Description : OUTPUTS (Relay1 || Relay2)                                                 ||;
   19          :||               P1.20 -   RELAY 1                                                          ||;
   20          ;||               P1.21 -   RELAY 2                                                          ||;
   21          ;||               Oscillator     :  12MHz                                                    ||;
   22          ;||                                                                                          ||;
   23          ;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||;
   24          /***********************************************************************************************/
   25          
   26          //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<      DIRECTIVES       >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   27          #include <lpc21xx.h>
   28          #include <stdio.h>
   29          
   30          
   31          
   32          #define RLY1    20  //RLY1 (P1.20)
   33          #define RLY2    21  //RLY2 (P1.21)
   34          
   35          
   36          void Delay()
   37          {
   38   1          unsigned int i,j;
   39   1          for(i=0;i<2000;i++)
   40   1              for(j=0;j<900;j++);
   41   1      }
   42          //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<    Main Code Begins   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   43          
   44          void main(void)
   45          {
   46   1      
   47   1          PINSEL2 =   0x00;
   48   1      
   49   1          IODIR1 = 1 << RLY1;     //Configure P1.20 Output
   50   1          IODIR1 |= 1 << RLY2;    //Configure P1.21 Output
   51   1      
   52   1      
   53   1          while(1)                //loop forever
   54   1          {
   55   2      
   56   2                  IOSET1  =   1 << RLY1;
   57   2                  Delay();
   58   2                  IOCLR1  =   1 << RLY1;
   59   2                  Delay();
ARM COMPILER V2.53,  Relay_Toggle                                                          24/03/10  11:34:52  PAGE 2   

   60   2                  IOSET1  =   1 << RLY2;
   61   2                  Delay();
   62   2                  IOCLR1  =   1 << RLY2;
   63   2                  Delay();
   64   2      
   65   2      
   66   2          }
   67   1      
   68   1      }
ARM COMPILER V2.53,  Relay_Toggle                                                          24/03/10  11:34:52  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         Delay?T
 PUBLIC         main



*** CODE SEGMENT '?PR?Delay?T?Relay_Toggle':
   37: {
 00000000            ; SCOPE-START
   39:     for(i=0;i<2000;i++)
 00000000  2000      MOV         R0,#0x0
 00000002  ---- Variable 'i' assigned to Register 'R0' ----
   40:         for(j=0;j<900;j++);
 00000002          L_10:
 00000002  2100      MOV         R1,#0x0
 00000004  ---- Variable 'j' assigned to Register 'R1' ----
 00000004          L_6:
 00000004  3101      ADD         R1,#0x1
 00000006  1C0A      MOV         R2,R1 ; j
 00000008  4BE1      LDR         R3,=0x384
 0000000A  429A      CMP         R2,R3 ; j
 0000000C  D3FA      BCC         L_6  ; T=0x00000004
 0000000E  3001      ADD         R0,#0x1
 00000010  1C01      MOV         R1,R0 ; i
 00000012  4800      LDR         R2,=0x7D0
 00000014  4291      CMP         R1,R2 ; i
 00000016  D3F4      BCC         L_10  ; T=0x00000002
 00000018            ; SCOPE-END
   41: }
 00000018  4770      BX          R14
 0000001A          ENDP ; 'Delay?T'


*** CODE SEGMENT '?PR?main?Relay_Toggle':
   44: void main(void)
 00000000  B500      PUSH        {LR}
   47:     PINSEL2 =   0x00;
 00000002  2100      MOV         R1,#0x0
 00000004  4800      LDR         R0,=0xE002C014
 00000006  6001      STR         R1,[R0,#0x0]
   49:     IODIR1 = 1 << RLY1;     //Configure P1.20 Output
 00000008  4800      LDR         R1,=0x100000
 0000000A  4800      LDR         R0,=0xE0028018
 0000000C  6001      STR         R1,[R0,#0x0]
   50:     IODIR1 |= 1 << RLY2;    //Configure P1.21 Output
 0000000E  4800      LDR         R2,=0x200000
 00000010  4800      LDR         R0,=0xE0028018
 00000012  6801      LDR         R1,[R0,#0x0]
 00000014  4311      ORR         R1,R2
 00000016  6001      STR         R1,[R0,#0x0]
   53:     while(1)                //loop forever
 00000018          L_13:
   56:             IOSET1  =   1 << RLY1;
 00000018  4800      LDR         R4,=0x100000
 0000001A  4800      LDR         R0,=0xE0028014
 0000001C  6004      STR         R4,[R0,#0x0]
   57:             Delay();
 0000001E  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000020  FFEF      BL          Delay?T  ; T=0x0001  (2)
   58:             IOCLR1  =   1 << RLY1;
 00000022  4800      LDR         R0,=0xE002801C
 00000024  6004      STR         R4,[R0,#0x0]
   59:             Delay();
 00000026  F7FF      BL          Delay?T  ; T=0x0001  (1)
ARM COMPILER V2.53,  Relay_Toggle                                                          24/03/10  11:34:52  PAGE 4   

 00000028  FFEB      BL          Delay?T  ; T=0x0001  (2)
   60:             IOSET1  =   1 << RLY2;
 0000002A  4800      LDR         R4,=0x200000
 0000002C  4800      LDR         R0,=0xE0028014
 0000002E  6004      STR         R4,[R0,#0x0]
   61:             Delay();
 00000030  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000032  FFE6      BL          Delay?T  ; T=0x0001  (2)
   62:             IOCLR1  =   1 << RLY2;
 00000034  4800      LDR         R0,=0xE002801C
 00000036  6004      STR         R4,[R0,#0x0]
   63:             Delay();
 00000038  F7FF      BL          Delay?T  ; T=0x0001  (1)
 0000003A  FFE2      BL          Delay?T  ; T=0x0001  (2)
   66:     }
 0000003C  E7EC      B           L_13  ; T=0x00000018
 0000003E  BC08      POP         {R3}
 00000040  4718      BX          R3
 00000042          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
